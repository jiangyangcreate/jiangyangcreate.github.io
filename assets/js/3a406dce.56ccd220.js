"use strict";(self.webpackChunkjiangmiemie=self.webpackChunkjiangmiemie||[]).push([[6833],{16147:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var s=t(77191),a=t(74848),i=t(28453);const r={title:"\u673a\u5668\u5b66\u4e60\u4e0eLLM\u8206\u60c5\u5206\u6790",date:"2024-8-30",authors:"jiangmiemie",tags:["python"],keywords:["python"],description:"\u673a\u5668\u5b66\u4e60\u4e0eLLM\u8206\u60c5\u5206\u6790"},l=void 0,o={authorsImageUrls:[void 0]},d=[{value:"\u9879\u76ee\u76ee\u5f55\u7ed3\u6784",id:"\u9879\u76ee\u76ee\u5f55\u7ed3\u6784",level:2},{value:"\u4f7f\u7528\u6d41\u7a0b",id:"\u4f7f\u7528\u6d41\u7a0b",level:2},{value:"\u4f9d\u8d56\u5b89\u88c5",id:"\u4f9d\u8d56\u5b89\u88c5",level:3},{value:"\u4e3b\u8981\u529f\u80fd",id:"\u4e3b\u8981\u529f\u80fd",level:3},{value:"\u6570\u636e\u5b58\u50a8",id:"\u6570\u636e\u5b58\u50a8",level:3},{value:"\u6570\u636e\u53ef\u89c6\u5316",id:"\u6570\u636e\u53ef\u89c6\u5316",level:3}];function p(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.p,{children:"\u8be5\u9879\u76ee\u9002\u5408\u4f5c\u4e3a\u5c0f\u578b\u7684\u9879\u76ee\u539f\u578b\uff0c\u9002\u5408\u6559\u5b66\u548c\u7ec3\u624b\u3002\u6700\u521d\u8fd9\u4e2a\u9879\u76ee\u7684\u7075\u611f\u6e90\u4e8e\u6211\u7684\u4e2a\u4eba\u9700\u6c42\uff0c\u6211\u9700\u8981\u4e00\u4e2a\u5de5\u5177\u6765\u67e5\u770b\u4e3b\u6d41\u8bdd\u9898\uff0c\u540c\u65f6\u53c8\u4e0d\u60f3\u4e0b\u8f7d\u4e00\u5806 APP \u6765\u63a5\u6536\u63a8\u9001\u3002"}),"\n",(0,a.jsxs)(e.p,{children:["\u9879\u76ee\u5f00\u6e90\u5730\u5740\uff1a",(0,a.jsx)(e.a,{href:"https://github.com/jiangyangcreate/AI-Practice-Collection/tree/main/SocailMood",children:"https://github.com/jiangyangcreate/AI-Practice-Collection/SocialMood"})]}),"\n",(0,a.jsx)(e.h2,{id:"\u9879\u76ee\u76ee\u5f55\u7ed3\u6784",children:"\u9879\u76ee\u76ee\u5f55\u7ed3\u6784"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",metastring:"showLineNumbers",children:"SocialMood/\n\u251c\u2500\u2500 docs/              # \u6587\u6863\u548c\u9759\u6001\u9875\u9762\u76ee\u5f55\n\u2502   \u2514\u2500\u2500 index.html     # \u6570\u636e\u53ef\u89c6\u5316\u7684\u9759\u6001\u9875\u9762\uff0c\u5c55\u793a\u8bcd\u4e91\u56fe\u7b49\u56fe\u8868\n\u251c\u2500\u2500 src/               # Python\u4ee3\u7801\u4e3b\u76ee\u5f55\n\u2502   \u251c\u2500\u2500 _dataclean.py       # \u6570\u636e\u6e05\u6d17\u811a\u672c\uff0c\u8d1f\u8d23\u6570\u636e\u6e05\u6d17\u548c\u5904\u7406\n\u2502   \u251c\u2500\u2500 _model.py     # \u6a21\u578b\u811a\u672c\uff0c\u8d1f\u8d23\u60c5\u7eea\u5206\u6790\n\u2502   \u251c\u2500\u2500 _pyechart.py    # \u6570\u636e\u53ef\u89c6\u5316\u811a\u672c\uff0c\u8d1f\u8d23\u6570\u636e\u53ef\u89c6\u5316\n\u2502   \u251c\u2500\u2500 _database.py    # \u6570\u636e\u5e93\u64cd\u4f5c\u6a21\u5757\uff0c\u5904\u7406SQLite\u6570\u636e\u5b58\u50a8\n\u251c\u2500\u2500 README.MD           # \u9879\u76ee\u8bf4\u660e\u6587\u6863\uff0c\u5305\u542b\u9879\u76ee\u4ecb\u7ecd\u548c\u4f7f\u7528\u8bf4\u660e\n\u251c\u2500\u2500 .gitignore         # Git\u5ffd\u7565\u6587\u4ef6\u914d\u7f6e\uff0c\u7528\u4e8e\u6392\u9664\u4e0d\u9700\u8981\u7248\u672c\u63a7\u5236\u7684\u6587\u4ef6\n\u251c\u2500\u2500 .nojekyll         # \u7528\u4e8eGitHub Pages\u7684\u914d\u7f6e\u6587\u4ef6\n\u251c\u2500\u2500 requirements.txt # Python\u4f9d\u8d56\u5305\u5217\u8868\n\u251c\u2500\u2500 setup.py # \u9879\u76ee\u4f9d\u8d56\u5b89\u88c5\u811a\u672c\uff0c\u8d1f\u8d23\u5b89\u88c5\u5fc5\u8981\u7684\u5305\u548c\u6a21\u578b\n\u251c\u2500\u2500 run.py # \u9879\u76ee\u8fd0\u884c\u811a\u672c\uff0c\u8d1f\u8d23\u8fd0\u884c\u722c\u866b\u548c\u6570\u636e\u5904\u7406\n\u251c\u2500\u2500 news.db # SQLite\u6570\u636e\u5e93\u6587\u4ef6\uff0c\u5b58\u50a8\u65b0\u95fb\u6570\u636e\n"})}),"\n",(0,a.jsx)(e.h2,{id:"\u4f7f\u7528\u6d41\u7a0b",children:"\u4f7f\u7528\u6d41\u7a0b"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",metastring:"showLineNumbers",children:"# \u5b89\u88c5\u4f9d\u8d56\ncd python\npython setup.py\n\n# \u8fd0\u884c\u6570\u636e\u6293\u53d6\uff0c\u751f\u6210\u9759\u6001\u7f51\u9875\npython run.py\n"})}),"\n",(0,a.jsx)(e.h3,{id:"\u4f9d\u8d56\u5b89\u88c5",children:"\u4f9d\u8d56\u5b89\u88c5"}),"\n",(0,a.jsxs)(e.p,{children:["\u6240\u9700\u4f9d\u8d56\u53ef\u4ee5\u901a\u8fc7 ",(0,a.jsx)(e.code,{children:"setup.py"})," \u4e0b\u8f7d\u5b89\u88c5\u3002\u56e0\u4e3a\u6709\u4e9b\u6a21\u5757\u4e0d\u662fpip\u5c31\u7b97\u5b89\u88c5\u597d\u7684\u3002"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",metastring:'title="setup.py" showLineNumbers',children:'import subprocess\nimport sys\nimport nltk\n\n\ndef install_requirements():\n    print("\u6b63\u5728\u5b89\u88c5\u4f9d\u8d56...")\n    subprocess.check_call([sys.executable, "-m", "pip", "install", "-r", "requirements.txt"])\n\ndef install_browser():\n    print("\u6b63\u5728\u5b89\u88c5\u6d4f\u89c8\u5668...")\n    subprocess.check_call([sys.executable, "-m", "playwright", "install"])\n\ndef download_nltk_data():\n    print("\u6b63\u5728\u4e0b\u8f7dNLTK\u8bcd\u5178\u6587\u4ef6...")\n    nltk.download(\'vader_lexicon\')\n\ndef download_model():\n    try:\n        import ollama\n        ollama.pull(\'qwen2.5\')\n    except Exception as e:\n        print(f"\u4e0b\u8f7d\u6a21\u578b\u5931\u8d25\uff1a{e}")\n\ndef main():\n    try:\n        install_requirements()\n        install_browser()\n        download_nltk_data()\n        download_model()\n        print("\u6240\u6709\u5b89\u88c5\u6b65\u9aa4\u5df2\u5b8c\u6210\uff01")\n    except subprocess.CalledProcessError as e:\n        print(f"\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u9519\u8bef\uff1a{e}")\n        sys.exit(1)\n\nif __name__ == "__main__":\n    main()\n\n'})}),"\n",(0,a.jsx)(e.h3,{id:"\u4e3b\u8981\u529f\u80fd",children:"\u4e3b\u8981\u529f\u80fd"}),"\n",(0,a.jsx)(e.p,{children:"\u8be5\u7cfb\u7edf\u7684\u4e3b\u8981\u529f\u80fd\u5305\u62ec\uff1a"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"\u6293\u53d6\u70ed\u641c\u6570\u636e"}),"\uff1a\u4ece\u5fae\u535a\u3001\u6296\u97f3\u3001B\u7ad9\u7b49\u5e73\u53f0\u6293\u53d6\u70ed\u641c\u6570\u636e\u3002"]}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u901a\u8fc7API\u83b7\u53d6\uff0c\u722c\u53d6\u6ce8\u610f\u4e0d\u8981\u53d8\u6210DDOS\u653b\u51fb\u3002"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"\u6570\u636e\u5904\u7406"}),"\uff1a\u4f7f\u7528 Pandas \u8fdb\u884c\u6570\u636e\u6e05\u6d17\u4e0e\u5904\u7406\u3002"]}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"\u4f7f\u7528pandas\u4e3b\u8981\u662f\u5904\u7406\u4e00\u4e9b\u6587\u672c\u578b\u7684\u6570\u636e\uff0c\u8b6c\u598210\u4e07\u8981\u6362\u7b97\u4e3a100000\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u4f7f\u7528jieba\u5206\u8bcd\u7528\u4e8e\u540e\u7eed\u8bcd\u4e91\u56fe\u751f\u6210\uff0c\u9700\u8981\u5254\u9664\u4e00\u4e9b\u5355\u5b57\u4e0e\u6807\u70b9\u7b26\u53f7\u3002\u5f53\u7136\uff0c\u6700\u8fd1b\u7ad9\u5f88\u559c\u6b22\u5728\u6807\u9898\u4e2d\u52a0\u7a7a\u683c\uff0c\u6240\u4ee5\u8981\u5148\u53bb\u7a7a\u683c\u518d\u5206\u8bcd\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u6709\u4e9b\u6570\u636e\u7684\u70ed\u5ea6\u503c\u8fd8\u6ca1\u8ba1\u7b97\u51fa\u6765\uff0c\u53ef\u4ee5\u4f7f\u7528\u5e42\u5f8b\u5206\u5e03\u7684\u7ebf\u6027\u56de\u5f52\u586b\u8865\u70ed\u5ea6\u7f3a\u5931\u503c\u3002\u8fd9\u91cc\u4f7f\u7528\u6307\u6570\u56de\u5f52\u3001\u666e\u901a\u7ebf\u6027\u56de\u5f52\u6548\u679c\u90fd\u4e0d\u597d\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u5e42\u5f8b\u5206\u5e03\u5e38\u89c1\u7684\u6837\u5b50\uff1a\u4e2a\u4ebaUP\u4e3b\u7c89\u4e1d\u6392\u540d\u524d\u51e0\u540d\u7c89\u4e1d\u5dee\u8ddd\u6709\u767e\u4e07\uff0c\u50cf\u6307\u6570\u5206\u5e03\u3002\u4f46\u662f\u540e\u7eed\u6392\u540d\u7684up\u7c89\u4e1d\u5dee\u8ddd\u5c31\u5f88\u5c0f\uff0c\u63a5\u8fd1\u7ebf\u6027\u5206\u5e03\u3002\u5982\u679c\u6211\u968f\u673a\u6263\u6389\u4e00\u4e2a\u6392\u540d\u7684up\u4e3b\u7684\u7c89\u4e1d\u6570\uff0c\u8ba9\u4f60\u9884\u6d4b\uff0c\u4f60\u53ef\u4ee5\u9884\u6d4b\u591a\u51c6\u3002\u6211\u9762\u5bf9\u7684\u5927\u6982\u5c31\u662f\u8fd9\u6837\u7684\u4e00\u4e2a\u95ee\u9898\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u4e0b\u9762\u662f\u6211\u7684\u89e3\u51b3\u65b9\u6848\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",metastring:'title="src/_dataclean.py" showLineNumbers ',children:'def estimate_missing_heat(self):\n    """\u4f30\u7b97\u7f3a\u5931\u7684\u70ed\u5ea6\u503c"""\n    features = ["\u6392\u540d"]\n\n    target = "\u5904\u7406\u540e\u70ed\u5ea6"\n\n    def impute_group(group):\n        X = group[features]\n        y = group[target]\n\n        # \u5982\u679c\u6ca1\u6709\u7f3a\u5931\u503c\uff0c\u76f4\u63a5\u8fd4\u56de\u539f\u59cb\u7ec4\n        if not y.isnull().any():\n            return group\n\n        # \u5e42\u5f8b\u5206\u5e03\u62df\u5408\uff08\u901a\u8fc7\u5bf9\u6570\u53d8\u6362\u5b9e\u73b0\uff09\n        X_train = X[y.notnull()]\n        y_train = y[y.notnull()]\n\n        # \u5c06 X_train \u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\u7c7b\u578b\n        X_train = X_train.astype(float)\n\n        # \u5bf9X\u548cy\u8fdb\u884c\u5bf9\u6570\u53d8\u6362\uff0c\u5904\u7406\u53ef\u80fd\u7684\u96f6\u503c\n        log_X_train = np.log(X_train + 1)\n        log_y_train = np.log(y_train + 1)\n\n        lr = LinearRegression()\n        lr.fit(log_X_train, log_y_train)\n\n        # \u83b7\u53d6\u62df\u5408\u7684\u7cfb\u6570\n        slope = lr.coef_[0]\n        intercept = lr.intercept_\n        # print(f"\u62df\u5408\u7684\u5e42\u5f8b\u65b9\u7a0b\u4e3a: y = {np.exp(intercept):.2f} * x^{slope:.2f}")\n\n        # \u9884\u6d4b\u7f3a\u5931\u503c\n        X_missing = X[y.isnull()]\n        if not X_missing.empty:\n            # \u5c06 X_missing \u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\n            X_missing = X_missing.astype(float)\n            log_X_missing = np.log(X_missing + 1)\n            log_predictions = lr.predict(log_X_missing)\n            predictions = np.exp(log_predictions) - 1  # \u53cd\u5411\u53d8\u6362\n\n            # \u786e\u4fdd\u9884\u6d4b\u503c\u4e0d\u5c0f\u4e8e0\n            predictions = np.maximum(predictions, 0)\n\n            # \u786e\u4fdd\u9884\u6d4b\u503c\u7b26\u5408\u6392\u540d\u987a\u5e8f\n            for i, pred in enumerate(predictions):\n                rank = X_missing.iloc[i]["\u6392\u540d"]\n                higher_ranks = y[(X["\u6392\u540d"] < rank) & y.notnull()]\n                lower_ranks = y[(X["\u6392\u540d"] > rank) & y.notnull()]\n\n                if len(higher_ranks) > 0:\n                    pred = min(pred, higher_ranks.min())\n                if len(lower_ranks) > 0:\n                    pred = max(pred, lower_ranks.max())\n\n                predictions[i] = pred\n\n            group.loc[y.isnull(), target] = predictions\n\n        return group\n\n    # \u5bf9\u6bcf\u4e2a\u4fe1\u606f\u6765\u6e90\u5206\u522b\u8fdb\u884c\u7f3a\u5931\u503c\u586b\u5145\n    self.df = self.df.groupby("\u4fe1\u606f\u6765\u6e90").apply(impute_group)\n\n    # \u5220\u9664\u4ecd\u7136\u4e3aNone\u7684\u884c\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\n    self.df = self.df.dropna(subset=["\u5904\u7406\u540e\u70ed\u5ea6"])\n    self.df["\u5904\u7406\u540e\u70ed\u5ea6"] = self.df["\u5904\u7406\u540e\u70ed\u5ea6"].astype(int)\n'})}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"\u60c5\u7eea\u5206\u6790"}),"\uff1a\u76d1\u6d4b\u548c\u5206\u6790\u516c\u4f17\u60c5\u7eea\u3002\u7b97\u51fa\u5355\u6761\u6807\u9898\u7684\u60c5\u7eea\u6570\u503c\u4e4b\u540e\uff0c\u6807\u51c6\u5316\u5230 ",(0,a.jsx)(e.code,{children:"(-1,1)"})," \u8fd9\u4e2a\u533a\u95f4\u4e4b\u4e2d\u3002\u6700\u540e\u901a\u8fc7\u70ed\u5ea6\u4e0e\u6392\u540d\u8ba1\u7b97\u51fa\u5bf9\u793e\u4f1a\u7684\u60c5\u611f\u5f71\u54cd\u529b\u3002\u6b63\u6570\u6570\u5219\u662f\u79ef\u6781\u5f71\u54cd\uff0c\u8d1f\u6570\u5219\u662f\u8d1f\u9762\u5f71\u54cd\u3002"]}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"\u5982\u679c\u4f60\u7684\u7535\u8111\u6027\u80fd\u8fd8\u4e0d\u9519\uff0c\u53ef\u4ee5\u4f7f\u7528\u672c\u5730\u6a21\u578b\u4f5c\u4e3a\u60c5\u7eea\u5206\u6790\u7684\u6838\u5fc3\uff0c\u6839\u636e\u81ea\u5df1\u7684\u8bbe\u5907\u9009\u62e9\u6a21\u578b\u5927\u5c0f\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",metastring:'title="src/_model.py" showLineNumbers',children:'class Model:\n    @classmethod\n    def get_sentiment_score(cls,text):\n\n        prompt = "\u8bf7\u4ec5\u5bf9\u7528\u6237\u63d0\u4f9b\u7684\u53e5\u5b50\u8fdb\u884c\u60c5\u611f\u8bc4\u5206\uff0c\u5e76\u8fd4\u56de\u4ecb\u4e8e-1\u52301\u4e4b\u95f4\u7684\u5206\u6570\u3002-1\u8868\u793a\u975e\u5e38\u8d1f\u9762\uff0c1\u8868\u793a\u975e\u5e38\u6b63\u9762\uff0c0\u8868\u793a\u4e2d\u7acb\u3002\u65e0\u9700\u63d0\u4f9b\u5176\u4ed6\u4fe1\u606f\u6216\u4e0a\u4e0b\u6587\u3002"\n\n        messages = [\n            {"role": "system", "content": prompt},\n            {"role": "user", "content": text}\n        ]\n        response: ChatResponse = chat(model=\'qwen2.5\', messages=messages)\n        return float(response.message.content)\n'})}),"\n",(0,a.jsx)(e.h3,{id:"\u6570\u636e\u5b58\u50a8",children:"\u6570\u636e\u5b58\u50a8"}),"\n",(0,a.jsxs)(e.p,{children:["\u7cfb\u7edf\u4f7f\u7528 ",(0,a.jsx)(e.code,{children:"sqlite3"})," \u4fdd\u5b58\u4e2d\u95f4\u6570\u636e\uff0c\u6b64\u90e8\u5206\u4e3a\u57fa\u672c\u7684\u589e\u5220\u6539\u67e5\uff0c\u76f8\u5173\u4ee3\u7801\u5728 ",(0,a.jsx)(e.code,{children:"_database.py"})," \u4e2d\uff0c\u6570\u636e\u6587\u4ef6\u4e3a ",(0,a.jsx)(e.code,{children:"news.db"}),"\uff0c\u5305\u542b\u4e24\u5f20\u8868\uff1a"]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"news"}),"\uff1a\u6e05\u6d17\u540e\u7684\u53ef\u7528\u6570\u636e\u3002"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"raw_html"}),"\uff1a\u539f\u59cb\u7f51\u9875\u6570\u636e\u3002"]}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u901f\u5ea6\u7684\u540c\u65f6\uff0c\u53ef\u4ee5\u4fdd\u6301\u6587\u4ef6\u5939\u7684\u6574\u6d01\uff0c\u5982\u679c\u6570\u636e\u91cf\u5927\u53ef\u4ee5\u76f4\u63a5\u5e73\u6ed1\u7684\u8fc1\u79fb\u5230\u6b63\u5f0f\u6570\u636e\u5e93\u4e2d\u3002"}),"\n",(0,a.jsx)(e.h3,{id:"\u6570\u636e\u53ef\u89c6\u5316",children:"\u6570\u636e\u53ef\u89c6\u5316"}),"\n",(0,a.jsx)(e.p,{children:"\u63a5\u4e0b\u6765\u7ed8\u5236\u4e00\u4e9b\u56fe\u8868\uff0c\u5305\u62ec\uff1a"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"\u5404\u4e2a\u5e73\u53f0\u7684\u60c5\u7eea\u7ea2\u7eff\u56fe\u3002"}),"\n",(0,a.jsx)(e.li,{children:"\u516c\u4f17\u60c5\u7eea\u7684\u6da8\u8dcc\u6298\u7ebf\u56fe\u3002"}),"\n",(0,a.jsx)(e.li,{children:"\u6bcf\u65e5\u5168\u7f51\u8bcd\u4e91\u56fe\u3002"}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"\u901a\u8fc7pyecharts\u7684\u811a\u624b\u67b6\uff0c\u5bfc\u51fa\u4e3a\u9759\u6001\u7f51\u9875\u3002\u8fd9\u91cc\u4e3a\u4e86\u4ee3\u7801\u76f4\u89c2\uff0c\u5c01\u88c5\u4e3a\u4e86\u7c7b\u3002"}),"\n",(0,a.jsxs)(e.p,{children:["\u4e3a\u4e86\u4fdd\u8bc1\u534f\u8c03\u7edf\u4e00\uff0c\u8fd9\u91cc\u5c06\u6240\u6709\u56fe\u8868\u7684\u7ed8\u5236\u90fd\u5c01\u88c5\u5230\u4e86\u4e00\u4e2a\u7c7b\u4e2d\uff0c\u90fd\u4f7f\u7528pyecharts\u3002table\u7684\u7ed8\u5236\u4f7f\u7528pyecharts\u7684components\u7684Table\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u9ed8\u8ba4\u4f1a\u5c06\u8d85\u94fe\u63a5\u8f6c\u4e49\uff0c\u67e5\u770b\u6e90\u4ee3\u7801\u53d1\u73b0\u5185\u5bb9\u6709\u4e00\u4e2a\u53c2\u6570 escape_data \u7528\u4e8e\u8bbe\u7f6e\u662f\u5426\u8f6c\u4e49\u3002\u4f46\u662f\u6ca1\u6709\u88ab\u66b4\u9732\u51fa\u6765\uff0c\u5df2\u7ecf\u63d0\u4ea4\u4e86",(0,a.jsx)(e.a,{href:"https://github.com/pyecharts/pyecharts/pull/2416/files",children:"PR"}),"\uff0c\u5982\u679c\u4f60\u7684escape_data=False\u62a5\u9519\uff0c\u53ef\u4ee5\u81ea\u5df1\u4fee\u6539\u6e90\u4ee3\u7801\u3002"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",metastring:'title="src/_pyechart.py" showLineNumbers',children:'from pyecharts.charts import Bar, Line, Pie, WordCloud, Page\nfrom pyecharts.components import Table\nfrom pyecharts import options as opts\nimport os \nclass ChartGenerator:\n    def create_table(self,data) -> Table:\n        """Generate a table."""\n        table = Table()\n        headers = data.columns.tolist()\n        rows = data.values.tolist()\n        table.add(headers, rows,escape_data=False)\n        return table\n\n    def create_bar_chart(self, data , y_label="Sentiment",title="\u6b63\u8d1f\u9762\u60c5\u7eea") -> Bar:\n        """Generate a bar chart with positive, negative, and absolute sentiment scores."""\n\n        x_data, y_data_positive, y_data_negative, y_data_absolute = zip(*data)\n        bar = (\n            Bar()\n            .add_xaxis(x_data)\n            .add_yaxis("\u79ef\u6781", y_data_positive, stack="stack1", category_gap="50%")\n            .add_yaxis("\u6d88\u6781", y_data_negative, stack="stack2", category_gap="50%")\n            .add_yaxis("\u7edd\u5bf9\u503c", y_data_absolute, stack="stack3", category_gap="50%")\n            .set_global_opts(\n                title_opts=opts.TitleOpts(title=title, pos_left="center"),\n                xaxis_opts=opts.AxisOpts(name="\u6765\u6e90"),\n                yaxis_opts=opts.AxisOpts(name="\u60c5\u7eea\u5f97\u5206"),\n                legend_opts=opts.LegendOpts(pos_top="10%", pos_right="10%"),\n            )\n        )\n        return bar\n\n    def create_line_chart(self,data,y_label="\u60c5\u7eea\u5f97\u5206",title="\u7edd\u5bf9\u60c5\u7eea\u53d8\u5316\u6298\u7ebf\u56fe") -> Line:\n        """Generate a line chart."""\n        x_data, y_data = zip(*data) \n        line = (\n            Line()\n            .add_xaxis(x_data)\n            .add_yaxis(y_label, y_data, is_smooth=True)\n            .set_global_opts(\n                title_opts=opts.TitleOpts(title=title, pos_left="center"),\n                xaxis_opts=opts.AxisOpts(name="\u65e5\u671f"),\n                legend_opts=opts.LegendOpts(is_show=False)\n            )\n        )\n        return line\n\n    def create_pie_chart(self, data_pairs, title="\u4fe1\u606f\u6765\u6e90\u5360\u6bd4") -> Pie:\n        """Generate a pie chart."""\n        pie = (\n            Pie()\n            .add("", data_pairs)\n            .set_global_opts(\n                title_opts=opts.TitleOpts(title=title, pos_left="center"),\n                legend_opts=opts.LegendOpts(pos_bottom="0%")  # Move legend to the bottom\n            )\n            .set_series_opts(label_opts=opts.LabelOpts(formatter="{b}: {d}%"))\n        )\n        return pie\n\n    def create_wordcloud(self, words, title="\u8bcd\u4e91") -> WordCloud:\n        """Generate a word cloud."""\n        wordcloud = (\n            WordCloud()\n            .add("", words, word_size_range=[20, 100],shape="circle")\n            .set_global_opts(title_opts=opts.TitleOpts(title=title, pos_left="center"))\n        )\n        return wordcloud\n\n    def render_charts(self, charts, output_file=None):\n        """Render multiple charts to a single HTML file."""\n        if output_file is None:\n            output_file = os.path.join("docs", "index.html")\n\n        page = Page(layout=Page.SimplePageLayout)\n        page.add(*charts)\n        page.render(output_file)\n\n\n'})}),"\n",(0,a.jsx)(e.h1,{id:"\u4ee3\u7801\u8bbe\u7f6e",children:"\u4ee3\u7801\u8bbe\u7f6e"}),"\n",(0,a.jsxs)(e.p,{children:["\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u722c\u866b\u90e8\u5206\u7684\u4ee3\u7801\u53ef\u80fd\u9700\u8981\u81ea\u5df1\u4fee\u6539\u3002\u4f60\u4e5f\u53ef\u4ee5\u5728main\u51fd\u6570\u4e2d\uff0c\u5c06debug\u8bbe\u4e3aTrue\uff0c\u8fd9\u6837\u4e0d\u4f1a\u771f\u7684\u722c\u53d6\uff0c\u800c\u662f\u8c03\u7528\u672c\u5730\u7684\u5df2\u722c\u53d6\u7684\u7f51\u9875\u3002\u751f\u6210\u540e\u7684\u5185\u5bb9\u5728",(0,a.jsx)(e.code,{children:"docs/index.html"}),"\u3002"]})]})}function c(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(p,{...n})}):p(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>l});var s=t(96540);const a={},i=s.createContext(a);function r(n){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:r(n.components),s.createElement(i.Provider,{value:e},n.children)}},77191:n=>{n.exports=JSON.parse('{"permalink":"/blog/2024/8/30/","source":"@site/blog/2024-8-30.md","title":"\u673a\u5668\u5b66\u4e60\u4e0eLLM\u8206\u60c5\u5206\u6790","description":"\u673a\u5668\u5b66\u4e60\u4e0eLLM\u8206\u60c5\u5206\u6790","date":"2024-08-30T00:00:00.000Z","tags":[{"inline":true,"label":"python","permalink":"/blog/tags/python"}],"readingTime":9.69,"hasTruncateMarker":false,"authors":[{"name":"Allen","title":"normal software engineer","url":"https://github.com/jiangyangcreate","socials":{"github":"https://github.com/jiangyangcreate"},"imageURL":"https://jiangmiemie.com/img/logo-192.svg","key":"jiangmiemie","page":null}],"frontMatter":{"title":"\u673a\u5668\u5b66\u4e60\u4e0eLLM\u8206\u60c5\u5206\u6790","date":"2024-8-30","authors":"jiangmiemie","tags":["python"],"keywords":["python"],"description":"\u673a\u5668\u5b66\u4e60\u4e0eLLM\u8206\u60c5\u5206\u6790"},"unlisted":false,"prevItem":{"title":"2024\u5e74\u5e74\u672b\u603b\u7ed3\u4e0e\u56de\u987e","permalink":"/blog/2024/12/30/"},"nextItem":{"title":"\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u84dd\u7259\u901a\u4fe1\u793a\u4f8b","permalink":"/blog/2024/7/30/"}}')}}]);