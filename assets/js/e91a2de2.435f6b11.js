"use strict";(self.webpackChunkjiangmiemie=self.webpackChunkjiangmiemie||[]).push([[2904],{72430:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>i});const r=JSON.parse('{"id":"\u673a\u5668\u5b66\u4e60/\u4f20\u7edf\u7b97\u6cd5/\u6734\u7d20\u8d1d\u53f6\u65af","title":"\u6734\u7d20\u8d1d\u53f6\u65af","description":"\u6734\u7d20\u8d1d\u53f6\u65af","source":"@site/docs/docs/\u673a\u5668\u5b66\u4e60/\u4f20\u7edf\u7b97\u6cd5/\u6734\u7d20\u8d1d\u53f6\u65af.md","sourceDirName":"\u673a\u5668\u5b66\u4e60/\u4f20\u7edf\u7b97\u6cd5","slug":"/\u673a\u5668\u5b66\u4e60/\u4f20\u7edf\u7b97\u6cd5/\u6734\u7d20\u8d1d\u53f6\u65af","permalink":"/docs/\u673a\u5668\u5b66\u4e60/\u4f20\u7edf\u7b97\u6cd5/\u6734\u7d20\u8d1d\u53f6\u65af","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"title":"\u6734\u7d20\u8d1d\u53f6\u65af"},"sidebar":"tutorialSidebar","previous":{"title":"\u51b3\u7b56\u6811","permalink":"/docs/\u673a\u5668\u5b66\u4e60/\u4f20\u7edf\u7b97\u6cd5/\u51b3\u7b56\u6811"},"next":{"title":"\u652f\u6301\u5411\u91cf\u673a","permalink":"/docs/\u673a\u5668\u5b66\u4e60/\u4f20\u7edf\u7b97\u6cd5/\u652f\u6301\u5411\u91cf\u673a"}}');var a=s(74848),t=s(28453);const l={sidebar_position:7,title:"\u6734\u7d20\u8d1d\u53f6\u65af"},o=void 0,c={},i=[{value:"\u6734\u7d20\u8d1d\u53f6\u65af",id:"\u6734\u7d20\u8d1d\u53f6\u65af",level:2},{value:"\u4f7f\u7528sklearn\u6a21\u5757\u5b8c\u6210",id:"\u4f7f\u7528sklearn\u6a21\u5757\u5b8c\u6210",level:3},{value:"\u7b80\u5355\u793a\u4f8b",id:"\u7b80\u5355\u793a\u4f8b",level:3},{value:"\u6548\u679c\u8bc4\u4f30",id:"\u6548\u679c\u8bc4\u4f30",level:3},{value:"\u67e5\u770b\u5206\u7c7b\u9519\u8bef\u7684\u6837\u672c\u4fe1\u606f",id:"\u67e5\u770b\u5206\u7c7b\u9519\u8bef\u7684\u6837\u672c\u4fe1\u606f",level:3}];function d(n){const e={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h2,{id:"\u6734\u7d20\u8d1d\u53f6\u65af",children:"\u6734\u7d20\u8d1d\u53f6\u65af"}),"\n",(0,a.jsx)(e.p,{children:"\u8fd9\u4e2a\u7b97\u6cd5\u662f\u5efa\u7acb\u5728\u8d1d\u53f6\u65af\u7406\u8bba\u4e0a\u7684\u5206\u7c7b\u65b9\u6cd5\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u5b83\u7684\u5047\u8bbe\u6761\u4ef6\u662f\u81ea\u53d8\u91cf\u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u7b80\u8a00\u4e4b\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u5047\u5b9a\u67d0\u4e00\u7279\u5f81\u7684\u51fa\u73b0\u4e0e\u5176\u5b83\u7279\u5f81\u65e0\u5173\u3002\u5373\u7ed9\u5b9a\u7c7b\u522b\uff0c\u7279\u5f81\u4e4b\u95f4\u6ca1\u6709\u76f8\u5173\u6027\u3002\u8fd9\u4e2a\u5047\u8bbe\u662f\u201c\u6734\u7d20\u201d\u7684\u6765\u6e90\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u6bd4\u5982\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u6c34\u679c\u5b83\u662f\u7ea2\u8272\u7684\uff0c\u5706\u72b6\u7684\uff0c\u76f4\u5f84\u5927\u6982 7cm \u5de6\u53f3\uff0c\u6211\u4eec\u53ef\u80fd\u731c\u6d4b\u5b83\u4e3a\u82f9\u679c\u3002\u5373\u4f7f\u8fd9\u4e9b\u7279\u5f81\u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u5173\u7cfb\uff0c\u5728\u6734\u7d20\u8d1d\u53f6\u65af\u7b97\u6cd5\u4e2d\u6211\u4eec\u90fd\u8ba4\u4e3a\u7ea2\u8272\uff0c\u5706\u72b6\u548c\u76f4\u5f84\u5728\u5224\u65ad\u4e00\u4e2a\u6c34\u679c\u662f\u82f9\u679c\u7684\u53ef\u80fd\u6027\u4e0a\u662f\u76f8\u4e92\u72ec\u7acb\u7684\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u4e00\u4e2a\u4e8c\u5206\u7c7b\u7684\u6848\u4f8b\u5047\u8bbe:"}),"\n",(0,a.jsx)(e.p,{children:"\u6211\u4eca\u5929\u6536\u5230\u4e86 100 \u5c01\u90ae\u4ef6\uff0c\u5176\u4e2d\u6709 80 \u5c01\u662f\u5783\u573e\u90ae\u4ef6\uff0c20 \u5c01\u662f\u6b63\u5e38\u90ae\u4ef6\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-markdown",children:"P\uff08\u5783\u573e\u90ae\u4ef6\uff09 = 80/100 = 0.8\nP\uff08\u6b63\u5e38\u90ae\u4ef6\uff09 = 20/100 = 0.2\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u6211\u9009\u5b9a\u4e86\u4e00\u4e9b\u8bcd\u4f5c\u4e3a\u7279\u5f81\uff0c\u8fd9\u4e9b\u8bcd\u53ef\u80fd\u51fa\u73b0\u5728\u90ae\u4ef6\u4e2d\uff0c\u4e5f\u53ef\u80fd\u4e0d\u51fa\u73b0\u3002\u8fd9\u4e9b\u8bcd\u6709\u201c\u514d\u8d39\u201d\uff0c\u201c\u606d\u559c\u201d\uff0c\u201c\u8f9b\u82e6\u201d\u7b49\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u6211\u53d1\u73b0\u5783\u573e\u90ae\u4ef6\u4e2d\u6709 20 \u5c01\u542b\u6709\u201c\u514d\u8d39\u201d\u8fd9\u4e2a\u8bcd\uff0c50 \u5c01\u542b\u6709\u201c\u606d\u559c\u201d\u8fd9\u4e2a\u8bcd\uff0c0 \u5c01\u542b\u6709\u201c\u8f9b\u82e6\u201d\u8fd9\u4e2a\u8bcd\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-markdown",children:"P\uff08\u514d\u8d39|\u5783\u573e\u90ae\u4ef6\uff09 = 20/80 = 0.25\nP\uff08\u606d\u559c|\u5783\u573e\u90ae\u4ef6\uff09 = 50/80 = 0.625\nP\uff08\u8f9b\u82e6|\u5783\u573e\u90ae\u4ef6\uff09 = 0/80 = 0\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u6b63\u5e38\u90ae\u4ef6\u4e2d\u6709 5 \u5c01\u542b\u6709\u201c\u514d\u8d39\u201d\u8fd9\u4e2a\u8bcd\u30026 \u5c01\u542b\u6709\u201c\u606d\u559c\u201d\u8fd9\u4e2a\u8bcd\uff0c2 \u5c01\u542b\u6709\u201c\u8f9b\u82e6\u201d\u8fd9\u4e2a\u8bcd\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-markdown",children:"P\uff08\u514d\u8d39|\u6b63\u5e38\u90ae\u4ef6\uff09 = 5/20 = 0.25\nP\uff08\u606d\u559c|\u6b63\u5e38\u90ae\u4ef6\uff09 = 6/20 = 0.3\nP\uff08\u8f9b\u82e6|\u6b63\u5e38\u90ae\u4ef6\uff09 = 2/20 = 0.1\n"})}),"\n",(0,a.jsxs)(e.p,{children:["\u73b0\u5728\u6211\u6536\u5230\u4e86\u4e00\u5c01\u90ae\u4ef6\uff0c\u8fd9\u5c01\u90ae\u4ef6\u5185\u5bb9\u4e3a\uff1a\u201c",(0,a.jsx)(e.strong,{children:"\u606d\u559c"}),"\u60a8\u83b7\u5f97\u4e86\u4e00\u6b21",(0,a.jsx)(e.strong,{children:"\u514d\u8d39"}),"\u7684\u673a\u4f1a\u201d\uff0c\u6211\u60f3\u77e5\u9053\u8fd9\u5c01\u90ae\u4ef6\u662f\u5783\u573e\u90ae\u4ef6\u7684\u6982\u7387\u662f\u591a\u5c11\uff1f"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-markdown",children:"P\uff08\u5783\u573e\u90ae\u4ef6|\u514d\u8d39\uff0c\u606d\u559c\uff09 = P\uff08\u514d\u8d39|\u5783\u573e\u90ae\u4ef6\uff09* P\uff08\u606d\u559c|\u5783\u573e\u90ae\u4ef6\uff09* P\uff08\u5783\u573e\u90ae\u4ef6\uff09= 0.25 * 0.625 * 0.8 = 0.125\n\nP\uff08\u6b63\u5e38\u90ae\u4ef6|\u514d\u8d39\uff0c\u606d\u559c\uff09 = P\uff08\u514d\u8d39|\u6b63\u5e38\u90ae\u4ef6\uff09* P\uff08\u606d\u559c|\u6b63\u5e38\u90ae\u4ef6\uff09* P\uff08\u6b63\u5e38\u90ae\u4ef6\uff09= 0.25 * 0.3 * 0.2 = 0.015\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u56e0\u4e3a P\uff08\u5783\u573e\u90ae\u4ef6|\u514d\u8d39\uff0c\u606d\u559c\uff09 > P\uff08\u6b63\u5e38\u90ae\u4ef6|\u514d\u8d39\uff0c\u606d\u559c\uff09\uff0c\u6240\u4ee5\u8fd9\u5c01\u90ae\u4ef6\u88ab\u5224\u5b9a\u4e3a\u5783\u573e\u90ae\u4ef6\u3002"}),"\n",(0,a.jsxs)(e.p,{children:["\u5982\u679c\u72e1\u733e\u7684\u5783\u573e\u90ae\u4ef6\u5236\u9020\u8005\u628a\u90ae\u4ef6\u5185\u5bb9\u6539\u4e3a\uff1a\u201c",(0,a.jsx)(e.strong,{children:"\u606d\u559c"}),"\u60a8\u83b7\u5f97\u4e86\u4e00\u6b21",(0,a.jsx)(e.strong,{children:"\u514d\u8d39"}),"\u7684\u673a\u4f1a\uff0c",(0,a.jsx)(e.strong,{children:"\u8f9b\u82e6"}),"\u60a8\u52a8\u52a8\u624b\u6307\u53c2\u52a0\u6211\u4eec\u7684",(0,a.jsx)(e.strong,{children:"\u514d\u8d39"}),"\u6d3b\u52a8\u201d\uff0c\u90a3\u4e48\u8fd9\u5c01\u90ae\u4ef6\u88ab\u5224\u5b9a\u4e3a\u5783\u573e\u90ae\u4ef6\u7684\u6982\u7387\u5c31\u4f1a\u53d8\u6210 0\uff0c\u56e0\u4e3a\u201c\u8f9b\u82e6\u201d\u8fd9\u4e2a\u8bcd\u5728\u6b63\u5e38\u90ae\u4ef6\u4e2d\u6709\u51fa\u73b0\uff0c\u5728\u5783\u573e\u90ae\u4ef6\u4e2d\u6ca1\u6709\u51fa\u73b0\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u6539\u8fdb:\u62c9\u666e\u62c9\u65af\u5e73\u6ed1\u6cd5"}),"\n",(0,a.jsx)(e.p,{children:"\u5728\u6bcf\u4e2a\u5173\u952e\u8bcd\u4e0a\u4eba\u4e3a\u7684\u589e\u52a0\u4e00\u4e2a\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u51fa\u73b0\u6982\u7387\u4e3a 0 \u7684\u60c5\u51b5\u4e86\u3002\uff08\u4e0b\u9762\u7684\u516c\u5f0f\u514d\u8d39\u7684\u5e73\u65b9\u8868\u793a\u8fd9\u4e2a\u5173\u952e\u8bcd\u51fa\u73b0 2 \u6b21\uff09"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-markdown",children:"P\uff08\u5783\u573e\u90ae\u4ef6|\u514d\u8d39\uff0c\u606d\u559c\uff0c\u8f9b\u82e6\uff09 = P\uff08\u514d\u8d39|\u5783\u573e\u90ae\u4ef6\uff09* P\uff08\u606d\u559c|\u5783\u573e\u90ae\u4ef6\uff09* P\uff08\u8f9b\u82e6|\u5783\u573e\u90ae\u4ef6\uff09* P\uff08\u5783\u573e\u90ae\u4ef6\uff09= (20+1/80)\xb2 * (50+1/80) * (0+1/80) * 0.8 = 0.0351421875\n\nP\uff08\u6b63\u5e38\u90ae\u4ef6|\u514d\u8d39\uff0c\u606d\u559c\uff0c\u8f9b\u82e6\uff09 = P\uff08\u514d\u8d39|\u6b63\u5e38\u90ae\u4ef6\uff09* P\uff08\u606d\u559c|\u6b63\u5e38\u90ae\u4ef6\uff09* P\uff08\u8f9b\u82e6|\u6b63\u5e38\u90ae\u4ef6\uff09* P\uff08\u6b63\u5e38\u90ae\u4ef6\uff09= (5+1/20)\xb2 * (6+1/20) * (2+1/20) * 0.2 =0.012885\n"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'\n# \u53c2\u8003\u7b54\u6848\nimport numpy as np\n\nclass NaiveBayes:\n    def __init__(self):\n        self.class_probs = {}  # \u5b58\u50a8\u6bcf\u4e2a\u7c7b\u522b\u7684\u5148\u9a8c\u6982\u7387 P(c)\n        self.word_probs = {}   # \u5b58\u50a8\u6bcf\u4e2a\u7c7b\u522b\u4e2d\u5355\u8bcd\u7684\u6761\u4ef6\u6982\u7387 P(w|c)\n        self.vocab = set()     # \u4fdd\u5b58\u6240\u6709\u51fa\u73b0\u7684\u5355\u8bcd\u6784\u6210\u7684\u8bcd\u6c47\u8868\n        self.smooth = 1        # \u62c9\u666e\u62c9\u65af\u5e73\u6ed1\u53c2\u6570\n\n    def fit(self, X, y):\n        # \u83b7\u53d6\u552f\u4e00\u7c7b\u522b\u548c\u5176\u6570\u91cf\n        classes, class_counts = np.unique(y, return_counts=True)\n        self.class_probs = {label: count / len(y) for label, count in zip(classes, class_counts)}  # \u5148\u9a8c\u6982\u7387\n        \n        # \u521d\u59cb\u5316\u8bcd\u6c47\u8868\u548c\u8bcd\u9891\u7edf\u8ba1\n        word_count = {label: {} for label in classes}  # \u6bcf\u4e2a\u7c7b\u522b\u7684\u8bcd\u9891\u8868\n        class_word_totals = {label: 0 for label in classes}  # \u6bcf\u4e2a\u7c7b\u522b\u5355\u8bcd\u603b\u6570\n        \n        # \u904d\u5386\u6bcf\u4e2a\u6837\u672c\u8fdb\u884c\u5206\u8bcd\u548c\u7edf\u8ba1\n        for text, label in zip(X, y):\n            words = text.split(" ")\n            for word in words:\n                self.vocab.add(word)  # \u6dfb\u52a0\u5230\u8bcd\u6c47\u8868\n                if word not in word_count[label]:\n                    word_count[label][word] = 0\n                word_count[label][word] += 1  # \u66f4\u65b0\u8bcd\u9891\n                class_word_totals[label] += 1  # \u5f53\u524d\u7c7b\u522b\u5355\u8bcd\u603b\u6570\u52a01\n\n        # \u8ba1\u7b97\u6761\u4ef6\u6982\u7387 P(w|c) \u52a0\u62c9\u666e\u62c9\u65af\u5e73\u6ed1\n        vocab_size = len(self.vocab)  # \u8bcd\u6c47\u8868\u5927\u5c0f\n        self.word_probs = {label: {} for label in classes}\n        for label in classes:\n            for word in self.vocab:\n                count = word_count[label].get(word, 0)  # \u83b7\u53d6\u8bcd\u9891\uff0c\u82e5\u672a\u51fa\u73b0\u5219\u4e3a0\n                self.word_probs[label][word] = (count + self.smooth) / (\n                    class_word_totals[label] + vocab_size * self.smooth\n                )\n\n    def predict(self, X):\n        predictions = []  # \u5b58\u50a8\u6240\u6709\u6837\u672c\u7684\u9884\u6d4b\u7ed3\u679c\n        for text in X:\n            words = text.split(" ")\n            class_scores = {}  # \u5b58\u50a8\u6bcf\u4e2a\u7c7b\u522b\u7684\u540e\u9a8c\u6982\u7387\n\n            # \u8ba1\u7b97\u540e\u9a8c\u6982\u7387 P(c|w1,w2,...,wn)\n            for label in self.class_probs:\n                class_scores[label] = self.class_probs[label]\n                for word in words:\n                    if word in self.word_probs[label]:  # \u5982\u679c\u8bcd\u5728\u8bcd\u6c47\u8868\u4e2d\n                        class_scores[label] *= self.word_probs[label][word]\n                    else:\n                        # \u82e5\u5355\u8bcd\u672a\u5728\u8bcd\u6c47\u8868\u4e2d\uff0c\u8df3\u8fc7\u8ba1\u7b97\n                        class_scores[label] *= 1/len(self.vocab)\n            \n            # \u9009\u62e9\u540e\u9a8c\u6982\u7387\u6700\u5927\u7684\u7c7b\u522b\u4f5c\u4e3a\u9884\u6d4b\u7ed3\u679c\n            predictions.append(max(class_scores, key=class_scores.get))\n        \n        return predictions\n    \n    def score(self, X, y):\n        predictions = self.predict(X)\n        return np.mean(predictions == y)\n\n\n# \u6570\u636e\ndata = np.array([\n    ("\u606d\u559c \u4f60 \u8d62\u5f97 \u4e86 \u5927\u5956 \uff01","\u8bc8\u9a97"),\n    ("\u8bf7 \u7acb\u5373 \u66f4\u65b0 \u60a8 \u7684 \u8d26\u6237 \u4fe1\u606f","\u8bc8\u9a97"),\n    ("\u60a8\u7684 \u8d26\u6237 \u5b58\u5728 \u5f02\u5e38 \uff0c\u8bf7 \u5c3d\u5feb \u5904\u7406","\u8bc8\u9a97"),\n    ("\u8fd9\u662f \u60a8 \u7684 \u8d26\u5355 \uff0c\u8bf7 \u67e5\u770b","\u6b63\u5e38"),\n    ("\u60a8\u7684 \u8ba2\u5355 \u5df2 \u53d1\u8d27","\u6b63\u5e38"),\n    ("\u8bf7 \u786e\u8ba4 \u60a8 \u7684 \u6ce8\u518c \u4fe1\u606f","\u6b63\u5e38"),\n    ("\u60a8 \u6709 \u65b0\u7684 \u6d88\u606f \uff0c\u8bf7 \u67e5\u770b","\u6b63\u5e38"),\n    ("\u70b9\u51fb \u6b64 \u94fe\u63a5 \u83b7\u53d6 \u4f18\u60e0\u5238","\u8bc8\u9a97"),\n    ("\u60a8\u7684 \u8d26\u6237 \u5df2 \u88ab \u9501\u5b9a \uff0c\u8bf7 \u7acb\u5373 \u8054\u7cfb","\u8bc8\u9a97"),\n    ("\u606d\u559c \u60a8 \u83b7\u5f97 \u514d\u8d39 \u8bd5\u7528 \uff01","\u8bc8\u9a97"),\n    ("\u8bf7 \u4e0d\u8981 \u5206\u4eab \u60a8 \u7684 \u5bc6\u7801","\u6b63\u5e38"),\n    ("\u60a8\u7684 \u8ba2\u9605 \u5373\u5c06 \u5230\u671f \uff0c\u8bf7 \u7eed\u8d39","\u6b63\u5e38"),\n    ("\u60a8 \u6709 \u672a \u8bfb \u90ae\u4ef6 \uff0c\u8bf7 \u67e5\u770b","\u6b63\u5e38"),\n    ("\u7acb\u5373 \u884c\u52a8 \uff0c\u83b7\u53d6 \u9650\u65f6 \u4f18\u60e0 \uff01","\u8bc8\u9a97"),\n    ("\u60a8\u7684 \u4fe1\u7528\u5361 \u4fe1\u606f \u9700\u8981 \u66f4\u65b0","\u8bc8\u9a97"),\n])\nX = data[:, 0]  # \u6587\u672c\u6570\u636e\ny = data[:, 1]  # \u6807\u7b7e\u6570\u636e\n\n# \u521b\u5efa\u6a21\u578b\u5e76\u8bad\u7ec3\nmodel = NaiveBayes()\nmodel.fit(X, y)\n\n# \u8f93\u51fa\u7ed3\u679c\uff0c\u6bd4\u8f83\u9884\u6d4b\u7c7b\u522b\u4e0e\u5b9e\u9645\u7c7b\u522b\nprint(model.score(X, y))\n\n\n'})}),"\n",(0,a.jsx)(e.h3,{id:"\u4f7f\u7528sklearn\u6a21\u5757\u5b8c\u6210",children:"\u4f7f\u7528sklearn\u6a21\u5757\u5b8c\u6210"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'from sklearn.naive_bayes import GaussianNB\nimport numpy as np\n\n# \u521b\u5efa\u4e00\u4e9b\u793a\u4f8b\u6570\u636e\nX = np.array([[1], [2], [3], [4], [5]])  # \u7279\u5f81\ny = np.array([0, 0, 1, 1, 1])  # \u76ee\u6807\u6807\u7b7e\n\n# \u521b\u5efa\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668 (\u9ad8\u65af\u6734\u7d20\u8d1d\u53f6\u65af)\nmodel = GaussianNB()\n\n# .fit() \u65b9\u6cd5\u7528\u4e8e\u62df\u5408\u6a21\u578b\nmodel.fit(X, y)\n\n# \u8981\u9884\u6d4b\u7684\u65b0\u6570\u636e\u70b9\nnew_data_point = np.array([[6]])\n\n# .predict() \u65b9\u6cd5\u8fd4\u56de\u9884\u6d4b\u7684\u7c7b\u522b\npredicted_class = model.predict(new_data_point)\n# .predict_proba() \u65b9\u6cd5\u8fd4\u56de\u6bcf\u4e2a\u7c7b\u522b\u7684\u6982\u7387\npredicted_proba = model.predict_proba(new_data_point)\n\nprint("\u9884\u6d4b\u7c7b\u522b:", predicted_class)\nprint("\u7c7b\u522b\u6982\u7387:", predicted_proba)\n\n'})}),"\n",(0,a.jsx)(e.h3,{id:"\u7b80\u5355\u793a\u4f8b",children:"\u7b80\u5355\u793a\u4f8b"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"from sklearn.naive_bayes import GaussianNB\nfrom sklearn.model_selection import train_test_split\nimport sklearn.datasets\n# \u52a0\u8f7d\u6570\u636e\ndata = sklearn.datasets.load_iris()\n# .data \u5c5e\u6027\u5305\u542b\u7279\u5f81\nX = data.data\n# .target \u5c5e\u6027\u5305\u542b\u76ee\u6807\u6807\u7b7e\ny = data.target\n# \u5212\u5206\u6570\u636e\u96c6\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)\n# \u521b\u5efa\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668 (\u9ad8\u65af\u6734\u7d20\u8d1d\u53f6\u65af)\nmodel = GaussianNB()\n# \u62df\u5408\u6a21\u578b\nmodel.fit(X_train, y_train)\n\n"})}),"\n",(0,a.jsx)(e.h3,{id:"\u6548\u679c\u8bc4\u4f30",children:"\u6548\u679c\u8bc4\u4f30"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"from sklearn.metrics import accuracy_score\n\n# \u8ba1\u7b97\u51c6\u786e\u7387\naccuracy = accuracy_score(y_test, model.predict(X_test))\naccuracy\n"})}),"\n",(0,a.jsx)(e.h3,{id:"\u67e5\u770b\u5206\u7c7b\u9519\u8bef\u7684\u6837\u672c\u4fe1\u606f",children:"\u67e5\u770b\u5206\u7c7b\u9519\u8bef\u7684\u6837\u672c\u4fe1\u606f"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"import pandas as pd\n\n# \u628a\u6d4b\u8bd5\u6570\u636e\u3001\u76ee\u6807\u6807\u7b7e\u3001\u9884\u6d4b\u7ed3\u679c\u5408\u5e76\u5230\u4e00\u8d77\n# pd.DataFrame()\u51fd\u6570\u7528\u4e8e\u521b\u5efaDataFrame\n# pd.concat()\u51fd\u6570\u7528\u4e8e\u5408\u5e76\u591a\u4e2aDataFrame\n# axis=1 \u8868\u793a\u6309\u5217\u5408\u5e76\ndf = pd.concat(\n    [pd.DataFrame(X_test,columns=data.feature_names),\n     pd.DataFrame(y_test,columns=['target']),\n     pd.DataFrame(model.predict(X_test),columns=['predict'])\n     ],axis=1 )\n\n# \u7b5b\u9009target\u5217\u4e0epredict\u5217\u4e0d\u76f8\u7b49\u7684\u6570\u636e\ndf.loc[df['target']!=df['predict']]\n\n"})})]})}function p(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}},28453:(n,e,s)=>{s.d(e,{R:()=>l,x:()=>o});var r=s(96540);const a={},t=r.createContext(a);function l(n){const e=r.useContext(t);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:l(n.components),r.createElement(t.Provider,{value:e},n.children)}}}]);