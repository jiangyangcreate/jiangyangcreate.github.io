"use strict";(self.webpackChunkjiangmiemie=self.webpackChunkjiangmiemie||[]).push([[2030],{22160:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"\u9009\u62e9\u7f16\u7a0b\u8bed\u8a00/Python/Python\u6a21\u5757\u5e93/sqlite","title":"sqlite","description":"SQLite \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5d4c\u5165\u5f0f\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u4ee5\u5176\u8f7b\u91cf\u7ea7\u3001\u96f6\u914d\u7f6e\u3001\u65e0\u670d\u52a1\u5668\u67b6\u6784\u800c\u95fb\u540d\u3002Python \u901a\u8fc7\u6807\u51c6\u5e93 sqlite3 \u6a21\u5757\u63d0\u4f9b\u4e86\u5b8c\u6574\u7684 SQLite \u652f\u6301\u3002","source":"@site/docs/docs/\u9009\u62e9\u7f16\u7a0b\u8bed\u8a00/Python/Python\u6a21\u5757\u5e93/sqlite.mdx","sourceDirName":"\u9009\u62e9\u7f16\u7a0b\u8bed\u8a00/Python/Python\u6a21\u5757\u5e93","slug":"/\u9009\u62e9\u7f16\u7a0b\u8bed\u8a00/Python/Python\u6a21\u5757\u5e93/sqlite","permalink":"/docs/\u9009\u62e9\u7f16\u7a0b\u8bed\u8a00/Python/Python\u6a21\u5757\u5e93/sqlite","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"sqlite"},"sidebar":"tutorialSidebar","previous":{"title":"subprocess","permalink":"/docs/\u9009\u62e9\u7f16\u7a0b\u8bed\u8a00/Python/Python\u6a21\u5757\u5e93/\u5e76\u53d1\u4e0e\u5e76\u884c/subprocess"},"next":{"title":"\u7f51\u7edc\u4e0e\u901a\u4fe1","permalink":"/docs/\u9009\u62e9\u7f16\u7a0b\u8bed\u8a00/Python/Python\u6a21\u5757\u5e93/\u7f51\u7edc\u4e0e\u901a\u4fe1/"}}');var t=s(74848),c=s(28453);const i={sidebar_position:4,title:"sqlite"},o=void 0,l={},a=[{value:"\u57fa\u7840\u64cd\u4f5c",id:"\u57fa\u7840\u64cd\u4f5c",level:2},{value:"\u8fde\u63a5\u6570\u636e\u5e93",id:"\u8fde\u63a5\u6570\u636e\u5e93",level:3},{value:"\u6267\u884cSQL\u8bed\u53e5",id:"\u6267\u884csql\u8bed\u53e5",level:3},{value:"execute() \u65b9\u6cd5",id:"execute-\u65b9\u6cd5",level:4},{value:"executemany() \u65b9\u6cd5",id:"executemany-\u65b9\u6cd5",level:4},{value:"executescript() \u65b9\u6cd5",id:"executescript-\u65b9\u6cd5",level:4},{value:"\u83b7\u53d6\u67e5\u8be2\u7ed3\u679c",id:"\u83b7\u53d6\u67e5\u8be2\u7ed3\u679c",level:3},{value:"fetchone() \u65b9\u6cd5",id:"fetchone-\u65b9\u6cd5",level:4},{value:"fetchmany() \u65b9\u6cd5",id:"fetchmany-\u65b9\u6cd5",level:4},{value:"fetchall() \u65b9\u6cd5",id:"fetchall-\u65b9\u6cd5",level:4},{value:"\u4f7f\u7528 Row \u5de5\u5382",id:"\u4f7f\u7528-row-\u5de5\u5382",level:3},{value:"\u4e8b\u52a1\u7ba1\u7406",id:"\u4e8b\u52a1\u7ba1\u7406",level:2},{value:"\u6570\u636e\u7c7b\u578b\u6620\u5c04",id:"\u6570\u636e\u7c7b\u578b\u6620\u5c04",level:2},{value:"\u65e5\u671f\u548c\u65f6\u95f4\u5904\u7406",id:"\u65e5\u671f\u548c\u65f6\u95f4\u5904\u7406",level:3},{value:"\u5b9e\u7528\u6280\u5de7",id:"\u5b9e\u7528\u6280\u5de7",level:2},{value:"\u83b7\u53d6\u63d2\u5165\u7684\u81ea\u589e ID",id:"\u83b7\u53d6\u63d2\u5165\u7684\u81ea\u589e-id",level:3},{value:"\u68c0\u67e5\u8868\u662f\u5426\u5b58\u5728",id:"\u68c0\u67e5\u8868\u662f\u5426\u5b58\u5728",level:3},{value:"\u83b7\u53d6\u8868\u7ed3\u6784\u4fe1\u606f",id:"\u83b7\u53d6\u8868\u7ed3\u6784\u4fe1\u606f",level:3},{value:"\u5907\u4efd\u6570\u636e\u5e93",id:"\u5907\u4efd\u6570\u636e\u5e93",level:3},{value:"\u4f7f\u7528\u88c5\u9970\u5668\u7b80\u5316\u6570\u636e\u5e93\u64cd\u4f5c",id:"\u4f7f\u7528\u88c5\u9970\u5668\u7b80\u5316\u6570\u636e\u5e93\u64cd\u4f5c",level:3},{value:"\u5e38\u89c1\u9677\u9631\u4e0e\u6700\u4f73\u5b9e\u8df5",id:"\u5e38\u89c1\u9677\u9631\u4e0e\u6700\u4f73\u5b9e\u8df5",level:2},{value:"\u9677\u9631 1\uff1a\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898",id:"\u9677\u9631-1\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898",level:3},{value:"\u9677\u9631 2\uff1a\u5fd8\u8bb0\u63d0\u4ea4\u4e8b\u52a1",id:"\u9677\u9631-2\u5fd8\u8bb0\u63d0\u4ea4\u4e8b\u52a1",level:3},{value:"\u9677\u9631 3\uff1a\u9891\u7e41\u7684\u5c0f\u4e8b\u52a1\u5bfc\u81f4\u6027\u80fd\u5dee",id:"\u9677\u9631-3\u9891\u7e41\u7684\u5c0f\u4e8b\u52a1\u5bfc\u81f4\u6027\u80fd\u5dee",level:3},{value:"\u9677\u9631 4\uff1a\u6570\u636e\u5e93\u9501\u5b9a",id:"\u9677\u9631-4\u6570\u636e\u5e93\u9501\u5b9a",level:3},{value:"\u6027\u80fd\u4f18\u5316",id:"\u6027\u80fd\u4f18\u5316",level:2},{value:"\u4f7f\u7528\u7d22\u5f15",id:"\u4f7f\u7528\u7d22\u5f15",level:3},{value:"\u4f7f\u7528 WAL \u6a21\u5f0f",id:"\u4f7f\u7528-wal-\u6a21\u5f0f",level:3},{value:"\u6279\u91cf\u64cd\u4f5c\u6280\u5de7",id:"\u6279\u91cf\u64cd\u4f5c\u6280\u5de7",level:3},{value:"\u5b8c\u6574\u793a\u4f8b\uff1a\u7b80\u5355\u7684\u4efb\u52a1\u7ba1\u7406\u7cfb\u7edf",id:"\u5b8c\u6574\u793a\u4f8b\u7b80\u5355\u7684\u4efb\u52a1\u7ba1\u7406\u7cfb\u7edf",level:2},{value:"\u76f8\u5173\u8d44\u6e90\u63a8\u8350",id:"\u76f8\u5173\u8d44\u6e90\u63a8\u8350",level:2}];function d(n){const e={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...n.components},{Highlight:s}=e;return s||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Highlight",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.admonition,{type:"info",children:[(0,t.jsxs)(e.p,{children:["SQLite \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5d4c\u5165\u5f0f\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u4ee5\u5176\u8f7b\u91cf\u7ea7\u3001\u96f6\u914d\u7f6e\u3001\u65e0\u670d\u52a1\u5668\u67b6\u6784\u800c\u95fb\u540d\u3002Python \u901a\u8fc7\u6807\u51c6\u5e93 ",(0,t.jsx)(e.code,{children:"sqlite3"})," \u6a21\u5757\u63d0\u4f9b\u4e86\u5b8c\u6574\u7684 SQLite \u652f\u6301\u3002"]}),(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://www.sqlite.org/",children:"SQLite \u5b98\u65b9\u7f51\u7ad9"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://docs.python.org/zh-cn/3/library/sqlite3.html",children:"Python sqlite3 \u6587\u6863"})}),"\n"]})]}),"\n",(0,t.jsx)(e.h2,{id:"\u57fa\u7840\u64cd\u4f5c",children:"\u57fa\u7840\u64cd\u4f5c"}),"\n",(0,t.jsx)(e.h3,{id:"\u8fde\u63a5\u6570\u636e\u5e93",children:"\u8fde\u63a5\u6570\u636e\u5e93"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"connect()"})," \u51fd\u6570\u7528\u4e8e\u8fde\u63a5\u5230 SQLite \u6570\u636e\u5e93\u6587\u4ef6\u3002"]}),"\n",(0,t.jsxs)(e.p,{children:["\u51fd\u6570\u7b7e\u540d\uff1a",(0,t.jsx)(e.code,{children:"sqlite3.connect(database, timeout=5.0, **kwargs) -> Connection"})]}),"\n",(0,t.jsx)(e.p,{children:"\u53c2\u6570\u8bf4\u660e\uff1a"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"database"}),"\uff1a\u6570\u636e\u5e93\u6587\u4ef6\u8def\u5f84\uff0c\u53ef\u4ee5\u662f\u6587\u4ef6\u8def\u5f84\u6216 ",(0,t.jsx)(e.code,{children:":memory:"})," \uff08\u5185\u5b58\u6570\u636e\u5e93\uff09"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"timeout"}),"\uff1a\u6570\u636e\u5e93\u88ab\u9501\u5b9a\u65f6\u7684\u7b49\u5f85\u8d85\u65f6\u65f6\u95f4\uff08\u79d2\uff09\uff0c\u9ed8\u8ba4 5.0"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"check_same_thread"}),"\uff1a\u662f\u5426\u68c0\u67e5\u8fde\u63a5\u662f\u5426\u5728\u540c\u4e00\u7ebf\u7a0b\u4e2d\u4f7f\u7528\uff0c\u9ed8\u8ba4 True"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"isolation_level"}),'\uff1a\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff0c\u9ed8\u8ba4\u4e3a "DEFERRED"']}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u8fd4\u56de\u4e00\u4e2a Connection \u5bf9\u8c61"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"import sqlite3\n\n# \u8fde\u63a5\u5230\u78c1\u76d8\u4e0a\u7684\u6570\u636e\u5e93\uff08\u5982\u679c\u4e0d\u5b58\u5728\u5219\u521b\u5efa\uff09\nconn = sqlite3.connect('example.db')\n\n# \u8fde\u63a5\u5230\u5185\u5b58\u6570\u636e\u5e93\uff08\u9002\u5408\u4e34\u65f6\u6570\u636e\u6216\u6d4b\u8bd5\uff09\nmemory_conn = sqlite3.connect(':memory:')\n\n# \u8fde\u63a5\u540e\u8bb0\u5f97\u5173\u95ed\uff08\u63a8\u8350\u4f7f\u7528\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff09\nconn.close()\n\n# \u63a8\u8350\u65b9\u5f0f\uff1a\u4f7f\u7528\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u81ea\u52a8\u7ba1\u7406\u8fde\u63a5\nwith sqlite3.connect('example.db') as conn:\n    # \u5728\u8fd9\u91cc\u8fdb\u884c\u6570\u636e\u5e93\u64cd\u4f5c\n    pass\n# \u9000\u51fa\u65f6\u81ea\u52a8\u63d0\u4ea4\u4e8b\u52a1\u5e76\u5173\u95ed\u8fde\u63a5\n"})}),"\n",(0,t.jsxs)(e.admonition,{type:"tip",children:[(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"\u5185\u5b58\u6570\u636e\u5e93\u7684\u4f7f\u7528\u573a\u666f"}),"\uff1a"]}),(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"\u5355\u5143\u6d4b\u8bd5\uff1a\u5feb\u901f\u521b\u5efa\u4e34\u65f6\u6d4b\u8bd5\u73af\u5883"}),"\n",(0,t.jsx)(e.li,{children:"\u6570\u636e\u5904\u7406\uff1a\u4e34\u65f6\u5b58\u50a8\u4e2d\u95f4\u7ed3\u679c"}),"\n",(0,t.jsx)(e.li,{children:"\u7f13\u5b58\uff1a\u6bd4\u5b57\u5178\u66f4\u5f3a\u5927\u7684\u5185\u5b58\u7f13\u5b58"}),"\n"]}),(0,t.jsx)(e.p,{children:"\u6ce8\u610f\uff1a\u5185\u5b58\u6570\u636e\u5e93\u5728\u8fde\u63a5\u5173\u95ed\u540e\u6570\u636e\u4f1a\u4e22\u5931\u3002"})]}),"\n",(0,t.jsx)(e.h3,{id:"\u6267\u884csql\u8bed\u53e5",children:"\u6267\u884cSQL\u8bed\u53e5"}),"\n",(0,t.jsx)(e.p,{children:"\u6e38\u6807\uff08Cursor\uff09\u5bf9\u8c61\u7528\u4e8e\u6267\u884c SQL \u8bed\u53e5\u548c\u83b7\u53d6\u67e5\u8be2\u7ed3\u679c\u3002"}),"\n",(0,t.jsx)(e.h4,{id:"execute-\u65b9\u6cd5",children:"execute() \u65b9\u6cd5"}),"\n",(0,t.jsxs)(e.p,{children:["\u51fd\u6570\u7b7e\u540d\uff1a",(0,t.jsx)(e.code,{children:"cursor.execute(sql, parameters=()) -> Cursor"})]}),"\n",(0,t.jsx)(e.p,{children:"\u53c2\u6570\u8bf4\u660e\uff1a"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"sql"}),"\uff1a\u8981\u6267\u884c\u7684 SQL \u8bed\u53e5"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"parameters"}),"\uff1aSQL \u53c2\u6570\uff0c\u7528\u4e8e\u53c2\u6570\u5316\u67e5\u8be2\uff08\u9632\u6b62 SQL \u6ce8\u5165\uff09"]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u8fd4\u56de Cursor \u5bf9\u8c61\u672c\u8eab"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"import sqlite3\n\n# \u521b\u5efa\u8fde\u63a5\u548c\u6e38\u6807\nconn = sqlite3.connect('example.db')\ncursor = conn.cursor()\n\n# \u521b\u5efa\u8868\ncursor.execute('''\n    CREATE TABLE IF NOT EXISTS users (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        name TEXT NOT NULL,\n        age INTEGER,\n        email TEXT UNIQUE,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    )\n''')\n\n# \u63d2\u5165\u5355\u6761\u6570\u636e - \u4f7f\u7528\u53c2\u6570\u5316\u67e5\u8be2\uff08\u63a8\u8350\uff09\ncursor.execute(\n    \"INSERT INTO users (name, age, email) VALUES (?, ?, ?)\",\n    ('\u5f20\u4e09', 25, 'zhangsan@example.com')\n)\n\n# \u63d2\u5165\u6570\u636e - \u4f7f\u7528\u547d\u540d\u53c2\u6570\ncursor.execute(\n    \"INSERT INTO users (name, age, email) VALUES (:name, :age, :email)\",\n    {'name': '\u674e\u56db', 'age': 30, 'email': 'lisi@example.com'}\n)\n\n# \u63d0\u4ea4\u4e8b\u52a1\nconn.commit()\n\n# \u67e5\u8be2\u6570\u636e\ncursor.execute(\"SELECT * FROM users WHERE age > ?\", (20,))\nresults = cursor.fetchall()\nprint(results)\n\n# \u5173\u95ed\u8fde\u63a5\nconn.close()\n"})}),"\n",(0,t.jsxs)(e.admonition,{type:"warning",children:[(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\u6c38\u8fdc\u4e0d\u8981\u4f7f\u7528\u5b57\u7b26\u4e32\u62fc\u63a5\u6784\u5efa SQL \u8bed\u53e5\uff01"})}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"# \u274c \u5371\u9669\u7684\u505a\u6cd5 - \u5bb9\u6613\u53d7\u5230 SQL \u6ce8\u5165\u653b\u51fb\nuser_input = \"admin' OR '1'='1\"\ncursor.execute(f\"SELECT * FROM users WHERE name = '{user_input}'\")\n\n# \u2705 \u5b89\u5168\u7684\u505a\u6cd5 - \u4f7f\u7528\u53c2\u6570\u5316\u67e5\u8be2\ncursor.execute(\"SELECT * FROM users WHERE name = ?\", (user_input,))\n"})})]}),"\n",(0,t.jsx)(e.h4,{id:"executemany-\u65b9\u6cd5",children:"executemany() \u65b9\u6cd5"}),"\n",(0,t.jsx)(e.p,{children:"\u7528\u4e8e\u6279\u91cf\u6267\u884c\u76f8\u540c\u7684 SQL \u8bed\u53e5\u3002"}),"\n",(0,t.jsxs)(e.p,{children:["\u51fd\u6570\u7b7e\u540d\uff1a",(0,t.jsx)(e.code,{children:"cursor.executemany(sql, parameters) -> Cursor"})]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"import sqlite3\n\nconn = sqlite3.connect('example.db')\ncursor = conn.cursor()\n\n# \u6279\u91cf\u63d2\u5165\u6570\u636e\nusers = [\n    ('\u738b\u4e94', 28, 'wangwu@example.com'),\n    ('\u8d75\u516d', 35, 'zhaoliu@example.com'),\n    ('\u5b59\u4e03', 22, 'sunqi@example.com')\n]\n\ncursor.executemany(\n    \"INSERT INTO users (name, age, email) VALUES (?, ?, ?)\",\n    users\n)\nconn.commit()\n\nprint(f\"\u63d2\u5165\u4e86 {cursor.rowcount} \u884c\u6570\u636e\")\n\nconn.close()\n"})}),"\n",(0,t.jsx)(e.h4,{id:"executescript-\u65b9\u6cd5",children:"executescript() \u65b9\u6cd5"}),"\n",(0,t.jsx)(e.p,{children:"\u6267\u884c\u5305\u542b\u591a\u6761 SQL \u8bed\u53e5\u7684\u811a\u672c\u3002"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"import sqlite3\n\nconn = sqlite3.connect('example.db')\ncursor = conn.cursor()\n\n# \u6267\u884c\u591a\u6761 SQL \u8bed\u53e5\ncursor.executescript('''\n    DROP TABLE IF EXISTS products;\n    \n    CREATE TABLE products (\n        id INTEGER PRIMARY KEY,\n        name TEXT NOT NULL,\n        price REAL,\n        stock INTEGER DEFAULT 0\n    );\n    \n    INSERT INTO products (name, price, stock) VALUES \n        ('\u7b14\u8bb0\u672c\u7535\u8111', 5999.99, 10),\n        ('\u673a\u68b0\u952e\u76d8', 399.99, 50),\n        ('\u9f20\u6807', 99.99, 100);\n''')\n\nconn.commit()\nconn.close()\n"})}),"\n",(0,t.jsx)(e.h3,{id:"\u83b7\u53d6\u67e5\u8be2\u7ed3\u679c",children:"\u83b7\u53d6\u67e5\u8be2\u7ed3\u679c"}),"\n",(0,t.jsx)(e.h4,{id:"fetchone-\u65b9\u6cd5",children:"fetchone() \u65b9\u6cd5"}),"\n",(0,t.jsx)(e.p,{children:"\u83b7\u53d6\u67e5\u8be2\u7ed3\u679c\u7684\u4e0b\u4e00\u884c\u3002"}),"\n",(0,t.jsxs)(e.p,{children:["\u51fd\u6570\u7b7e\u540d\uff1a",(0,t.jsx)(e.code,{children:"cursor.fetchone() -> tuple | None"})]}),"\n",(0,t.jsx)(e.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u8fd4\u56de\u4e00\u884c\u7ed3\u679c\uff08\u5143\u7ec4\u683c\u5f0f\uff09\uff0c\u5982\u679c\u6ca1\u6709\u66f4\u591a\u884c\u5219\u8fd4\u56de None"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"import sqlite3\n\nconn = sqlite3.connect('example.db')\ncursor = conn.cursor()\n\ncursor.execute(\"SELECT * FROM users WHERE age > ?\", (25,))\n\n# \u83b7\u53d6\u7b2c\u4e00\u884c\nrow = cursor.fetchone()\nif row:\n    print(f\"\u7528\u6237: {row}\")  # (1, '\u5f20\u4e09', 25, 'zhangsan@example.com', ...)\n\n# \u518d\u6b21\u8c03\u7528\u83b7\u53d6\u4e0b\u4e00\u884c\nnext_row = cursor.fetchone()\nif next_row:\n    print(f\"\u4e0b\u4e00\u4e2a\u7528\u6237: {next_row}\")\n\nconn.close()\n"})}),"\n",(0,t.jsx)(e.h4,{id:"fetchmany-\u65b9\u6cd5",children:"fetchmany() \u65b9\u6cd5"}),"\n",(0,t.jsx)(e.p,{children:"\u83b7\u53d6\u67e5\u8be2\u7ed3\u679c\u7684\u591a\u884c\u3002"}),"\n",(0,t.jsxs)(e.p,{children:["\u51fd\u6570\u7b7e\u540d\uff1a",(0,t.jsx)(e.code,{children:"cursor.fetchmany(size=cursor.arraysize) -> list[tuple]"})]}),"\n",(0,t.jsx)(e.p,{children:"\u53c2\u6570\u8bf4\u660e\uff1a"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"size"}),"\uff1a\u8981\u83b7\u53d6\u7684\u884c\u6570\uff0c\u9ed8\u8ba4\u4e3a cursor.arraysize\uff08\u901a\u5e38\u4e3a 1\uff09"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"import sqlite3\n\nconn = sqlite3.connect('example.db')\ncursor = conn.cursor()\n\ncursor.execute(\"SELECT * FROM users\")\n\n# \u6bcf\u6b21\u83b7\u53d6 2 \u884c\nwhile True:\n    rows = cursor.fetchmany(2)\n    if not rows:\n        break\n    for row in rows:\n        print(row)\n\nconn.close()\n"})}),"\n",(0,t.jsx)(e.h4,{id:"fetchall-\u65b9\u6cd5",children:"fetchall() \u65b9\u6cd5"}),"\n",(0,t.jsx)(e.p,{children:"\u83b7\u53d6\u67e5\u8be2\u7ed3\u679c\u7684\u6240\u6709\u884c\u3002"}),"\n",(0,t.jsxs)(e.p,{children:["\u51fd\u6570\u7b7e\u540d\uff1a",(0,t.jsx)(e.code,{children:"cursor.fetchall() -> list[tuple]"})]}),"\n",(0,t.jsx)(e.p,{children:"\u8fd4\u56de\u503c\uff1a"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u8fd4\u56de\u6240\u6709\u5269\u4f59\u884c\u7684\u5217\u8868"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'import sqlite3\n\nconn = sqlite3.connect(\'example.db\')\ncursor = conn.cursor()\n\ncursor.execute("SELECT name, age FROM users ORDER BY age DESC")\nall_users = cursor.fetchall()\n\nfor name, age in all_users:\n    print(f"{name}: {age}\u5c81")\n\nconn.close()\n'})}),"\n",(0,t.jsxs)(e.admonition,{type:"tip",children:[(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"\u6027\u80fd\u5efa\u8bae"}),"\uff1a"]}),(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["\u5982\u679c\u7ed3\u679c\u96c6\u5f88\u5927\uff0c\u4f7f\u7528 ",(0,t.jsx)(e.code,{children:"fetchmany()"})," \u5206\u6279\u5904\u7406\uff0c\u907f\u514d\u5185\u5b58\u5360\u7528\u8fc7\u9ad8"]}),"\n",(0,t.jsxs)(e.li,{children:["\u5982\u679c\u53ea\u9700\u8981\u4e00\u884c\u7ed3\u679c\uff0c\u4f7f\u7528 ",(0,t.jsx)(e.code,{children:"fetchone()"})]}),"\n",(0,t.jsxs)(e.li,{children:["\u5982\u679c\u786e\u5b9a\u7ed3\u679c\u96c6\u4e0d\u5927\uff0c\u4f7f\u7528 ",(0,t.jsx)(e.code,{children:"fetchall()"})," \u6700\u65b9\u4fbf"]}),"\n"]})]}),"\n",(0,t.jsx)(e.h3,{id:"\u4f7f\u7528-row-\u5de5\u5382",children:"\u4f7f\u7528 Row \u5de5\u5382"}),"\n",(0,t.jsxs)(e.p,{children:["\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u67e5\u8be2\u7ed3\u679c\u8fd4\u56de\u5143\u7ec4\u3002\u53ef\u4ee5\u8bbe\u7f6e ",(0,t.jsx)(e.code,{children:"row_factory"})," \u6765\u6539\u53d8\u8fd4\u56de\u683c\u5f0f\u3002"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"import sqlite3\n\nconn = sqlite3.connect('example.db')\n\n# \u4f7f\u7528 Row \u5de5\u5382\uff0c\u53ef\u4ee5\u901a\u8fc7\u5217\u540d\u8bbf\u95ee\u6570\u636e\nconn.row_factory = sqlite3.Row\n\ncursor = conn.cursor()\ncursor.execute(\"SELECT * FROM users WHERE id = ?\", (1,))\nrow = cursor.fetchone()\n\nif row:\n    # \u901a\u8fc7\u7d22\u5f15\u8bbf\u95ee\n    print(row[0])\n    \n    # \u901a\u8fc7\u5217\u540d\u8bbf\u95ee\uff08\u63a8\u8350\uff09\n    print(row['name'])\n    print(row['email'])\n    \n    # \u8f6c\u6362\u4e3a\u5b57\u5178\n    user_dict = dict(row)\n    print(user_dict)  # {'id': 1, 'name': '\u5f20\u4e09', ...}\n    \n    # \u83b7\u53d6\u6240\u6709\u5217\u540d\n    print(row.keys())  # ['id', 'name', 'age', 'email', ...]\n\nconn.close()\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u4e8b\u52a1\u7ba1\u7406",children:"\u4e8b\u52a1\u7ba1\u7406"}),"\n",(0,t.jsx)(e.p,{children:"SQLite \u9ed8\u8ba4\u652f\u6301\u4e8b\u52a1\u3002"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"import sqlite3\n\nconn = sqlite3.connect('example.db')\ncursor = conn.cursor()\n\ntry:\n    # \u5f00\u59cb\u4e8b\u52a1\uff08\u9690\u5f0f\u5f00\u59cb\uff09\n    cursor.execute(\"INSERT INTO users (name, age) VALUES (?, ?)\", ('\u6d4b\u8bd5\u7528\u62371', 20))\n    cursor.execute(\"INSERT INTO users (name, age) VALUES (?, ?)\", ('\u6d4b\u8bd5\u7528\u62372', 21))\n    \n    # \u63d0\u4ea4\u4e8b\u52a1\n    conn.commit()\n    print(\"\u4e8b\u52a1\u63d0\u4ea4\u6210\u529f\")\n    \nexcept sqlite3.Error as e:\n    # \u53d1\u751f\u9519\u8bef\u65f6\u56de\u6eda\n    conn.rollback()\n    print(f\"\u4e8b\u52a1\u56de\u6eda: {e}\")\n    \nfinally:\n    conn.close()\n\n# \u63a8\u8350\u65b9\u5f0f\uff1a\u4f7f\u7528\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u81ea\u52a8\u7ba1\u7406\u4e8b\u52a1\nwith sqlite3.connect('example.db') as conn:\n    cursor = conn.cursor()\n    cursor.execute(\"INSERT INTO users (name, age) VALUES (?, ?)\", ('\u6d4b\u8bd5\u7528\u62373', 22))\n    # \u9000\u51fa\u65f6\u81ea\u52a8\u63d0\u4ea4\uff0c\u53d1\u751f\u5f02\u5e38\u65f6\u81ea\u52a8\u56de\u6eda\n"})}),"\n",(0,t.jsxs)(e.admonition,{type:"info",children:[(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b"}),"\uff1a"]}),(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"None"}),"\uff1a\u81ea\u52a8\u63d0\u4ea4\u6a21\u5f0f\uff0c\u6bcf\u6761\u8bed\u53e5\u7acb\u5373\u63d0\u4ea4"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:'"DEFERRED"'}),"\uff1a\u9ed8\u8ba4\u503c\uff0c\u5728\u9996\u6b21\u8bfb\u5199\u65f6\u5f00\u59cb\u4e8b\u52a1"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:'"IMMEDIATE"'}),"\uff1a\u7acb\u5373\u5f00\u59cb\u4e8b\u52a1"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:'"EXCLUSIVE"'}),"\uff1a\u7acb\u5373\u83b7\u53d6\u6392\u4ed6\u9501"]}),"\n"]}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"conn = sqlite3.connect('example.db', isolation_level='IMMEDIATE')\n"})})]}),"\n",(0,t.jsx)(e.h2,{id:"\u6570\u636e\u7c7b\u578b\u6620\u5c04",children:"\u6570\u636e\u7c7b\u578b\u6620\u5c04"}),"\n",(0,t.jsx)(e.p,{children:"SQLite \u53ea\u6709 5 \u79cd\u5b58\u50a8\u7c7b\u578b\uff0cPython \u7684 sqlite3 \u6a21\u5757\u4f1a\u81ea\u52a8\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002"}),"\n",(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:"Python \u7c7b\u578b"}),(0,t.jsx)(e.th,{children:"SQLite \u7c7b\u578b"}),(0,t.jsx)(e.th,{children:"\u8bf4\u660e"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"None"})}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"NULL"})}),(0,t.jsx)(e.td,{children:"\u7a7a\u503c"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"int"})}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"INTEGER"})}),(0,t.jsx)(e.td,{children:"\u6574\u6570"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"float"})}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"REAL"})}),(0,t.jsx)(e.td,{children:"\u6d6e\u70b9\u6570"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"str"})}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"TEXT"})}),(0,t.jsx)(e.td,{children:"\u6587\u672c"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"bytes"})}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"BLOB"})}),(0,t.jsx)(e.td,{children:"\u4e8c\u8fdb\u5236\u6570\u636e"})]})]})]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"import sqlite3\nimport datetime\n\nconn = sqlite3.connect('example.db')\ncursor = conn.cursor()\n\n# \u521b\u5efa\u6d4b\u8bd5\u8868\ncursor.execute('''\n    CREATE TABLE IF NOT EXISTS data_types (\n        id INTEGER PRIMARY KEY,\n        integer_col INTEGER,\n        real_col REAL,\n        text_col TEXT,\n        blob_col BLOB,\n        null_col TEXT\n    )\n''')\n\n# \u63d2\u5165\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\ncursor.execute('''\n    INSERT INTO data_types (integer_col, real_col, text_col, blob_col, null_col)\n    VALUES (?, ?, ?, ?, ?)\n''', (42, 3.14, 'Hello', b'binary data', None))\n\nconn.commit()\n\n# \u67e5\u8be2\u6570\u636e\ncursor.execute(\"SELECT * FROM data_types\")\nrow = cursor.fetchone()\nprint(row)\n# (1, 42, 3.14, 'Hello', b'binary data', None)\n\nconn.close()\n"})}),"\n",(0,t.jsx)(e.h3,{id:"\u65e5\u671f\u548c\u65f6\u95f4\u5904\u7406",children:"\u65e5\u671f\u548c\u65f6\u95f4\u5904\u7406"}),"\n",(0,t.jsx)(e.p,{children:"SQLite \u6ca1\u6709\u4e13\u95e8\u7684\u65e5\u671f\u65f6\u95f4\u7c7b\u578b\uff0c\u901a\u5e38\u4f7f\u7528 TEXT\u3001REAL \u6216 INTEGER \u5b58\u50a8\u3002"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'import sqlite3\nfrom datetime import datetime, date\n\n# \u6ce8\u518c\u9002\u914d\u5668\u548c\u8f6c\u6362\u5668\nsqlite3.register_adapter(datetime, lambda val: val.isoformat())\nsqlite3.register_adapter(date, lambda val: val.isoformat())\n\nsqlite3.register_converter("timestamp", lambda val: datetime.fromisoformat(val.decode()))\nsqlite3.register_converter("date", lambda val: date.fromisoformat(val.decode()))\n\n# \u8fde\u63a5\u65f6\u542f\u7528\u7c7b\u578b\u68c0\u6d4b\nconn = sqlite3.connect(\'example.db\', detect_types=sqlite3.PARSE_DECLTYPES)\ncursor = conn.cursor()\n\ncursor.execute(\'\'\'\n    CREATE TABLE IF NOT EXISTS events (\n        id INTEGER PRIMARY KEY,\n        title TEXT,\n        event_date date,\n        created_at timestamp\n    )\n\'\'\')\n\n# \u63d2\u5165\u65e5\u671f\u65f6\u95f4\nnow = datetime.now()\ntoday = date.today()\n\ncursor.execute(\n    "INSERT INTO events (title, event_date, created_at) VALUES (?, ?, ?)",\n    (\'\u4f1a\u8bae\', today, now)\n)\nconn.commit()\n\n# \u67e5\u8be2\u4f1a\u81ea\u52a8\u8f6c\u6362\u56de Python \u5bf9\u8c61\ncursor.execute("SELECT * FROM events")\nrow = cursor.fetchone()\nprint(f"\u4e8b\u4ef6: {row[1]}, \u65e5\u671f: {row[2]}, \u521b\u5efa\u65f6\u95f4: {row[3]}")\nprint(f"\u7c7b\u578b: {type(row[2])}, {type(row[3])}")\n\nconn.close()\n'})}),"\n",(0,t.jsx)(e.h2,{id:"\u5b9e\u7528\u6280\u5de7",children:"\u5b9e\u7528\u6280\u5de7"}),"\n",(0,t.jsx)(e.h3,{id:"\u83b7\u53d6\u63d2\u5165\u7684\u81ea\u589e-id",children:"\u83b7\u53d6\u63d2\u5165\u7684\u81ea\u589e ID"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"import sqlite3\n\nconn = sqlite3.connect('example.db')\ncursor = conn.cursor()\n\ncursor.execute(\"INSERT INTO users (name, age) VALUES (?, ?)\", ('\u65b0\u7528\u6237', 25))\nconn.commit()\n\n# \u83b7\u53d6\u6700\u540e\u63d2\u5165\u7684\u884c ID\nlast_id = cursor.lastrowid\nprint(f\"\u65b0\u63d2\u5165\u7684\u7528\u6237 ID: {last_id}\")\n\nconn.close()\n"})}),"\n",(0,t.jsx)(e.h3,{id:"\u68c0\u67e5\u8868\u662f\u5426\u5b58\u5728",children:"\u68c0\u67e5\u8868\u662f\u5426\u5b58\u5728"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'import sqlite3\n\ndef table_exists(conn, table_name):\n    """\u68c0\u67e5\u8868\u662f\u5426\u5b58\u5728"""\n    cursor = conn.cursor()\n    cursor.execute("""\n        SELECT name FROM sqlite_master \n        WHERE type=\'table\' AND name=?\n    """, (table_name,))\n    return cursor.fetchone() is not None\n\nconn = sqlite3.connect(\'example.db\')\n\nif table_exists(conn, \'users\'):\n    print("users \u8868\u5b58\u5728")\nelse:\n    print("users \u8868\u4e0d\u5b58\u5728")\n\nconn.close()\n'})}),"\n",(0,t.jsx)(e.h3,{id:"\u83b7\u53d6\u8868\u7ed3\u6784\u4fe1\u606f",children:"\u83b7\u53d6\u8868\u7ed3\u6784\u4fe1\u606f"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'import sqlite3\n\nconn = sqlite3.connect(\'example.db\')\ncursor = conn.cursor()\n\n# \u83b7\u53d6\u8868\u7684\u5217\u4fe1\u606f\ncursor.execute("PRAGMA table_info(users)")\ncolumns = cursor.fetchall()\n\nprint("\u8868\u7ed3\u6784:")\nfor col in columns:\n    cid, name, col_type, notnull, default, pk = col\n    print(f"  {name}: {col_type}", end=\'\')\n    if pk:\n        print(" [PRIMARY KEY]", end=\'\')\n    if notnull:\n        print(" [NOT NULL]", end=\'\')\n    print()\n\n# \u83b7\u53d6\u6240\u6709\u8868\u540d\ncursor.execute("SELECT name FROM sqlite_master WHERE type=\'table\'")\ntables = cursor.fetchall()\nprint("\\n\u6570\u636e\u5e93\u4e2d\u7684\u8868:")\nfor table in tables:\n    print(f"  - {table[0]}")\n\nconn.close()\n'})}),"\n",(0,t.jsx)(e.h3,{id:"\u5907\u4efd\u6570\u636e\u5e93",children:"\u5907\u4efd\u6570\u636e\u5e93"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"import sqlite3\n\ndef backup_database(source_db, target_db):\n    \"\"\"\u5907\u4efd\u6570\u636e\u5e93\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\"\"\"\n    source = sqlite3.connect(source_db)\n    target = sqlite3.connect(target_db)\n    \n    # \u4f7f\u7528 backup API\n    source.backup(target)\n    \n    source.close()\n    target.close()\n    print(f\"\u6570\u636e\u5e93\u5df2\u5907\u4efd\u5230 {target_db}\")\n\n# \u5907\u4efd\u5230\u6587\u4ef6\nbackup_database('example.db', 'example_backup.db')\n\n# \u6216\u8005\u76f4\u63a5\u590d\u5236\u6587\u4ef6\uff08\u786e\u4fdd\u6570\u636e\u5e93\u6ca1\u6709\u6d3b\u52a8\u8fde\u63a5\uff09\nimport shutil\nshutil.copy2('example.db', 'example_backup2.db')\n"})}),"\n",(0,t.jsx)(e.h3,{id:"\u4f7f\u7528\u88c5\u9970\u5668\u7b80\u5316\u6570\u636e\u5e93\u64cd\u4f5c",children:"\u4f7f\u7528\u88c5\u9970\u5668\u7b80\u5316\u6570\u636e\u5e93\u64cd\u4f5c"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'import sqlite3\nfrom functools import wraps\n\ndef with_database(db_path):\n    """\u6570\u636e\u5e93\u64cd\u4f5c\u88c5\u9970\u5668"""\n    def decorator(func):\n        @wraps(func)\n        def wrapper(*args, **kwargs):\n            conn = sqlite3.connect(db_path)\n            conn.row_factory = sqlite3.Row\n            try:\n                result = func(conn, *args, **kwargs)\n                conn.commit()\n                return result\n            except Exception as e:\n                conn.rollback()\n                raise e\n            finally:\n                conn.close()\n        return wrapper\n    return decorator\n\n@with_database(\'example.db\')\ndef get_user_by_id(conn, user_id):\n    """\u6839\u636e ID \u83b7\u53d6\u7528\u6237"""\n    cursor = conn.cursor()\n    cursor.execute("SELECT * FROM users WHERE id = ?", (user_id,))\n    return cursor.fetchone()\n\n@with_database(\'example.db\')\ndef create_user(conn, name, age, email):\n    """\u521b\u5efa\u65b0\u7528\u6237"""\n    cursor = conn.cursor()\n    cursor.execute(\n        "INSERT INTO users (name, age, email) VALUES (?, ?, ?)",\n        (name, age, email)\n    )\n    return cursor.lastrowid\n\n# \u4f7f\u7528\nuser = get_user_by_id(1)\nif user:\n    print(dict(user))\n\nnew_id = create_user(\'\u65b0\u7528\u6237\', 30, \'new@example.com\')\nprint(f"\u521b\u5efa\u4e86\u7528\u6237\uff0cID: {new_id}")\n'})}),"\n",(0,t.jsx)(e.h2,{id:"\u5e38\u89c1\u9677\u9631\u4e0e\u6700\u4f73\u5b9e\u8df5",children:"\u5e38\u89c1\u9677\u9631\u4e0e\u6700\u4f73\u5b9e\u8df5"}),"\n",(0,t.jsx)(e.h3,{id:"\u9677\u9631-1\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898",children:"\u9677\u9631 1\uff1a\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"import sqlite3\nimport threading\n\n# \u274c \u9519\u8bef\uff1a\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u540c\u4e00\u4e2a\u8fde\u63a5\nconn = sqlite3.connect('example.db')\n\ndef worker():\n    cursor = conn.cursor()  # \u591a\u7ebf\u7a0b\u5171\u4eab\u8fde\u63a5\u4f1a\u51fa\u95ee\u9898\n    cursor.execute(\"INSERT INTO users (name, age) VALUES (?, ?)\", ('\u7528\u6237', 20))\n    conn.commit()\n\nthreads = [threading.Thread(target=worker) for _ in range(5)]\nfor t in threads:\n    t.start()\n\n# \u2705 \u6b63\u786e\uff1a\u6bcf\u4e2a\u7ebf\u7a0b\u521b\u5efa\u81ea\u5df1\u7684\u8fde\u63a5\ndef worker_correct():\n    conn = sqlite3.connect('example.db')\n    cursor = conn.cursor()\n    cursor.execute(\"INSERT INTO users (name, age) VALUES (?, ?)\", ('\u7528\u6237', 20))\n    conn.commit()\n    conn.close()\n\n# \u6216\u8005\u4f7f\u7528 check_same_thread=False\uff08\u8c28\u614e\u4f7f\u7528\uff09\nconn = sqlite3.connect('example.db', check_same_thread=False)\n"})}),"\n",(0,t.jsx)(e.h3,{id:"\u9677\u9631-2\u5fd8\u8bb0\u63d0\u4ea4\u4e8b\u52a1",children:"\u9677\u9631 2\uff1a\u5fd8\u8bb0\u63d0\u4ea4\u4e8b\u52a1"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"import sqlite3\n\n# \u274c \u9519\u8bef\uff1a\u4fee\u6539\u6570\u636e\u540e\u5fd8\u8bb0\u63d0\u4ea4\nconn = sqlite3.connect('example.db')\ncursor = conn.cursor()\ncursor.execute(\"INSERT INTO users (name, age) VALUES (?, ?)\", ('\u6d4b\u8bd5', 25))\nconn.close()  # \u6570\u636e\u672a\u63d0\u4ea4\uff0c\u4e22\u5931\u4e86\uff01\n\n# \u2705 \u6b63\u786e\uff1a\u8bb0\u5f97\u63d0\u4ea4\nconn = sqlite3.connect('example.db')\ncursor = conn.cursor()\ncursor.execute(\"INSERT INTO users (name, age) VALUES (?, ?)\", ('\u6d4b\u8bd5', 25))\nconn.commit()  # \u63d0\u4ea4\u4e8b\u52a1\nconn.close()\n\n# \u2705 \u66f4\u597d\uff1a\u4f7f\u7528\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\nwith sqlite3.connect('example.db') as conn:\n    cursor = conn.cursor()\n    cursor.execute(\"INSERT INTO users (name, age) VALUES (?, ?)\", ('\u6d4b\u8bd5', 25))\n    # \u81ea\u52a8\u63d0\u4ea4\n"})}),"\n",(0,t.jsx)(e.h3,{id:"\u9677\u9631-3\u9891\u7e41\u7684\u5c0f\u4e8b\u52a1\u5bfc\u81f4\u6027\u80fd\u5dee",children:"\u9677\u9631 3\uff1a\u9891\u7e41\u7684\u5c0f\u4e8b\u52a1\u5bfc\u81f4\u6027\u80fd\u5dee"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'import sqlite3\nimport time\n\nconn = sqlite3.connect(\'example.db\')\ncursor = conn.cursor()\n\n# \u274c \u6162\uff1a\u6bcf\u6b21\u63d2\u5165\u90fd\u63d0\u4ea4\nstart = time.time()\nfor i in range(1000):\n    cursor.execute("INSERT INTO users (name, age) VALUES (?, ?)", (f\'\u7528\u6237{i}\', 20))\n    conn.commit()  # \u6bcf\u6b21\u90fd\u63d0\u4ea4\uff0c\u5f88\u6162\uff01\nprint(f"\u8017\u65f6: {time.time() - start:.2f}\u79d2")\n\n# \u2705 \u5feb\uff1a\u6279\u91cf\u63d0\u4ea4\nstart = time.time()\nfor i in range(1000):\n    cursor.execute("INSERT INTO users (name, age) VALUES (?, ?)", (f\'\u7528\u6237{i}\', 20))\nconn.commit()  # \u4e00\u6b21\u6027\u63d0\u4ea4\nprint(f"\u8017\u65f6: {time.time() - start:.2f}\u79d2")\n\n# \u2705 \u66f4\u5feb\uff1a\u4f7f\u7528 executemany\nstart = time.time()\ndata = [(f\'\u7528\u6237{i}\', 20) for i in range(1000)]\ncursor.executemany("INSERT INTO users (name, age) VALUES (?, ?)", data)\nconn.commit()\nprint(f"\u8017\u65f6: {time.time() - start:.2f}\u79d2")\n\nconn.close()\n'})}),"\n",(0,t.jsx)(e.h3,{id:"\u9677\u9631-4\u6570\u636e\u5e93\u9501\u5b9a",children:"\u9677\u9631 4\uff1a\u6570\u636e\u5e93\u9501\u5b9a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"import sqlite3\n\n# SQLite \u5728\u5199\u5165\u65f6\u4f1a\u9501\u5b9a\u6574\u4e2a\u6570\u636e\u5e93\n\n# \u274c \u53ef\u80fd\u5bfc\u81f4\u6b7b\u9501\nconn1 = sqlite3.connect('example.db')\nconn2 = sqlite3.connect('example.db')\n\ncursor1 = conn1.cursor()\ncursor2 = conn2.cursor()\n\ncursor1.execute(\"BEGIN\")\ncursor1.execute(\"INSERT INTO users (name, age) VALUES (?, ?)\", ('\u7528\u62371', 20))\n\n# conn2 \u5c1d\u8bd5\u5199\u5165\u4f1a\u88ab\u963b\u585e\uff0c\u76f4\u5230 conn1 \u63d0\u4ea4\u6216\u56de\u6eda\ntry:\n    cursor2.execute(\"INSERT INTO users (name, age) VALUES (?, ?)\", ('\u7528\u62372', 21))\n    conn2.commit()\nexcept sqlite3.OperationalError as e:\n    print(f\"\u6570\u636e\u5e93\u88ab\u9501\u5b9a: {e}\")\n\nconn1.commit()\nconn1.close()\nconn2.close()\n\n# \u2705 \u89e3\u51b3\u65b9\u6848\uff1a\u8bbe\u7f6e\u66f4\u957f\u7684\u8d85\u65f6\u65f6\u95f4\nconn = sqlite3.connect('example.db', timeout=30.0)\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u6027\u80fd\u4f18\u5316",children:"\u6027\u80fd\u4f18\u5316"}),"\n",(0,t.jsx)(e.h3,{id:"\u4f7f\u7528\u7d22\u5f15",children:"\u4f7f\u7528\u7d22\u5f15"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'import sqlite3\n\nconn = sqlite3.connect(\'example.db\')\ncursor = conn.cursor()\n\n# \u521b\u5efa\u7d22\u5f15\u4ee5\u52a0\u901f\u67e5\u8be2\ncursor.execute("CREATE INDEX IF NOT EXISTS idx_users_email ON users(email)")\ncursor.execute("CREATE INDEX IF NOT EXISTS idx_users_age ON users(age)")\n\n# \u67e5\u770b\u67e5\u8be2\u8ba1\u5212\ncursor.execute("EXPLAIN QUERY PLAN SELECT * FROM users WHERE email = ?", (\'test@example.com\',))\nprint(cursor.fetchall())\n\nconn.close()\n'})}),"\n",(0,t.jsx)(e.h3,{id:"\u4f7f\u7528-wal-\u6a21\u5f0f",children:"\u4f7f\u7528 WAL \u6a21\u5f0f"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'import sqlite3\n\nconn = sqlite3.connect(\'example.db\')\n\n# \u542f\u7528 WAL\uff08Write-Ahead Logging\uff09\u6a21\u5f0f\n# \u4f18\u70b9\uff1a\u8bfb\u5199\u53ef\u4ee5\u5e76\u53d1\uff0c\u6027\u80fd\u66f4\u597d\nconn.execute("PRAGMA journal_mode=WAL")\n\n# \u5176\u4ed6\u6027\u80fd\u4f18\u5316\u8bbe\u7f6e\nconn.execute("PRAGMA synchronous = NORMAL")  # \u5e73\u8861\u5b89\u5168\u6027\u548c\u6027\u80fd\nconn.execute("PRAGMA cache_size = -64000")   # \u8bbe\u7f6e\u7f13\u5b58\u5927\u5c0f\uff08KB\uff09\nconn.execute("PRAGMA temp_store = MEMORY")   # \u4e34\u65f6\u8868\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\n\nconn.close()\n'})}),"\n",(0,t.jsx)(e.h3,{id:"\u6279\u91cf\u64cd\u4f5c\u6280\u5de7",children:"\u6279\u91cf\u64cd\u4f5c\u6280\u5de7"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'import sqlite3\n\nconn = sqlite3.connect(\'example.db\')\ncursor = conn.cursor()\n\n# \u5927\u91cf\u63d2\u5165\u65f6\u6682\u65f6\u5173\u95ed\u540c\u6b65\ncursor.execute("PRAGMA synchronous = OFF")\ncursor.execute("PRAGMA journal_mode = MEMORY")\n\n# \u4f7f\u7528\u4e8b\u52a1\ncursor.execute("BEGIN TRANSACTION")\n\n# \u6279\u91cf\u63d2\u5165\ndata = [(f\'\u7528\u6237{i}\', i % 100) for i in range(10000)]\ncursor.executemany("INSERT INTO users (name, age) VALUES (?, ?)", data)\n\ncursor.execute("COMMIT")\n\n# \u6062\u590d\u6b63\u5e38\u8bbe\u7f6e\ncursor.execute("PRAGMA synchronous = FULL")\n\nconn.close()\n'})}),"\n",(0,t.jsx)(e.h2,{id:"\u5b8c\u6574\u793a\u4f8b\u7b80\u5355\u7684\u4efb\u52a1\u7ba1\u7406\u7cfb\u7edf",children:"\u5b8c\u6574\u793a\u4f8b\uff1a\u7b80\u5355\u7684\u4efb\u52a1\u7ba1\u7406\u7cfb\u7edf"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"import sqlite3\nfrom datetime import datetime\nfrom typing import List, Optional\n\nclass TaskManager:\n    \"\"\"\u7b80\u5355\u7684\u4efb\u52a1\u7ba1\u7406\u7cfb\u7edf\"\"\"\n    \n    def __init__(self, db_path: str = 'tasks.db'):\n        self.db_path = db_path\n        self._init_database()\n    \n    def _init_database(self):\n        \"\"\"\u521d\u59cb\u5316\u6570\u636e\u5e93\"\"\"\n        with sqlite3.connect(self.db_path) as conn:\n            conn.execute('''\n                CREATE TABLE IF NOT EXISTS tasks (\n                    id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    title TEXT NOT NULL,\n                    description TEXT,\n                    status TEXT DEFAULT 'pending',\n                    priority INTEGER DEFAULT 0,\n                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n                    completed_at TIMESTAMP\n                )\n            ''')\n            conn.execute('CREATE INDEX IF NOT EXISTS idx_status ON tasks(status)')\n    \n    def add_task(self, title: str, description: str = '', priority: int = 0) -> int:\n        \"\"\"\u6dfb\u52a0\u65b0\u4efb\u52a1\"\"\"\n        with sqlite3.connect(self.db_path) as conn:\n            cursor = conn.cursor()\n            cursor.execute(\n                'INSERT INTO tasks (title, description, priority) VALUES (?, ?, ?)',\n                (title, description, priority)\n            )\n            return cursor.lastrowid\n    \n    def get_task(self, task_id: int) -> Optional[dict]:\n        \"\"\"\u83b7\u53d6\u5355\u4e2a\u4efb\u52a1\"\"\"\n        with sqlite3.connect(self.db_path) as conn:\n            conn.row_factory = sqlite3.Row\n            cursor = conn.cursor()\n            cursor.execute('SELECT * FROM tasks WHERE id = ?', (task_id,))\n            row = cursor.fetchone()\n            return dict(row) if row else None\n    \n    def list_tasks(self, status: Optional[str] = None) -> List[dict]:\n        \"\"\"\u5217\u51fa\u4efb\u52a1\"\"\"\n        with sqlite3.connect(self.db_path) as conn:\n            conn.row_factory = sqlite3.Row\n            cursor = conn.cursor()\n            \n            if status:\n                cursor.execute(\n                    'SELECT * FROM tasks WHERE status = ? ORDER BY priority DESC, created_at',\n                    (status,)\n                )\n            else:\n                cursor.execute('SELECT * FROM tasks ORDER BY priority DESC, created_at')\n            \n            return [dict(row) for row in cursor.fetchall()]\n    \n    def complete_task(self, task_id: int) -> bool:\n        \"\"\"\u5b8c\u6210\u4efb\u52a1\"\"\"\n        with sqlite3.connect(self.db_path) as conn:\n            cursor = conn.cursor()\n            cursor.execute(\n                'UPDATE tasks SET status = ?, completed_at = ? WHERE id = ?',\n                ('completed', datetime.now().isoformat(), task_id)\n            )\n            return cursor.rowcount > 0\n    \n    def delete_task(self, task_id: int) -> bool:\n        \"\"\"\u5220\u9664\u4efb\u52a1\"\"\"\n        with sqlite3.connect(self.db_path) as conn:\n            cursor = conn.cursor()\n            cursor.execute('DELETE FROM tasks WHERE id = ?', (task_id,))\n            return cursor.rowcount > 0\n\n# \u4f7f\u7528\u793a\u4f8b\nif __name__ == '__main__':\n    tm = TaskManager()\n    \n    # \u6dfb\u52a0\u4efb\u52a1\n    task1_id = tm.add_task('\u5b66\u4e60 SQLite', '\u5b8c\u6210 SQLite \u6559\u7a0b', priority=1)\n    task2_id = tm.add_task('\u5199\u4ee3\u7801', '\u5b9e\u73b0\u4efb\u52a1\u7ba1\u7406\u529f\u80fd', priority=2)\n    task3_id = tm.add_task('\u6d4b\u8bd5', '\u7f16\u5199\u5355\u5143\u6d4b\u8bd5', priority=1)\n    \n    # \u5217\u51fa\u6240\u6709\u4efb\u52a1\n    print(\"\u6240\u6709\u4efb\u52a1:\")\n    for task in tm.list_tasks():\n        print(f\"  [{task['id']}] {task['title']} (\u4f18\u5148\u7ea7: {task['priority']}, \u72b6\u6001: {task['status']})\")\n    \n    # \u5b8c\u6210\u4e00\u4e2a\u4efb\u52a1\n    tm.complete_task(task1_id)\n    \n    # \u5217\u51fa\u5f85\u5b8c\u6210\u7684\u4efb\u52a1\n    print(\"\\n\u5f85\u5b8c\u6210\u7684\u4efb\u52a1:\")\n    for task in tm.list_tasks(status='pending'):\n        print(f\"  [{task['id']}] {task['title']}\")\n    \n    # \u83b7\u53d6\u5355\u4e2a\u4efb\u52a1\n    task = tm.get_task(task2_id)\n    if task:\n        print(f\"\\n\u4efb\u52a1\u8be6\u60c5: {task}\")\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u76f8\u5173\u8d44\u6e90\u63a8\u8350",children:"\u76f8\u5173\u8d44\u6e90\u63a8\u8350"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(s,{color:"green",children:[(0,t.jsx)(e.a,{href:"https://www.sqlite.org/docs.html",children:"SQLite \u5b98\u65b9\u6587\u6863"})," - \u6743\u5a01\u53c2\u8003"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(s,{color:"green",children:[(0,t.jsx)(e.a,{href:"https://docs.python.org/zh-cn/3/library/sqlite3.html",children:"Python sqlite3 \u6587\u6863"})," - Python \u6807\u51c6\u5e93\u6587\u6863"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(s,{color:"green",children:[(0,t.jsx)(e.a,{href:"https://sqlitebrowser.org/",children:"DB Browser for SQLite"})," - \u53ef\u89c6\u5316\u6570\u636e\u5e93\u7ba1\u7406\u5de5\u5177"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.a,{href:"https://www.sqlitetutorial.net/",children:"SQLite Tutorial"})," - \u5168\u9762\u7684 SQLite \u6559\u7a0b"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.a,{href:"https://www.w3schools.com/sql/",children:"w3schools SQL"})," - SQL \u8bed\u6cd5\u5b66\u4e60"]}),"\n",(0,t.jsxs)(e.li,{children:["\u76f8\u5173 Python \u5e93\uff1a","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"sqlalchemy"})," - \u5f3a\u5927\u7684 ORM \u6846\u67b6"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"peewee"})," - \u8f7b\u91cf\u7ea7 ORM"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"dataset"})," - \u7b80\u5316\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u5e93"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.admonition,{type:"tip",children:(0,t.jsx)(e.p,{children:"\u5982\u679c\u9879\u76ee\u9700\u6c42\u8d85\u51fa SQLite \u7684\u80fd\u529b\u8303\u56f4\uff08\u5982\u9700\u8981\u9ad8\u5e76\u53d1\u5199\u5165\u3001\u7f51\u7edc\u8bbf\u95ee\u3001\u7528\u6237\u6743\u9650\u7ba1\u7406\u7b49\uff09\uff0c\u5efa\u8bae\u8fc1\u79fb\u5230 PostgreSQL \u6216 MySQL\u3002"})})]})}function u(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},28453:(n,e,s)=>{s.d(e,{R:()=>i,x:()=>o});var r=s(96540);const t={},c=r.createContext(t);function i(n){const e=r.useContext(c);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:i(n.components),r.createElement(c.Provider,{value:e},n.children)}}}]);