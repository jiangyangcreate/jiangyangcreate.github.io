"use strict";(self.webpackChunkjiangmiemie=self.webpackChunkjiangmiemie||[]).push([[5859],{54862:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"\u673a\u5668\u5b66\u4e60/\u5206\u7c7b\u7b97\u6cd5","title":"\u5206\u7c7b\u7b97\u6cd5","description":"KNN\u7b97\u6cd5","source":"@site/docs/docs/\u673a\u5668\u5b66\u4e60/\u5206\u7c7b\u7b97\u6cd5.md","sourceDirName":"\u673a\u5668\u5b66\u4e60","slug":"/\u673a\u5668\u5b66\u4e60/\u5206\u7c7b\u7b97\u6cd5","permalink":"/docs/\u673a\u5668\u5b66\u4e60/\u5206\u7c7b\u7b97\u6cd5","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"sidebar_position":0,"title":"\u5206\u7c7b\u7b97\u6cd5"},"sidebar":"tutorialSidebar","previous":{"title":"\u673a\u5668\u5b66\u4e60","permalink":"/docs/\u673a\u5668\u5b66\u4e60/"},"next":{"title":"\u805a\u7c7b\u7b97\u6cd5","permalink":"/docs/\u673a\u5668\u5b66\u4e60/\u805a\u7c7b\u7b97\u6cd5"}}');var i=s(74848),a=s(28453);const t={sidebar_position:0,title:"\u5206\u7c7b\u7b97\u6cd5"},l=void 0,o={},c=[{value:"KNN\u7b97\u6cd5",id:"knn\u7b97\u6cd5",level:2},{value:"\u7b80\u5355\u5b9e\u6218",id:"\u7b80\u5355\u5b9e\u6218",level:3},{value:"\u6548\u679c\u8bc4\u4f30",id:"\u6548\u679c\u8bc4\u4f30",level:3},{value:"\u6548\u679c\u8bc4\u4f30\u7684\u6539\u8fdb",id:"\u6548\u679c\u8bc4\u4f30\u7684\u6539\u8fdb",level:3},{value:"\u5b9e\u65f6\u5206\u7c7b\u5668",id:"\u5b9e\u65f6\u5206\u7c7b\u5668",level:3},{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:4},{value:"\u9898\u89e3",id:"\u9898\u89e3",level:4},{value:"\u6734\u7d20\u8d1d\u53f6\u65af",id:"\u6734\u7d20\u8d1d\u53f6\u65af",level:2},{value:"\u4f7f\u7528sklearn\u6a21\u5757\u5b8c\u6210",id:"\u4f7f\u7528sklearn\u6a21\u5757\u5b8c\u6210",level:3},{value:"\u7b80\u5355\u793a\u4f8b",id:"\u7b80\u5355\u793a\u4f8b",level:3},{value:"\u6548\u679c\u8bc4\u4f30",id:"\u6548\u679c\u8bc4\u4f30-1",level:3},{value:"\u67e5\u770b\u5206\u7c7b\u9519\u8bef\u7684\u6837\u672c\u4fe1\u606f",id:"\u67e5\u770b\u5206\u7c7b\u9519\u8bef\u7684\u6837\u672c\u4fe1\u606f",level:3},{value:"\u652f\u6301\u5411\u91cf\u673a",id:"\u652f\u6301\u5411\u91cf\u673a",level:2},{value:"\u7b80\u5355\u793a\u4f8b",id:"\u7b80\u5355\u793a\u4f8b-1",level:3},{value:"\u6548\u679c\u8bc4\u4f30",id:"\u6548\u679c\u8bc4\u4f30-2",level:3},{value:"\u6570\u636e normalization",id:"\u6570\u636e-normalization",level:3},{value:"\u9632\u6b62\u8fc7\u62df\u5408",id:"\u9632\u6b62\u8fc7\u62df\u5408",level:3}];function d(n){const e={code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"knn\u7b97\u6cd5",children:"KNN\u7b97\u6cd5"}),"\n",(0,i.jsx)(e.p,{children:"\u8fd9\u4e2a\u7b97\u6cd5\u65e2\u53ef\u4ee5\u89e3\u51b3\u5206\u7c7b\u95ee\u9898\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e\u56de\u5f52\u95ee\u9898\uff0c\u4f46\u5de5\u4e1a\u4e0a\u7528\u4e8e\u5206\u7c7b\u7684\u60c5\u51b5\u66f4\u591a\u3002"}),"\n",(0,i.jsx)(e.p,{children:"KNN \u5148\u8bb0\u5f55\u6240\u6709\u5df2\u77e5\u6570\u636e\uff0c\u518d\u5229\u7528\u4e00\u4e2a\u8ddd\u79bb\u51fd\u6570\uff0c"}),"\n",(0,i.jsx)(e.p,{children:"\u627e\u51fa\u5df2\u77e5\u6570\u636e\u4e2d\u8ddd\u79bb\u672a\u77e5\u4e8b\u4ef6\u6700\u8fd1\u7684 K \u7ec4\u6570\u636e\uff0c"}),"\n",(0,i.jsx)(e.p,{children:"\u6700\u540e\u6309\u7167\u8fd9 K \u7ec4\u6570\u636e\u91cc\u6700\u5e38\u89c1\u7684\u7c7b\u522b\u9884\u6d4b\u8be5\u4e8b\u4ef6\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'from sklearn.neighbors import KNeighborsClassifier\nimport numpy as np\n\n# \u521b\u5efa\u4e00\u4e9b\u793a\u4f8b\u6570\u636e\nX = np.array([[1, 2], [2, 3], [2, 5], [3, 2], [3, 3], [4, 5]])  # \u7279\u5f81\ny = np.array([0, 0, 1, 0, 1, 1])  # \u76ee\u6807\u6807\u7b7e\n\n# \u521b\u5efaK-\u6700\u8fd1\u90bb\u5206\u7c7b\u5668\nk = 3  # \u9009\u62e9K\u7684\u503c\nmodel = KNeighborsClassifier(n_neighbors=k).fit(X, y)\n\n# \u9884\u6d4b\u65b0\u6570\u636e\u70b9\nnew_data_point = np.array([[3, 4]])  # \u8981\u9884\u6d4b\u7684\u65b0\u6570\u636e\u70b9\n\n# .predicts()\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u5305\u542b\u4e86\u9884\u6d4b\u7684\u7c7b\u522b\npredicted_class = model.predict(new_data_point)\n\nprint("\u9884\u6d4b\u7c7b\u522b:", predicted_class)\n'})}),"\n",(0,i.jsx)(e.h3,{id:"\u7b80\u5355\u5b9e\u6218",children:"\u7b80\u5355\u5b9e\u6218"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import train_test_split\n\n# \u5bfc\u5165\u9e22\u5c3e\u82b1\u6570\u636e\u5e93\nfrom sklearn.datasets import load_iris\n\n# \u52a0\u8f7d\u6570\u636e\u96c6\uff0c\u6570\u636e\u96c6\u5305\u542b\u6570\u636e\u7684\u7279\u5f81\u3001\u6807\u7b7e\u3001\u7c7b\u522b\u7b49\u8bb8\u591a\u4fe1\u606f\niris = load_iris()\n# \u83b7\u53d6\u6570\u636e\u7279\u5f81\uff08\u5373\u82b1\u7684\u9ad8\u5ea6\u3001\u5bbd\u5ea6\u7b49\uff09\niris_X = iris.data\n# \u83b7\u53d6\u6570\u636e\u6807\u7b7e\uff08\u5373\u82b1\u7684\u54c1\u79cd\uff0c\u75280\u30011\u30012\u4ee3\u66ff\uff09\niris_y = iris.target\nprint(len(iris_X)) # \u67e5\u770b\u6570\u636e\u96c6\u7684\u5927\u5c0f\n\n# # \u83b7\u53d6\u524d2\u6761\u6570\u636e,\u4ece0\u5f00\u59cb\u52302\u7ed3\u675f,\u4e0d\u5305\u62ec2\u3002\u5199\u6cd51\n# print(iris_X[0:2])\n\n# # \u83b7\u53d6\u524d2\u6761\u6570\u636e,\u4ece0\u5f00\u59cb\u52302\u7ed3\u675f,\u4e0d\u5305\u62ec2\u3002\u5199\u6cd52\uff0c\u7701\u75650\n# print(iris_X[:2])\n\n# # \u83b7\u53d6\u524d2\u6761\u6570\u636e,\u4ece0\u5f00\u59cb\u52302\u7ed3\u675f,\u4e0d\u5305\u62ec2\u3002\u5199\u6cd53\uff0c\u7701\u75650\n# print(iris_X[:2,:])\n\n# # \u83b7\u53d6\u524d2\u6761\u6570\u636e,\u4ece0\u5f00\u59cb\u52302\u7ed3\u675f,\u4e0d\u5305\u62ec2\u3002\u5199\u6cd54\uff0c\u7701\u75650,\u53ea\u53d6\u7b2c\u4e00\u5217\n# print(iris_X[:2,0])\n\n# # \u67e5\u770b\u82b1\u7684\u7c7b\u522b\n# print(iris_y)\n# # \u67e5\u770b\u82b1\u7684\u6570\u636e\n# print(iris_X)\n# # \u5408\u5728\u4e00\u8d77\u67e5\u770b\n# print(list(zip(iris_X,iris_y)))\n\n# \u628a\u6570\u636e\u6253\u4e71\uff0c\u5e76\u5206\u6210\u6d4b\u8bd5\u6570\u636e\u548c\u8bad\u7ec3\u6570\u636e\uff0ctest_size\u662f\u6d4b\u8bd5\u6570\u636e\u7684\u6bd4\u4f8b\uff0c0.3\u8868\u793a\u4e3a30%\nX_train, X_test, y_train, y_test = train_test_split(iris_X, iris_y, test_size=0.3)\n\n'''\ntrain_test_split\u8be6\u89e3\n\n\u6b64\u65b9\u6cd5\u4f1a\u5c06\u6570\u636e\u548c\u6807\u7b7e\u5747\u5206\u6210\u4e24\u90e8\u5206\u5e76\u6253\u4e71\uff0c\u4e00\u90e8\u5206\u7528\u4e8e\u8bad\u7ec3\uff0c\u4e00\u90e8\u5206\u7528\u4e8e\u6d4b\u8bd5\u3002\n\n\u6240\u4ee5\u8fd4\u56de\u7684\u6570\u636e\u67094\u4e2a\uff0c\u6211\u4eec\u75281\u30012\u30013\u30014\u7ed9\u4ed6\u4eec\u505a\u4e0a\u8bb0\u53f7.\n\n\u6570\u636eX [------70%---(1)-- | -30%(2)-]\n\u6807\u7b7ey [------70%---(3)-- | -30%(4)-]\n\n\u4e0e\u4e0a\u56fe\u5bf9\u5e94\uff0c\u4f9d\u6b21\u662f:\n\n\u8bad\u7ec3\u7684\u6570\u636eX(1),  \u6d4b\u8bd5\u7684\u6570\u636eX(2),\n     \u2191\u2193              \u2191\u2193\n\u8bad\u7ec3\u7684\u6807\u7b7ey(3),  \u6d4b\u8bd5\u7684\u6807\u7b7ey(4)\n\n\u7528(1)\u3001(3)\u5582\u51fa\u4e00\u4e2a\u6a21\u578b\n\n\u8ba9\u6a21\u578b\u9884\u6d4b(2)\uff0c\u83b7\u5f97\u9884\u6d4b\u7ed3\u679c\n\n\u5c06\u9884\u6d4b\u7ed3\u679c\u4e0e(4)\u8fdb\u884c\u6bd4\u8f83\u6765\u6d4b\u8bd5\u6a21\u578b\u7684\u51c6\u786e\u7387\n'''\n\n# \u67e5\u770b\u8bad\u7ec3\u6570\u636e\uff0c\u5df2\u7ecf\u88ab\u968f\u673a\u6253\u4e71\u4e86\n# print(y_train)\n# \u5b9e\u4f8b\u5316KNN\u5206\u7c7b\u5668\nknn = KNeighborsClassifier()\n# .fit()\u65b9\u6cd5\u7528\u4e8e\u8bad\u7ec3\u6a21\u578b\uff0c\u5373\u8ba9\u6a21\u578b\u4ece\u6570\u636e\u4e2d\u5b66\u4e60\nknn.fit(X_train, y_train)\n# .predicts()\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u5305\u542b\u4e86\u9884\u6d4b\u7684\u7c7b\u522b\nprint(knn.predict(X_test))\n# \u67e5\u770b\u771f\u5b9e\u6570\u636e\nprint(y_test)\n"})}),"\n",(0,i.jsx)(e.h3,{id:"\u6548\u679c\u8bc4\u4f30",children:"\u6548\u679c\u8bc4\u4f30"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"right = 0\nerror = 0\nfor i in zip(knn.predict(X_test),y_test):\n    #print(i)\n    if i[0] == i[1]:\n        right +=1\n    else:\n        error +=1\nprint(right,error)\nprint('\u6b63\u786e\u7387\uff1a{}%'.format(right/(right+error)*100))\n"})}),"\n",(0,i.jsx)(e.h3,{id:"\u6548\u679c\u8bc4\u4f30\u7684\u6539\u8fdb",children:"\u6548\u679c\u8bc4\u4f30\u7684\u6539\u8fdb"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"print('\u6b63\u786e\u7387\uff1a{}%'.format(knn.score(X_test,y_test)*100))\n\n# \u6b63\u786e\u7387\uff1a100.0%\n"})}),"\n",(0,i.jsx)(e.h3,{id:"\u5b9e\u65f6\u5206\u7c7b\u5668",children:"\u5b9e\u65f6\u5206\u7c7b\u5668"}),"\n",(0,i.jsx)(e.h4,{id:"\u63cf\u8ff0",children:"\u63cf\u8ff0"}),"\n",(0,i.jsx)(e.p,{children:"KNN \u7b97\u6cd5\u5148\u8bb0\u5f55\u6240\u6709\u5df2\u77e5\u6570\u636e\uff0c\u518d\u5229\u7528\u4e00\u4e2a\u8ddd\u79bb\u51fd\u6570\uff0c\u627e\u51fa\u5df2\u77e5\u6570\u636e\u4e2d\u8ddd\u79bb\u672a\u77e5\u4e8b\u4ef6\u6700\u8fd1\u7684 K \u7ec4\u6570\u636e\uff0c\u6700\u540e\u6309\u7167\u8fd9 K \u7ec4\u6570\u636e\u91cc\u6700\u5e38\u89c1\u7684\u7c7b\u522b\u9884\u6d4b\u8be5\u4e8b\u4ef6\u3002\u53ef\u4ee5\u89e3\u51b3\u5206\u7c7b\u95ee\u9898\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u8bf7\u7f16\u5199\u4e00\u6bb5\u7a0b\u5e8f\u8bfb\u53d6\u7528\u6237\u7684\u6444\u50cf\u5934\uff0c\u8ba9\u7528\u6237\u901a\u8fc7\u6309\u952e\u6216\u70b9\u51fb\u7684\u65b9\u5f0f\u5b9e\u65f6\u8bad\u7ec3\u5e76\u67e5\u770b\u5f53\u524d\u6444\u50cf\u5934\u7684\u9884\u6d4b\u7ed3\u679c\u3002"}),"\n",(0,i.jsx)(e.h4,{id:"\u9898\u89e3",children:"\u9898\u89e3"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'\'\'\'\n\u65b0\u5efa`.py`\u5e76\u5c06\u4e0b\u65b9\u4ee3\u7801\u590d\u5236\u8fdb\u53bb\uff0c\u786e\u4fdd\u5df2\u7ecf\u5b89\u88c5\u597d\u4e86\u4e0b\u65b9\u7684\u6a21\u5757\u5e93\u3002\n\npip install opencv-python\npip install tensorflow\n\n\n1. \u7b49\u5f85\u6a21\u578b\u52a0\u8f7d\uff08\u52a0\u8f7d\u5b8c\u6210\u540e\u4f1a\u5f39\u51fa\u6444\u50cf\u5934\uff09\n\n2. \u6309\u4e0b\u952e\u76d8\u7684A\u5219\u83b7\u53d6\u5f53\u524d\u6444\u50cf\u5934\u622a\u56fe\u52a0\u5165A\u8bad\u7ec3\u96c6\n\n3. \u4ee5\u6b64\u7c7b\u63a8\u6dfb\u52a0B\u3001C\u8bad\u7ec3\u96c6\n\n4. \u89c2\u5bdf\u5c4f\u5e55\u8f93\u51fa\u7684\u9884\u6d4b\u7ed3\u679c\n\'\'\'\nimport cv2\nimport tensorflow as tf\nfrom tensorflow.keras.applications import MobileNet\nfrom tensorflow.keras.preprocessing import image\nfrom tensorflow.keras.applications.mobilenet import preprocess_input\nfrom tensorflow.keras.models import Model\nimport numpy as np\n\n\n# \u5b9a\u4e49KNN\u5206\u7c7b\u5668\u7c7b\nclass KNNClassifier:\n    def __init__(self):\n        # \u521d\u59cb\u5316\u5b58\u50a8\u4e0d\u540c\u7c7b\u522b\u6837\u672c\u7279\u5f81\u7684\u5b57\u5178\uff0c\u5305\u542bA\u3001B\u3001C\u4e09\u4e2a\u7c7b\u522b\n        self.examples = {"A": [], "B": [], "C": []}\n\n    def add_example(self, activation, class_id):\n        # \u5c06\u65b0\u7684\u7279\u5f81\u5411\u91cf\u6dfb\u52a0\u5230\u5bf9\u5e94\u7c7b\u522b\u7684\u6837\u672c\u96c6\u4e2d\n        self.examples[class_id].append(activation)\n\n    def predict_class(self, activation):\n        # \u521d\u59cb\u5316\u5b58\u50a8\u5404\u7c7b\u522b\u8ddd\u79bb\u7684\u5b57\u5178\n        distances = {}\n        # \u904d\u5386\u6240\u6709\u7c7b\u522b\u53ca\u5176\u5bf9\u5e94\u7684\u6837\u672c\n        for class_id, examples in self.examples.items():\n            # \u8ba1\u7b97\u5f53\u524d\u7279\u5f81\u5411\u91cf\u4e0e\u8be5\u7c7b\u522b\u6240\u6709\u6837\u672c\u7684\u5e73\u5747\u6b27\u6c0f\u8ddd\u79bb\n            distances[class_id] = np.mean(\n                # np.linalg.norm \u8ba1\u7b97\u5411\u91cf\u8303\u6570 \u8303\u6570\u662f\u8861\u91cf\u5411\u91cf"\u5927\u5c0f"\u6216"\u957f\u5ea6"\u7684\u6570\u5b66\u6982\u5ff5\u3002\u6700\u5e38\u7528\u7684\u662f2\u8303\u6570\uff08\u4e5f\u53eb\u6b27\u6c0f\u8303\u6570\uff09\uff0c\u5c31\u662f\u6211\u4eec\u719f\u6089\u7684\u5411\u91cf\u957f\u5ea6\u516c\u5f0f\u3002\n                [np.linalg.norm(act - activation) for act in examples]\n            )\n\n        # \u627e\u5230\u8ddd\u79bb\u6700\u5c0f\u7684\u7c7b\u522b\u4f5c\u4e3a\u9884\u6d4b\u7ed3\u679c\n        predicted_class = min(distances, key=distances.get)\n        # \u6839\u636e\u8ddd\u79bb\u8ba1\u7b97\u7f6e\u4fe1\u5ea6\uff0c\u8ddd\u79bb\u8d8a\u5c0f\u7f6e\u4fe1\u5ea6\u8d8a\u9ad8\n        confidence = 1 / (1 + distances[predicted_class])\n        # \u8fd4\u56de\u9884\u6d4b\u7c7b\u522b\u548c\u7f6e\u4fe1\u5ea6\n        return predicted_class, confidence\n\n\ndef main():\n    # \u521b\u5efaKNN\u5206\u7c7b\u5668\u5b9e\u4f8b\n    classifier = KNNClassifier()\n    # \u521d\u59cb\u5316\u6444\u50cf\u5934\uff0c\u53c2\u65700\u8868\u793a\u9ed8\u8ba4\u6444\u50cf\u5934\n    webcam = cv2.VideoCapture(0)\n\n    print("Loading MobileNet...")\n    # \u52a0\u8f7d\u9884\u8bad\u7ec3\u7684MobileNet\u6a21\u578b\uff0c\u4f7f\u7528ImageNet\u6743\u91cd\n    base_model = tf.keras.applications.MobileNet(weights="imagenet")\n    # \u521b\u5efa\u7279\u5f81\u63d0\u53d6\u6a21\u578b\uff0c\u8f93\u51faconv_preds\u5c42\u7684\u7279\u5f81\uff08\u7528\u4e8e\u5206\u7c7b\u7684\u9ad8\u7ea7\u7279\u5f81\uff09\n    model = Model(\n        inputs=base_model.input, outputs=base_model.get_layer("conv_preds").output\n    )\n\n    print("Successfully loaded model")\n\n    # \u5b9a\u4e49\u4e09\u4e2a\u5206\u7c7b\u7c7b\u522b\n    classes = ["A", "B", "C"]\n\n    # \u4e3b\u5faa\u73af\uff0c\u6301\u7eed\u5904\u7406\u6444\u50cf\u5934\u753b\u9762\n    while True:\n        # \u4ece\u6444\u50cf\u5934\u8bfb\u53d6\u4e00\u5e27\u56fe\u50cf\n        ret, frame = webcam.read()\n        # \u5c06\u56fe\u50cf\u8c03\u6574\u4e3a224x224\u50cf\u7d20\uff0c\u8fd9\u662fMobileNet\u7684\u8f93\u5165\u5c3a\u5bf8\u8981\u6c42\n        frame = cv2.resize(frame, (224, 224))\n        # \u5c06OpenCV\u56fe\u50cf\u8f6c\u6362\u4e3aKeras\u53ef\u5904\u7406\u7684\u6570\u7ec4\u683c\u5f0f\n        img = image.img_to_array(frame)\n        # \u589e\u52a0\u6279\u6b21\u7ef4\u5ea6\uff0c\u4ece(224,224,3)\u53d8\u4e3a(1,224,224,3)\n        img = np.expand_dims(img, axis=0)\n        # \u4f7f\u7528MobileNet\u4e13\u7528\u7684\u9884\u5904\u7406\u51fd\u6570\uff0c\u6807\u51c6\u5316\u50cf\u7d20\u503c\n        img = preprocess_input(img)\n\n        # \u901a\u8fc7\u6a21\u578b\u63d0\u53d6\u56fe\u50cf\u7684\u9ad8\u7ea7\u7279\u5f81\u5411\u91cf\n        activation = model.predict(img)\n\n        # \u68c0\u6d4b\u952e\u76d8\u8f93\u5165\uff0c\u7b49\u5f851\u6beb\u79d2\n        key = cv2.waitKey(1)\n        # \u5982\u679c\u6309\u4e0b\'a\'\u952e\uff0c\u5c06\u5f53\u524d\u7279\u5f81\u6dfb\u52a0\u5230\u7c7b\u522bA\u7684\u8bad\u7ec3\u6837\u672c\u4e2d\n        if key == ord("a"):\n            classifier.add_example(activation, "A")\n        # \u5982\u679c\u6309\u4e0b\'b\'\u952e\uff0c\u5c06\u5f53\u524d\u7279\u5f81\u6dfb\u52a0\u5230\u7c7b\u522bB\u7684\u8bad\u7ec3\u6837\u672c\u4e2d\n        elif key == ord("b"):\n            classifier.add_example(activation, "B")\n        # \u5982\u679c\u6309\u4e0b\'c\'\u952e\uff0c\u5c06\u5f53\u524d\u7279\u5f81\u6dfb\u52a0\u5230\u7c7b\u522bC\u7684\u8bad\u7ec3\u6837\u672c\u4e2d\n        elif key == ord("c"):\n            classifier.add_example(activation, "C")\n\n        # \u53ea\u6709\u5f53\u81f3\u5c11\u6709\u4e00\u4e2aA\u7c7b\u522b\u7684\u6837\u672c\u65f6\u624d\u8fdb\u884c\u9884\u6d4b\n        if len(classifier.examples["A"]) > 0:\n            # \u4f7f\u7528KNN\u7b97\u6cd5\u9884\u6d4b\u5f53\u524d\u56fe\u50cf\u7684\u7c7b\u522b\n            predicted_class, confidence = classifier.predict_class(activation)\n            # \u6253\u5370\u9884\u6d4b\u7ed3\u679c\u548c\u7f6e\u4fe1\u5ea6\n            print(f"Prediction: {predicted_class}, Confidence: {confidence}")\n\n        # \u663e\u793a\u6444\u50cf\u5934\u753b\u9762\u7a97\u53e3\n        cv2.imshow("Webcam", frame)\n\n        # \u5982\u679c\u6309\u4e0bESC\u952e\uff08ASCII\u780127\uff09\uff0c\u9000\u51fa\u5faa\u73af\n        if key == 27:  # ESC key to break from the loop\n            break\n\n    # \u91ca\u653e\u6444\u50cf\u5934\u8d44\u6e90\n    webcam.release()\n    # \u5173\u95ed\u6240\u6709OpenCV\u7a97\u53e3\n    cv2.destroyAllWindows()\n\n\n# \u8fd0\u884c\u4e3b\u51fd\u6570\nmain()\n\n'})}),"\n",(0,i.jsx)(e.h2,{id:"\u6734\u7d20\u8d1d\u53f6\u65af",children:"\u6734\u7d20\u8d1d\u53f6\u65af"}),"\n",(0,i.jsx)(e.p,{children:"\u8fd9\u4e2a\u7b97\u6cd5\u662f\u5efa\u7acb\u5728\u8d1d\u53f6\u65af\u7406\u8bba\u4e0a\u7684\u5206\u7c7b\u65b9\u6cd5\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u5b83\u7684\u5047\u8bbe\u6761\u4ef6\u662f\u81ea\u53d8\u91cf\u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u7b80\u8a00\u4e4b\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u5047\u5b9a\u67d0\u4e00\u7279\u5f81\u7684\u51fa\u73b0\u4e0e\u5176\u5b83\u7279\u5f81\u65e0\u5173\u3002\u5373\u7ed9\u5b9a\u7c7b\u522b\uff0c\u7279\u5f81\u4e4b\u95f4\u6ca1\u6709\u76f8\u5173\u6027\u3002\u8fd9\u4e2a\u5047\u8bbe\u662f\u201c\u6734\u7d20\u201d\u7684\u6765\u6e90\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u6bd4\u5982\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u6c34\u679c\u5b83\u662f\u7ea2\u8272\u7684\uff0c\u5706\u72b6\u7684\uff0c\u76f4\u5f84\u5927\u6982 7cm \u5de6\u53f3\uff0c\u6211\u4eec\u53ef\u80fd\u731c\u6d4b\u5b83\u4e3a\u82f9\u679c\u3002\u5373\u4f7f\u8fd9\u4e9b\u7279\u5f81\u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u5173\u7cfb\uff0c\u5728\u6734\u7d20\u8d1d\u53f6\u65af\u7b97\u6cd5\u4e2d\u6211\u4eec\u90fd\u8ba4\u4e3a\u7ea2\u8272\uff0c\u5706\u72b6\u548c\u76f4\u5f84\u5728\u5224\u65ad\u4e00\u4e2a\u6c34\u679c\u662f\u82f9\u679c\u7684\u53ef\u80fd\u6027\u4e0a\u662f\u76f8\u4e92\u72ec\u7acb\u7684\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u4e00\u4e2a\u4e8c\u5206\u7c7b\u7684\u6848\u4f8b\u5047\u8bbe:"}),"\n",(0,i.jsx)(e.p,{children:"\u6211\u4eca\u5929\u6536\u5230\u4e86 100 \u5c01\u90ae\u4ef6\uff0c\u5176\u4e2d\u6709 80 \u5c01\u662f\u5783\u573e\u90ae\u4ef6\uff0c20 \u5c01\u662f\u6b63\u5e38\u90ae\u4ef6\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-markdown",children:"P\uff08\u5783\u573e\u90ae\u4ef6\uff09 = 80/100 = 0.8\nP\uff08\u6b63\u5e38\u90ae\u4ef6\uff09 = 20/100 = 0.2\n"})}),"\n",(0,i.jsx)(e.p,{children:"\u6211\u9009\u5b9a\u4e86\u4e00\u4e9b\u8bcd\u4f5c\u4e3a\u7279\u5f81\uff0c\u8fd9\u4e9b\u8bcd\u53ef\u80fd\u51fa\u73b0\u5728\u90ae\u4ef6\u4e2d\uff0c\u4e5f\u53ef\u80fd\u4e0d\u51fa\u73b0\u3002\u8fd9\u4e9b\u8bcd\u6709\u201c\u514d\u8d39\u201d\uff0c\u201c\u606d\u559c\u201d\uff0c\u201c\u8f9b\u82e6\u201d\u7b49\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u6211\u53d1\u73b0\u5783\u573e\u90ae\u4ef6\u4e2d\u6709 20 \u5c01\u542b\u6709\u201c\u514d\u8d39\u201d\u8fd9\u4e2a\u8bcd\uff0c50 \u5c01\u542b\u6709\u201c\u606d\u559c\u201d\u8fd9\u4e2a\u8bcd\uff0c0 \u5c01\u542b\u6709\u201c\u8f9b\u82e6\u201d\u8fd9\u4e2a\u8bcd\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-markdown",children:"P\uff08\u514d\u8d39|\u5783\u573e\u90ae\u4ef6\uff09 = 20/80 = 0.25\nP\uff08\u606d\u559c|\u5783\u573e\u90ae\u4ef6\uff09 = 50/80 = 0.625\nP\uff08\u8f9b\u82e6|\u5783\u573e\u90ae\u4ef6\uff09 = 0/80 = 0\n"})}),"\n",(0,i.jsx)(e.p,{children:"\u6b63\u5e38\u90ae\u4ef6\u4e2d\u6709 5 \u5c01\u542b\u6709\u201c\u514d\u8d39\u201d\u8fd9\u4e2a\u8bcd\u30026 \u5c01\u542b\u6709\u201c\u606d\u559c\u201d\u8fd9\u4e2a\u8bcd\uff0c2 \u5c01\u542b\u6709\u201c\u8f9b\u82e6\u201d\u8fd9\u4e2a\u8bcd\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-markdown",children:"P\uff08\u514d\u8d39|\u6b63\u5e38\u90ae\u4ef6\uff09 = 5/20 = 0.25\nP\uff08\u606d\u559c|\u6b63\u5e38\u90ae\u4ef6\uff09 = 6/20 = 0.3\nP\uff08\u8f9b\u82e6|\u6b63\u5e38\u90ae\u4ef6\uff09 = 2/20 = 0.1\n"})}),"\n",(0,i.jsxs)(e.p,{children:["\u73b0\u5728\u6211\u6536\u5230\u4e86\u4e00\u5c01\u90ae\u4ef6\uff0c\u8fd9\u5c01\u90ae\u4ef6\u5185\u5bb9\u4e3a\uff1a\u201c",(0,i.jsx)(e.strong,{children:"\u606d\u559c"}),"\u60a8\u83b7\u5f97\u4e86\u4e00\u6b21",(0,i.jsx)(e.strong,{children:"\u514d\u8d39"}),"\u7684\u673a\u4f1a\u201d\uff0c\u6211\u60f3\u77e5\u9053\u8fd9\u5c01\u90ae\u4ef6\u662f\u5783\u573e\u90ae\u4ef6\u7684\u6982\u7387\u662f\u591a\u5c11\uff1f"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-markdown",children:"P\uff08\u5783\u573e\u90ae\u4ef6|\u514d\u8d39\uff0c\u606d\u559c\uff09 = P\uff08\u514d\u8d39|\u5783\u573e\u90ae\u4ef6\uff09* P\uff08\u606d\u559c|\u5783\u573e\u90ae\u4ef6\uff09* P\uff08\u5783\u573e\u90ae\u4ef6\uff09= 0.25 * 0.625 * 0.8 = 0.125\n\nP\uff08\u6b63\u5e38\u90ae\u4ef6|\u514d\u8d39\uff0c\u606d\u559c\uff09 = P\uff08\u514d\u8d39|\u6b63\u5e38\u90ae\u4ef6\uff09* P\uff08\u606d\u559c|\u6b63\u5e38\u90ae\u4ef6\uff09* P\uff08\u6b63\u5e38\u90ae\u4ef6\uff09= 0.25 * 0.3 * 0.2 = 0.015\n"})}),"\n",(0,i.jsx)(e.p,{children:"\u56e0\u4e3a P\uff08\u5783\u573e\u90ae\u4ef6|\u514d\u8d39\uff0c\u606d\u559c\uff09 > P\uff08\u6b63\u5e38\u90ae\u4ef6|\u514d\u8d39\uff0c\u606d\u559c\uff09\uff0c\u6240\u4ee5\u8fd9\u5c01\u90ae\u4ef6\u88ab\u5224\u5b9a\u4e3a\u5783\u573e\u90ae\u4ef6\u3002"}),"\n",(0,i.jsxs)(e.p,{children:["\u5982\u679c\u72e1\u733e\u7684\u5783\u573e\u90ae\u4ef6\u5236\u9020\u8005\u628a\u90ae\u4ef6\u5185\u5bb9\u6539\u4e3a\uff1a\u201c",(0,i.jsx)(e.strong,{children:"\u606d\u559c"}),"\u60a8\u83b7\u5f97\u4e86\u4e00\u6b21",(0,i.jsx)(e.strong,{children:"\u514d\u8d39"}),"\u7684\u673a\u4f1a\uff0c",(0,i.jsx)(e.strong,{children:"\u8f9b\u82e6"}),"\u60a8\u52a8\u52a8\u624b\u6307\u53c2\u52a0\u6211\u4eec\u7684",(0,i.jsx)(e.strong,{children:"\u514d\u8d39"}),"\u6d3b\u52a8\u201d\uff0c\u90a3\u4e48\u8fd9\u5c01\u90ae\u4ef6\u88ab\u5224\u5b9a\u4e3a\u5783\u573e\u90ae\u4ef6\u7684\u6982\u7387\u5c31\u4f1a\u53d8\u6210 0\uff0c\u56e0\u4e3a\u201c\u8f9b\u82e6\u201d\u8fd9\u4e2a\u8bcd\u5728\u6b63\u5e38\u90ae\u4ef6\u4e2d\u6709\u51fa\u73b0\uff0c\u5728\u5783\u573e\u90ae\u4ef6\u4e2d\u6ca1\u6709\u51fa\u73b0\u3002"]}),"\n",(0,i.jsx)(e.p,{children:"\u6539\u8fdb:\u62c9\u666e\u62c9\u65af\u5e73\u6ed1\u6cd5"}),"\n",(0,i.jsx)(e.p,{children:"\u5728\u6bcf\u4e2a\u5173\u952e\u8bcd\u4e0a\u4eba\u4e3a\u7684\u589e\u52a0\u4e00\u4e2a\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u51fa\u73b0\u6982\u7387\u4e3a 0 \u7684\u60c5\u51b5\u4e86\u3002\uff08\u4e0b\u9762\u7684\u516c\u5f0f\u514d\u8d39\u7684\u5e73\u65b9\u8868\u793a\u8fd9\u4e2a\u5173\u952e\u8bcd\u51fa\u73b0 2 \u6b21\uff09"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-markdown",children:"P\uff08\u5783\u573e\u90ae\u4ef6|\u514d\u8d39\uff0c\u606d\u559c\uff0c\u8f9b\u82e6\uff09 = P\uff08\u514d\u8d39|\u5783\u573e\u90ae\u4ef6\uff09* P\uff08\u606d\u559c|\u5783\u573e\u90ae\u4ef6\uff09* P\uff08\u8f9b\u82e6|\u5783\u573e\u90ae\u4ef6\uff09* P\uff08\u5783\u573e\u90ae\u4ef6\uff09= (20+1/80)\xb2 * (50+1/80) * (0+1/80) * 0.8 = 0.0351421875\n\nP\uff08\u6b63\u5e38\u90ae\u4ef6|\u514d\u8d39\uff0c\u606d\u559c\uff0c\u8f9b\u82e6\uff09 = P\uff08\u514d\u8d39|\u6b63\u5e38\u90ae\u4ef6\uff09* P\uff08\u606d\u559c|\u6b63\u5e38\u90ae\u4ef6\uff09* P\uff08\u8f9b\u82e6|\u6b63\u5e38\u90ae\u4ef6\uff09* P\uff08\u6b63\u5e38\u90ae\u4ef6\uff09= (5+1/20)\xb2 * (6+1/20) * (2+1/20) * 0.2 =0.012885\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'\n# \u53c2\u8003\u7b54\u6848\nimport numpy as np\n\nclass NaiveBayes:\n    def __init__(self):\n        self.class_probs = {}  # \u5b58\u50a8\u6bcf\u4e2a\u7c7b\u522b\u7684\u5148\u9a8c\u6982\u7387 P(c)\n        self.word_probs = {}   # \u5b58\u50a8\u6bcf\u4e2a\u7c7b\u522b\u4e2d\u5355\u8bcd\u7684\u6761\u4ef6\u6982\u7387 P(w|c)\n        self.vocab = set()     # \u4fdd\u5b58\u6240\u6709\u51fa\u73b0\u7684\u5355\u8bcd\u6784\u6210\u7684\u8bcd\u6c47\u8868\n        self.smooth = 1        # \u62c9\u666e\u62c9\u65af\u5e73\u6ed1\u53c2\u6570\n\n    def fit(self, X, y):\n        # \u83b7\u53d6\u552f\u4e00\u7c7b\u522b\u548c\u5176\u6570\u91cf\n        classes, class_counts = np.unique(y, return_counts=True)\n        self.class_probs = {label: count / len(y) for label, count in zip(classes, class_counts)}  # \u5148\u9a8c\u6982\u7387\n        \n        # \u521d\u59cb\u5316\u8bcd\u6c47\u8868\u548c\u8bcd\u9891\u7edf\u8ba1\n        word_count = {label: {} for label in classes}  # \u6bcf\u4e2a\u7c7b\u522b\u7684\u8bcd\u9891\u8868\n        class_word_totals = {label: 0 for label in classes}  # \u6bcf\u4e2a\u7c7b\u522b\u5355\u8bcd\u603b\u6570\n        \n        # \u904d\u5386\u6bcf\u4e2a\u6837\u672c\u8fdb\u884c\u5206\u8bcd\u548c\u7edf\u8ba1\n        for text, label in zip(X, y):\n            words = text.split(" ")\n            for word in words:\n                self.vocab.add(word)  # \u6dfb\u52a0\u5230\u8bcd\u6c47\u8868\n                if word not in word_count[label]:\n                    word_count[label][word] = 0\n                word_count[label][word] += 1  # \u66f4\u65b0\u8bcd\u9891\n                class_word_totals[label] += 1  # \u5f53\u524d\u7c7b\u522b\u5355\u8bcd\u603b\u6570\u52a01\n\n        # \u8ba1\u7b97\u6761\u4ef6\u6982\u7387 P(w|c) \u52a0\u62c9\u666e\u62c9\u65af\u5e73\u6ed1\n        vocab_size = len(self.vocab)  # \u8bcd\u6c47\u8868\u5927\u5c0f\n        self.word_probs = {label: {} for label in classes}\n        for label in classes:\n            for word in self.vocab:\n                count = word_count[label].get(word, 0)  # \u83b7\u53d6\u8bcd\u9891\uff0c\u82e5\u672a\u51fa\u73b0\u5219\u4e3a0\n                self.word_probs[label][word] = (count + self.smooth) / (\n                    class_word_totals[label] + vocab_size * self.smooth\n                )\n\n    def predict(self, X):\n        predictions = []  # \u5b58\u50a8\u6240\u6709\u6837\u672c\u7684\u9884\u6d4b\u7ed3\u679c\n        for text in X:\n            words = text.split(" ")\n            class_scores = {}  # \u5b58\u50a8\u6bcf\u4e2a\u7c7b\u522b\u7684\u540e\u9a8c\u6982\u7387\n\n            # \u8ba1\u7b97\u540e\u9a8c\u6982\u7387 P(c|w1,w2,...,wn)\n            for label in self.class_probs:\n                class_scores[label] = self.class_probs[label]\n                for word in words:\n                    if word in self.word_probs[label]:  # \u5982\u679c\u8bcd\u5728\u8bcd\u6c47\u8868\u4e2d\n                        class_scores[label] *= self.word_probs[label][word]\n                    else:\n                        # \u82e5\u5355\u8bcd\u672a\u5728\u8bcd\u6c47\u8868\u4e2d\uff0c\u8df3\u8fc7\u8ba1\u7b97\n                        class_scores[label] *= 1/len(self.vocab)\n            \n            # \u9009\u62e9\u540e\u9a8c\u6982\u7387\u6700\u5927\u7684\u7c7b\u522b\u4f5c\u4e3a\u9884\u6d4b\u7ed3\u679c\n            predictions.append(max(class_scores, key=class_scores.get))\n        \n        return predictions\n    \n    def score(self, X, y):\n        predictions = self.predict(X)\n        return np.mean(predictions == y)\n\n\n# \u6570\u636e\ndata = np.array([\n    ("\u606d\u559c \u4f60 \u8d62\u5f97 \u4e86 \u5927\u5956 \uff01","\u8bc8\u9a97"),\n    ("\u8bf7 \u7acb\u5373 \u66f4\u65b0 \u60a8 \u7684 \u8d26\u6237 \u4fe1\u606f","\u8bc8\u9a97"),\n    ("\u60a8\u7684 \u8d26\u6237 \u5b58\u5728 \u5f02\u5e38 \uff0c\u8bf7 \u5c3d\u5feb \u5904\u7406","\u8bc8\u9a97"),\n    ("\u8fd9\u662f \u60a8 \u7684 \u8d26\u5355 \uff0c\u8bf7 \u67e5\u770b","\u6b63\u5e38"),\n    ("\u60a8\u7684 \u8ba2\u5355 \u5df2 \u53d1\u8d27","\u6b63\u5e38"),\n    ("\u8bf7 \u786e\u8ba4 \u60a8 \u7684 \u6ce8\u518c \u4fe1\u606f","\u6b63\u5e38"),\n    ("\u60a8 \u6709 \u65b0\u7684 \u6d88\u606f \uff0c\u8bf7 \u67e5\u770b","\u6b63\u5e38"),\n    ("\u70b9\u51fb \u6b64 \u94fe\u63a5 \u83b7\u53d6 \u4f18\u60e0\u5238","\u8bc8\u9a97"),\n    ("\u60a8\u7684 \u8d26\u6237 \u5df2 \u88ab \u9501\u5b9a \uff0c\u8bf7 \u7acb\u5373 \u8054\u7cfb","\u8bc8\u9a97"),\n    ("\u606d\u559c \u60a8 \u83b7\u5f97 \u514d\u8d39 \u8bd5\u7528 \uff01","\u8bc8\u9a97"),\n    ("\u8bf7 \u4e0d\u8981 \u5206\u4eab \u60a8 \u7684 \u5bc6\u7801","\u6b63\u5e38"),\n    ("\u60a8\u7684 \u8ba2\u9605 \u5373\u5c06 \u5230\u671f \uff0c\u8bf7 \u7eed\u8d39","\u6b63\u5e38"),\n    ("\u60a8 \u6709 \u672a \u8bfb \u90ae\u4ef6 \uff0c\u8bf7 \u67e5\u770b","\u6b63\u5e38"),\n    ("\u7acb\u5373 \u884c\u52a8 \uff0c\u83b7\u53d6 \u9650\u65f6 \u4f18\u60e0 \uff01","\u8bc8\u9a97"),\n    ("\u60a8\u7684 \u4fe1\u7528\u5361 \u4fe1\u606f \u9700\u8981 \u66f4\u65b0","\u8bc8\u9a97"),\n])\nX = data[:, 0]  # \u6587\u672c\u6570\u636e\ny = data[:, 1]  # \u6807\u7b7e\u6570\u636e\n\n# \u521b\u5efa\u6a21\u578b\u5e76\u8bad\u7ec3\nmodel = NaiveBayes()\nmodel.fit(X, y)\n\n# \u8f93\u51fa\u7ed3\u679c\uff0c\u6bd4\u8f83\u9884\u6d4b\u7c7b\u522b\u4e0e\u5b9e\u9645\u7c7b\u522b\nprint(model.score(X, y))\n\n\n'})}),"\n",(0,i.jsx)(e.h3,{id:"\u4f7f\u7528sklearn\u6a21\u5757\u5b8c\u6210",children:"\u4f7f\u7528sklearn\u6a21\u5757\u5b8c\u6210"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'from sklearn.naive_bayes import GaussianNB\nimport numpy as np\n\n# \u521b\u5efa\u4e00\u4e9b\u793a\u4f8b\u6570\u636e\nX = np.array([[1], [2], [3], [4], [5]])  # \u7279\u5f81\ny = np.array([0, 0, 1, 1, 1])  # \u76ee\u6807\u6807\u7b7e\n\n# \u521b\u5efa\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668 (\u9ad8\u65af\u6734\u7d20\u8d1d\u53f6\u65af)\nmodel = GaussianNB()\n\n# .fit() \u65b9\u6cd5\u7528\u4e8e\u62df\u5408\u6a21\u578b\nmodel.fit(X, y)\n\n# \u8981\u9884\u6d4b\u7684\u65b0\u6570\u636e\u70b9\nnew_data_point = np.array([[6]])\n\n# .predict() \u65b9\u6cd5\u8fd4\u56de\u9884\u6d4b\u7684\u7c7b\u522b\npredicted_class = model.predict(new_data_point)\n# .predict_proba() \u65b9\u6cd5\u8fd4\u56de\u6bcf\u4e2a\u7c7b\u522b\u7684\u6982\u7387\npredicted_proba = model.predict_proba(new_data_point)\n\nprint("\u9884\u6d4b\u7c7b\u522b:", predicted_class)\nprint("\u7c7b\u522b\u6982\u7387:", predicted_proba)\n\n'})}),"\n",(0,i.jsx)(e.h3,{id:"\u7b80\u5355\u793a\u4f8b",children:"\u7b80\u5355\u793a\u4f8b"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"from sklearn.naive_bayes import GaussianNB\nfrom sklearn.model_selection import train_test_split\nimport sklearn.datasets\n# \u52a0\u8f7d\u6570\u636e\ndata = sklearn.datasets.load_iris()\n# .data \u5c5e\u6027\u5305\u542b\u7279\u5f81\nX = data.data\n# .target \u5c5e\u6027\u5305\u542b\u76ee\u6807\u6807\u7b7e\ny = data.target\n# \u5212\u5206\u6570\u636e\u96c6\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)\n# \u521b\u5efa\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668 (\u9ad8\u65af\u6734\u7d20\u8d1d\u53f6\u65af)\nmodel = GaussianNB()\n# \u62df\u5408\u6a21\u578b\nmodel.fit(X_train, y_train)\n\n"})}),"\n",(0,i.jsx)(e.h3,{id:"\u6548\u679c\u8bc4\u4f30-1",children:"\u6548\u679c\u8bc4\u4f30"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"from sklearn.metrics import accuracy_score\n\n# \u8ba1\u7b97\u51c6\u786e\u7387\naccuracy = accuracy_score(y_test, model.predict(X_test))\naccuracy\n"})}),"\n",(0,i.jsx)(e.h3,{id:"\u67e5\u770b\u5206\u7c7b\u9519\u8bef\u7684\u6837\u672c\u4fe1\u606f",children:"\u67e5\u770b\u5206\u7c7b\u9519\u8bef\u7684\u6837\u672c\u4fe1\u606f"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"import pandas as pd\n\n# \u628a\u6d4b\u8bd5\u6570\u636e\u3001\u76ee\u6807\u6807\u7b7e\u3001\u9884\u6d4b\u7ed3\u679c\u5408\u5e76\u5230\u4e00\u8d77\n# pd.DataFrame()\u51fd\u6570\u7528\u4e8e\u521b\u5efaDataFrame\n# pd.concat()\u51fd\u6570\u7528\u4e8e\u5408\u5e76\u591a\u4e2aDataFrame\n# axis=1 \u8868\u793a\u6309\u5217\u5408\u5e76\ndf = pd.concat(\n    [pd.DataFrame(X_test,columns=data.feature_names),\n     pd.DataFrame(y_test,columns=['target']),\n     pd.DataFrame(model.predict(X_test),columns=['predict'])\n     ],axis=1 )\n\n# \u7b5b\u9009target\u5217\u4e0epredict\u5217\u4e0d\u76f8\u7b49\u7684\u6570\u636e\ndf.loc[df['target']!=df['predict']]\n\n"})}),"\n",(0,i.jsx)(e.h2,{id:"\u652f\u6301\u5411\u91cf\u673a",children:"\u652f\u6301\u5411\u91cf\u673a"}),"\n",(0,i.jsx)(e.p,{children:"\u8fd9\u662f\u4e00\u4e2a\u5206\u7c7b\u7b97\u6cd5\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u5728\u8fd9\u4e2a\u7b97\u6cd5\u4e2d\u6211\u4eec\u5c06\u6bcf\u4e00\u4e2a\u6570\u636e\u4f5c\u4e3a\u4e00\u4e2a\u70b9\u5728\u4e00\u4e2a n \u7ef4\u7a7a\u95f4\u4e0a\u4f5c\u56fe\uff08n \u662f\u7279\u5f81\u6570\uff09\uff0c\u6bcf\u4e00\u4e2a\u7279\u5f81\u503c\u5c31\u4ee3\u8868\u5bf9\u5e94\u5750\u6807\u503c\u7684\u5927\u5c0f\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u6bd4\u5982\u8bf4\u6211\u4eec\u6709\u4e24\u4e2a\u7279\u5f81\uff1a\u4e00\u4e2a\u4eba\u7684\u8eab\u9ad8\u548c\u53d1\u957f\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e24\u4e2a\u53d8\u91cf\u5728\u4e00\u4e2a\u4e8c\u7ef4\u7a7a\u95f4\u4e0a\u4f5c\u56fe\uff0c\u56fe\u4e0a\u7684\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e24\u4e2a\u5750\u6807\u503c\uff08\u8fd9\u4e9b\u5750\u6807\u8f74\u4e5f\u53eb\u505a\u652f\u6301\u5411\u91cf\uff09\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5bfc\u5165\u4e86 scikit-learn \u5e93\u4e2d\u7684 svm \u6a21\u5757\u4ee5\u53ca NumPy \u5e93\u3002\u7136\u540e\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e9b\u793a\u4f8b\u6570\u636e X \u548c y\uff0c\u5176\u4e2d X \u662f\u7279\u5f81\uff0cy \u662f\u76ee\u6807\u6807\u7b7e\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a SVM \u5206\u7c7b\u5668\uff0c\u4f7f\u7528\u7ebf\u6027\u6838\u51fd\u6570\uff08kernel='linear'\uff09\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528 fit \u65b9\u6cd5\u62df\u5408\u4e86\u6a21\u578b\uff0c\u5e76\u5728\u65b0\u6570\u636e\u70b9\u4e0a\u4f7f\u7528 predict \u65b9\u6cd5\u8fdb\u884c\u9884\u6d4b\uff0c\u4ee5\u83b7\u53d6\u65b0\u6570\u636e\u70b9\u7684\u7c7b\u522b\u3002"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'from sklearn import svm\nimport numpy as np\n\n# \u521b\u5efa\u4e00\u4e9b\u793a\u4f8b\u6570\u636e\nX = np.array([[1, 2], [2, 3], [2, 5], [3, 2], [3, 3], [4, 5]])  # \u7279\u5f81\ny = np.array([0, 0, 1, 0, 1, 1])  # \u76ee\u6807\u6807\u7b7e\n\n# \u521b\u5efaSVM\u5206\u7c7b\u5668\nmodel = svm.SVC(kernel="linear")\n\n# \u62df\u5408\u6a21\u578b\nmodel.fit(X, y)\n\n# \u8981\u9884\u6d4b\u7684\u65b0\u6570\u636e\u70b9\nnew_data_point = np.array([[3, 4]])\n# \u9884\u6d4b\u65b0\u6570\u636e\u70b9\u7684\u7c7b\u522b\npredicted_class = model.predict(new_data_point)\n\nprint("\u9884\u6d4b\u7c7b\u522b:", predicted_class)\n'})}),"\n",(0,i.jsx)(e.h3,{id:"\u7b80\u5355\u793a\u4f8b-1",children:"\u7b80\u5355\u793a\u4f8b"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"from sklearn.model_selection import train_test_split\nfrom sklearn.datasets import load_breast_cancer\nfrom sklearn import svm\n\n# \u5bfc\u5165\u4e00\u4e2a\u6570\u636e\u91cf\u8f83\u591a\u7684\u6570\u636e\uff0c\u4e73\u817a\u764c\niris = load_breast_cancer()\n# \u83b7\u53d6\u6570\u636e\u96c6\nX, y = iris.data ,iris.target\n\n# \u76f4\u63a5\u4f7f\u7528\u6570\u636e\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)\n# \u521b\u5efaSVM\u5206\u7c7b\u5668\nclf = svm.SVC()\n# \u62df\u5408\u6a21\u578b\nclf.fit(X_train, y_train)\n"})}),"\n",(0,i.jsx)(e.h3,{id:"\u6548\u679c\u8bc4\u4f30-2",children:"\u6548\u679c\u8bc4\u4f30"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"# .score()\u8fd4\u56de\u7684\u662f\u51c6\u786e\u5ea6\n# \u548c\u4e4b\u524d\u5b66\u4e60\u7684accuracy_score\u3001cross_val_score\u4e00\u6837\u90fd\u662f\u68c0\u6d4b\u51c6\u786e\u5ea6\u7684\u65b9\u6cd5\nprint('\u9884\u6d4b\u662f\u51c6\u786e\u5ea6\u4e3a{}%'.format(clf.score(X_test, y_test)*100))\n"})}),"\n",(0,i.jsx)(e.h3,{id:"\u6570\u636e-normalization",children:"\u6570\u636e normalization"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"from sklearn import preprocessing\n# normalization\u662f\u6307\u5c06\u6570\u636e\u6309\u6bd4\u4f8b\u7f29\u653e\uff0c\u4f7f\u4e4b\u843d\u5165\u4e00\u4e2a\u5c0f\u7684\u7279\u5b9a\u533a\u95f4\n# \u5148\u6807\u51c6\u5316\u6570\u636e\u518d\u4f7f\u7528\u6570\u636e\nX2 = preprocessing.scale(X)    # normalization step\n# print(X2)\nX2_train, X2_test, y2_train, y2_test = train_test_split(X2, y, test_size=0.3)\n\nclf2 = svm.SVC()\nclf2.fit(X2_train, y2_train)\nprint('\u9884\u6d4b\u662f\u51c6\u786e\u5ea6\u4e3a{}%'.format(clf2.score(X2_test, y2_test)*100))\n# \u7b80\u5355\u9a8c\u8bc1\u540e\u53d1\u73b0\u5904\u7406\u540e\u7684\u6570\u636e\u663e\u7136\u8868\u73b0\u66f4\u597d\uff0c\u9884\u6d4b\u662f\u51c6\u786e\u5ea6\u4e3a98.83040935672514%\n\nfrom sklearn import model_selection\n\n# \u4f46\u662f\u5e76\u4e0d\u662f\u6bcf\u6b21\u9a8c\u8bc1\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u662f\u4e00\u81f4\u7684\uff0c\u9a8c\u8bc1\u5177\u6709\u968f\u673a\u6027\uff0c\u56e0\u6b64\u9700\u8981\u4ea4\u53c9\u9a8c\u8bc1\n# \u628a\u6570\u636e\u5206\u62105\u4efd\uff0c\u5206\u522b\u505a\u6d4b\u8bd5\u96c6\uff0c\u63d0\u53d6\u5206\u6570\u5e76\u6c42\u5e73\u5747\u503c\uff0c\u663e\u7136\u5904\u7406\u540e\u7684\u6570\u636e\u8868\u73b0\u66f4\u597d\nprint(model_selection.cross_validate(clf,X_test, y_test,cv=5)['test_score'].mean())\nprint(model_selection.cross_validate(clf2,X2_test, y2_test,cv=5)['test_score'].mean())\n'''\n0.8947899159663866 # \u672a\u5904\u7406\u7684\u6570\u636e\n0.9825210084033614 # \u5904\u7406\u540e\u7684\u6570\u636e\n'''\n"})}),"\n",(0,i.jsx)(e.h3,{id:"\u9632\u6b62\u8fc7\u62df\u5408",children:"\u9632\u6b62\u8fc7\u62df\u5408"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:'from __future__ import print_function\nfrom sklearn.model_selection import  learning_curve\nfrom sklearn.datasets import load_digits\nfrom sklearn.svm import SVC\nimport matplotlib.pyplot as plt\nimport numpy as np\n# \u8f7d\u5165\u6570\u636e\ndigits = load_digits()\nX = digits.data\ny = digits.target\n\n# learning_curve()\u51fd\u6570\u7528\u4e8e\u8ba1\u7b97\u5728\u4e0d\u540c\u5927\u5c0f\u7684\u8bad\u7ec3\u96c6\u4e0a\u8bad\u7ec3\u5f97\u5230\u7684\u6a21\u578b\u5728\u9a8c\u8bc1\u96c6\u4e0a\u7684\u5f97\u5206\u60c5\u51b5\n# \u8fdb\u800c\u5206\u6790\u6a21\u578b\u662f\u5426\u8fc7\u62df\u5408\u6216\u8005\u6b20\u62df\u5408\n# \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528SVC\u6a21\u578b\uff0cgamma=0.01\n# gamma\u53c2\u6570\u7528\u4e8e\u63a7\u5236\u6a21\u578b\u7684\u590d\u6742\u5ea6\uff0cgamma\u8d8a\u5927\uff0c\u6a21\u578b\u8d8a\u590d\u6742\uff0c\u8d8a\u5bb9\u6613\u8fc7\u62df\u5408\n# \u901a\u8fc7train_sizes\u53c2\u6570\u6765\u6307\u5b9a\u8bad\u7ec3\u96c6\u7684\u5927\u5c0f\n# \u901a\u8fc7cv\u53c2\u6570\u6765\u6307\u5b9a\u4ea4\u53c9\u9a8c\u8bc1\u7684\u6b21\u6570\n# \u901a\u8fc7scoring\u53c2\u6570\u6765\u6307\u5b9a\u8bc4\u4ef7\u6307\u6807\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u8d1f\u5747\u65b9\u8bef\u5dee\ntrain_sizes, train_loss, test_loss= learning_curve(\n        SVC(gamma=0.01), X, y, cv=10, scoring="neg_mean_squared_error",\n        train_sizes=[0.1, 0.25, 0.5, 0.75, 1])\n\n# \u8ba1\u7b97\u5e73\u5747\u503c\u548c\u6807\u51c6\u5dee\ntrain_loss_mean = -np.mean(train_loss, axis=1)\ntest_loss_mean = -np.mean(test_loss, axis=1)\n\n# \u7ed8\u5236\u66f2\u7ebf\n# \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u7684\u662f\u8d1f\u5747\u65b9\u8bef\u5dee\uff0c\u56e0\u6b64\u6570\u503c\u8d8a\u5c0f\uff0c\u6a21\u578b\u8d8a\u597d\n# ro-\u8868\u793a\u7ea2\u8272\u5706\u5f62\u5b9e\u7ebf\uff0cgo-\u8868\u793a\u7eff\u8272\u5706\u5f62\u5b9e\u7ebf\nplt.plot(train_sizes, train_loss_mean, \'ro-\',\n             label="Training")\nplt.plot(train_sizes, test_loss_mean, \'go-\',\n             label="test-Cross-validation")\nplt.xlabel("Training examples")\nplt.ylabel("Loss")\n# \u663e\u793a\u56fe\u4f8b,loc="best"\u8868\u793a\u81ea\u52a8\u9009\u62e9\u6700\u4f73\u4f4d\u7f6e\nplt.legend(loc="best")\nplt.show()\n# \u8fd9\u4e2a\u56fe\u8868\u793a\uff1a\n# \u521a\u5f00\u59cb\u53ea\u6709200\u4e2a\u6570\u636e\u7684\u65f6\u5019\uff0c\u8bef\u5dee\u5f88\u5927\uff0c\u8fd9\u662f\u56e0\u4e3a\u6570\u636e\u91cf\u592a\u5c11\uff0c\u6a21\u578b\u65e0\u6cd5\u5f88\u597d\u5730\u62df\u5408\u6570\u636e\n# \u968f\u7740\u6570\u636e\u91cf\u7684\u589e\u52a0\uff0c\u8bef\u5dee\u9010\u6e10\u51cf\u5c0f\uff0c\u8fd9\u662f\u56e0\u4e3a\u6a21\u578b\u53ef\u4ee5\u66f4\u597d\u5730\u62df\u5408\u6570\u636e\n# \u4f46\u662f\u968f\u7740\u6570\u636e\u96c6\u8fdb\u4e00\u6b65\u589e\u52a0\uff0c\u8bef\u5dee\u53cd\u800c\u589e\u5927\u4e86\uff0c\u8fd9\u8bf4\u660e\u6a21\u578b\u51fa\u73b0\u4e86\u8fc7\u62df\u5408\n'})})]})}function p(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},28453:(n,e,s)=>{s.d(e,{R:()=>t,x:()=>l});var r=s(96540);const i={},a=r.createContext(i);function t(n){const e=r.useContext(a);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:t(n.components),r.createElement(a.Provider,{value:e},n.children)}}}]);