"use strict";(self.webpackChunkjiangmiemie=self.webpackChunkjiangmiemie||[]).push([[8959],{66388:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"\u673a\u5668\u5b66\u4e60/\u795e\u7ecf\u7f51\u7edc/index","title":"\u795e\u7ecf\u7f51\u7edc","description":"skorch","source":"@site/docs/docs/\u673a\u5668\u5b66\u4e60/\u795e\u7ecf\u7f51\u7edc/index.md","sourceDirName":"\u673a\u5668\u5b66\u4e60/\u795e\u7ecf\u7f51\u7edc","slug":"/\u673a\u5668\u5b66\u4e60/\u795e\u7ecf\u7f51\u7edc/","permalink":"/docs/\u673a\u5668\u5b66\u4e60/\u795e\u7ecf\u7f51\u7edc/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"\u795e\u7ecf\u7f51\u7edc"},"sidebar":"tutorialSidebar","previous":{"title":"\u964d\u7ef4\u7b97\u6cd5","permalink":"/docs/\u673a\u5668\u5b66\u4e60/\u4f20\u7edf\u7b97\u6cd5/\u964d\u7ef4\u7b97\u6cd5"},"next":{"title":"\u795e\u7ecf\u7f51\u7edc\u57fa\u7840","permalink":"/docs/\u673a\u5668\u5b66\u4e60/\u795e\u7ecf\u7f51\u7edc/\u795e\u7ecf\u7f51\u7edc\u57fa\u7840"}}');var r=t(74848),i=t(28453);const o={sidebar_position:3,title:"\u795e\u7ecf\u7f51\u7edc"},a=void 0,l={},d=[{value:"skorch",id:"skorch",level:2},{value:"\u7b80\u5355\u793a\u4f8b",id:"\u7b80\u5355\u793a\u4f8b",level:3},{value:"PyTorch",id:"pytorch",level:2},{value:"PyTorch \u6570\u636e\u96c6",id:"pytorch-\u6570\u636e\u96c6",level:3},{value:"\u81ea\u5b9a\u4e49\u6570\u636e\u751f\u6210\u5668",id:"\u81ea\u5b9a\u4e49\u6570\u636e\u751f\u6210\u5668",level:3},{value:"\u81ea\u6709\u6570\u636e\u96c6",id:"\u81ea\u6709\u6570\u636e\u96c6",level:3}];function c(n){const e={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...n.components},{DocCardList:t}=e;return t||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("DocCardList",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{id:"skorch",children:"skorch"}),"\n",(0,r.jsx)(e.p,{children:"\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u5b66\u4e60\u4e86 scikit-learn \u7684\u5f88\u591a\u7b97\u6cd5\u3002\u5b8c\u6210\u4e86\u4f20\u7edf\u673a\u5668\u5b66\u4e60\u7684\u4efb\u52a1\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u4f46\u662f\uff0csklearn\u672c\u8eab\u4e0d\u652f\u6301GPU\u52a0\u901f\u3002\u9047\u5230\u66f4\u590d\u6742\u7684\u4efb\u52a1\uff0c\u9700\u8981\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u5e76\u8c03\u7528GPU\u6765\u5b8c\u6210\u3002"}),"\n",(0,r.jsx)(e.p,{children:"skorch \u662f\u4e00\u4e2a\u57fa\u4e8e PyTorch \u7684\u795e\u7ecf\u7f51\u7edc\u5e93\uff0c\u63d0\u4f9b\u4e86 scikit-learn \u98ce\u683c\u7684 API\u3002\u5b83\u5c06 PyTorch \u7684\u7075\u6d3b\u6027\u4e0e scikit-learn \u7684\u6613\u7528\u6027\u76f8\u7ed3\u5408\uff0c\u4f7f\u5f97\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3\u548c\u8bc4\u4f30\u53d8\u5f97\u66f4\u52a0\u7b80\u5355\u548c\u9ad8\u6548\u3002\u652f\u6301GPU\u52a0\u901f\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u5b83\u53ef\u4ee5\u8ba9\u4f60\u4ec5\u4ec5\u66ff\u6362 sklearn \u7684\u6a21\u578b\u4e3a pytorch \u7684\u6a21\u578b\uff0c\u4e0d\u6539\u53d8\u5176\u4ed6\u4ee3\u7801\u3002\u4f5c\u4e3a\u8854\u63a5 pytorch \u548c sklearn \u7684\u6865\u6881\u3002"}),"\n",(0,r.jsx)(e.p,{children:"skorch \u7684\u5b89\u88c5\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u4f7f\u7528 pip \u5b89\u88c5\u5373\u53ef\u3002"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"pip install skorch\n"})}),"\n",(0,r.jsx)(e.h3,{id:"\u7b80\u5355\u793a\u4f8b",children:"\u7b80\u5355\u793a\u4f8b"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"# \u5bfc\u5165\u5fc5\u8981\u7684\u5e93\nimport numpy as np\nfrom sklearn import datasets\nfrom torch import nn\nfrom skorch import NeuralNetClassifier\nfrom sklearn.model_selection import train_test_split\nimport time\nfrom sklearn.linear_model import LinearRegression\nimport torch\n\n# \u52a0\u8f7d\u6570\u636e\u96c6\ndigits = datasets.load_digits()\n# \u83b7\u53d6\u7279\u5f81\u548c\u76ee\u6807\u53d8\u91cf\nX = digits.data.astype(np.float32)  # \u8f6c\u6362\u4e3afloat32\u7c7b\u578b\ny = digits.target.astype(np.int64)  # \u76ee\u6807\u53d8\u91cf\u8f6c\u6362\u4e3aint64\n\n# \u4fee\u6539\u540e\u7684\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u5b9a\u4e49\nclass MyModule(nn.Module):\n    def __init__(self, num_units=256, nonlin=nn.ReLU()):  # \u589e\u52a0\u9690\u85cf\u5355\u5143\u6570\n        super().__init__()\n        self.dense0 = nn.Linear(64, num_units)  # \u4fee\u6b63\u8f93\u5165\u7ef4\u5ea6\u4e3a64\uff088x8\u56fe\u50cf\uff09\n        self.bn0 = nn.BatchNorm1d(num_units)     # \u6dfb\u52a0\u6279\u91cf\u5f52\u4e00\u5316\n        self.nonlin = nonlin\n        self.dropout = nn.Dropout(0.3)           # \u8c03\u6574dropout\u6bd4\u4f8b\n        self.dense1 = nn.Linear(num_units, num_units//2)  # \u65b0\u589e\u9690\u85cf\u5c42\n        self.dense2 = nn.Linear(num_units//2, num_units//4)\n        self.output = nn.Linear(num_units//4, 10)\n        self.softmax = nn.Softmax(dim=-1)\n\n    def forward(self, X, **kwargs):\n        X = self.nonlin(self.bn0(self.dense0(X)))\n        X = self.dropout(X)\n        X = self.nonlin(self.dense1(X))\n        X = self.nonlin(self.dense2(X))\n        X = self.softmax(self.output(X))\n        return X\n\n# \u4fee\u6539\u540e\u7684\u795e\u7ecf\u7f51\u7edc\u914d\u7f6e\nnet = NeuralNetClassifier(\n    MyModule,\n    max_epochs=20,            # \u589e\u52a0\u8bad\u7ec3\u8f6e\u6b21\n    lr=0.0005,                # \u8c03\u6574\u5b66\u4e60\u7387\n    optimizer=torch.optim.AdamW,  # \u4f7f\u7528\u66f4\u597d\u7684\u4f18\u5316\u5668\n    optimizer__weight_decay=0.001,  # \u6dfb\u52a0\u6743\u91cd\u8870\u51cf\n    iterator_train__shuffle=True,\n    device='cuda',\n)\n\n# \u4fee\u6539\u4e3a\u7ebf\u6027\u56de\u5f52\u6a21\u578b\uff08\u6ce8\u610f\u8fd9\u662f\u56de\u5f52\u6a21\u578b\uff0c\u9700\u8981\u8f6c\u6362\u9884\u6d4b\u7ed3\u679c\u4e3a\u5206\u7c7b\uff09\nclf = LinearRegression()\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n# \u4fee\u6539\u6807\u51c6\u5316\u90e8\u5206\nX_train = (X_train / 16.0).astype(np.float32)  # \u4fdd\u6301float32\u7c7b\u578b\nX_test = (X_test / 16.0).astype(np.float32)\n\n# \u4fdd\u5b58\u539f\u59cb\u8bad\u7ec3\u548c\u6d4b\u8bd5\u6570\u636e\nX_train_orig = X_train.copy()\ny_train_orig = y_train.copy()\nX_test_orig = X_test.copy()  # \u65b0\u589e\u6d4b\u8bd5\u96c6\u5907\u4efd\n\n# \u539f\u59cb\u6570\u636e\u300110\u500d\u6570\u636e\u3001100\u500d\u6570\u636e\nfor i in range(3):\n    # \u901a\u8fc7\u590d\u5236\u6570\u636e\u589e\u52a0\u6837\u672c\u91cf\n    multiplier = 10 ** i\n    X_train = np.tile(X_train_orig, (multiplier, 1))\n    y_train = np.tile(y_train_orig, multiplier)\n    X_test = X_test_orig.copy()  # \u4fdd\u6301\u6d4b\u8bd5\u96c6\u4e0d\u53d8\n    \n    len_data = len(X_train)\n    for model in [net, clf]:\n        # \u5bf9\u6bd4sklearn\u548cskorch\u7684\u8bad\u7ec3\u65f6\u95f4\n        start_time = time.time()\n        net.fit(X_train, y_train)\n        accuracy = net.score(X_test, y_test)\n        end_time = time.time() - start_time\n        print(f\"{len_data}\u6761\u6570\u636e\u4e0b\uff0c{model.__class__.__name__}\u8bad\u7ec3\u65f6\u95f4: {end_time:.2f}\u79d2\uff0c\u51c6\u786e\u7387: {accuracy:.2f}\")\n'''\n1257\u6761\u6570\u636e\u4e0b\uff0cNeuralNetClassifier\u8bad\u7ec3\u65f6\u95f4: 1.26\u79d2\uff0c\u51c6\u786e\u7387: 0.98\n1257\u6761\u6570\u636e\u4e0b\uff0cLinearRegression\u8bad\u7ec3\u65f6\u95f4: 0.33\u79d2\uff0c\u51c6\u786e\u7387: 0.97\n\n12570\u6761\u6570\u636e\u4e0b\uff0cNeuralNetClassifier\u8bad\u7ec3\u65f6\u95f4: 2.91\u79d2\uff0c\u51c6\u786e\u7387: 0.98\n12570\u6761\u6570\u636e\u4e0b\uff0cLinearRegression\u8bad\u7ec3\u65f6\u95f4: 2.93\u79d2\uff0c\u51c6\u786e\u7387: 0.98\n\n125700\u6761\u6570\u636e\u4e0b\uff0cNeuralNetClassifier\u8bad\u7ec3\u65f6\u95f4: 32.05\u79d2\uff0c\u51c6\u786e\u7387: 0.99\n125700\u6761\u6570\u636e\u4e0b\uff0cLinearRegression\u8bad\u7ec3\u65f6\u95f4: 32.31\u79d2\uff0c\u51c6\u786e\u7387: 0.99\n'''\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u663e\u800c\u6613\u89c1\uff0c\u5728\u5904\u7406\u66f4\u591a\u6570\u636e\u65f6\uff0cskorch \u7684\u8bad\u7ec3\u65f6\u95f4\u5c0f\u4e8e sklearn \u7684\u8bad\u7ec3\u65f6\u95f4\u3002\u6570\u636e\u8d8a\u591a\uff0cskorch \u7684\u4f18\u52bf\u8d8a\u660e\u663e\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u63a5\u4e0b\u6765\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 skorch \u6765\u590d\u73b0\u66f4\u591a\u4e4b\u524d\u7684\u9879\u76ee\uff0c\u540c\u65f6\u719f\u6089Pytorch\u7684\u7528\u6cd5\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u4f1a\u5f00\u59cb\u4f7f\u7528pytorch\u6765\u5b8c\u6210\u66f4\u591a\u590d\u6742\u548c\u6709\u8da3\u7684\u4efb\u52a1\u3002"}),"\n",(0,r.jsx)(e.h2,{id:"pytorch",children:"PyTorch"}),"\n",(0,r.jsx)(e.p,{children:"PyTorch \u53ef\u4ee5\u5229\u7528\u8ba1\u7b97\u52a0\u901f\u8bbe\u5907\uff08\u4f8b\u5982GPU\u3001NPU\uff09\uff0c\u4e3a\u4e86\u8fbe\u6210\u8fd9\u4e00\u76ee\u7684\uff0cPyTorch \u7684\u5b89\u88c5\u4f1a\u7ed1\u5b9a\u5bf9\u5e94\u7684cuda\u7248\u672c\uff0cPyTorch \u4f7f\u7528 cuda \u7684\u63a5\u53e3\u6765\u64cd\u4f5c\u5e95\u5c42\u786c\u4ef6\u3002"}),"\n",(0,r.jsxs)(e.admonition,{type:"info",children:[(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"CUDA"}),"\uff1aNVIDIA \u4e13\u4e3a\u81ea\u5bb6 GPU \u8bbe\u8ba1\u7684 C++ \u5e76\u884c\u8ba1\u7b97\u6846\u67b6\uff0c\u5176\u8fd0\u884c\u4f9d\u8d56\u4e8e NVIDIA \u663e\u5361\u9a71\u52a8\u7a0b\u5e8f\u3002\u5b83\u5141\u8bb8\u5f00\u53d1\u8005\u5229\u7528 GPU \u5f3a\u5927\u7684\u5e76\u884c\u8ba1\u7b97\u80fd\u529b\u52a0\u901f\u5404\u7c7b\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u3002"]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"cuDNN"}),"\uff1a\u4e13\u95e8\u4e3a\u6df1\u5ea6\u5b66\u4e60\u8ba1\u7b97\u4f18\u5316\u7684\u9ad8\u6027\u80fd\u795e\u7ecf\u7f51\u7edc\u5e93\uff0c\u63d0\u4f9b\u4e86\u9ad8\u5ea6\u4f18\u5316\u7684\u5b9e\u73b0\uff0c\u7528\u4e8e\u5e38\u89c1\u6df1\u5ea6\u5b66\u4e60\u64cd\u4f5c\u5982\u5377\u79ef\u3001\u6c60\u5316\u3001\u5f52\u4e00\u5316\u7b49\u3002"]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"CUDA Toolkit (NVIDIA \u5b98\u65b9\u7248)"}),"\uff1a\u5b8c\u6574\u7684 CUDA \u5f00\u53d1\u73af\u5883\uff0c\u5305\u542b\uff1a"]}),(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"NVIDIA \u663e\u5361\u9a71\u52a8\u7a0b\u5e8f"}),"\n",(0,r.jsx)(e.li,{children:"\u5b8c\u6574\u7684 CUDA \u5f00\u53d1\u5de5\u5177\u94fe\uff08\u7f16\u8bd1\u5668\u3001IDE\u3001\u8c03\u8bd5\u5668\u7b49\uff09"}),"\n",(0,r.jsx)(e.li,{children:"\u5404\u79cd CUDA \u52a0\u901f\u5e93\u53ca\u5176\u5934\u6587\u4ef6"}),"\n",(0,r.jsx)(e.li,{children:"\u6587\u6863\u548c\u793a\u4f8b\u4ee3\u7801"}),"\n"]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"CUDA Toolkit (PyTorch \u7248)"}),"\uff1a\u7cbe\u7b80\u7248 CUDA \u5de5\u5177\u5305\uff0c\u4e3b\u8981\u5305\u542b\uff1a"]}),(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u8fd0\u884c CUDA \u529f\u80fd\u6240\u9700\u7684\u6838\u5fc3\u52a8\u6001\u94fe\u63a5\u5e93"}),"\n",(0,r.jsx)(e.li,{children:"\u4e0d\u5305\u542b\u9a71\u52a8\u7a0b\u5e8f\u3001\u5f00\u53d1\u5de5\u5177\u53ca\u5b8c\u6574\u6587\u6863"}),"\n",(0,r.jsx)(e.li,{children:"\u4e13\u4e3a\u652f\u6301 PyTorch \u7b49\u6846\u67b6\u7684 CUDA \u529f\u80fd\u800c\u8bbe\u8ba1"}),"\n"]}),(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"NVCC"}),"\uff1aNVIDIA CUDA \u7f16\u8bd1\u5668\uff0c\u662f CUDA Toolkit \u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u8d1f\u8d23\u5c06 CUDA \u4ee3\u7801\u7f16\u8bd1\u4e3a\u53ef\u5728 NVIDIA GPU \u4e0a\u6267\u884c\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u3002"]})]}),"\n",(0,r.jsxs)(e.p,{children:["\u4e0d\u8fc7\u540c\u6837\u7684\u6d4b\u8bd5\u4ee3\u7801\uff0c\u5728",(0,r.jsx)(e.a,{href:"https://developer.nvidia.com/cuda-downloads?target_os=Linux&target_arch=x86_64&Distribution=WSL-Ubuntu&target_version=2.0&target_type=deb_local",children:"WSL2\u4e2d\u5b89\u88c5\u7684cuda\u5bf9\u663e\u5361\u6027\u80fd"}),"\u4f1a\u5b58\u5728\u4e00\u5b9a\u7684\u5f71\u54cd\u3002"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",metastring:"showLineNumbers",children:"# windows\u539f\u751f\u73af\u5883\nname: NVIDIA GeForce RTX 3090 Ti\nwrite speed: 5063.91 MB/s\nread speed: 5565.53 MB/s\n\n# windows\u4e0b\u7684WSL2 Ubuntu-24.04 \u73af\u5883\nname: NVIDIA GeForce RTX 3090 Ti\nwrite speed: 2632.96 MB/s\nread speed: 4429.29 MB/s\n"})}),"\n",(0,r.jsx)(e.h3,{id:"pytorch-\u6570\u636e\u96c6",children:"PyTorch \u6570\u636e\u96c6"}),"\n",(0,r.jsx)(e.p,{children:"PyTorch \u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5185\u7f6e\u7684\u6570\u636e\u96c6\u7c7b\u6765\u52a0\u8f7d\u5e38\u7528\u7684\u6570\u636e\u96c6\uff0c\u5982\u56fe\u50cf\u3001\u6587\u672c\u7b49\u3002\u6b64\u5916\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e93\u6765\u52a0\u8f7d\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u96c6\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u8fd9\u4e9b\u6570\u636e\u96c6\u7684\u8be6\u7ec6\u4fe1\u606f\u53ef\u4ee5\u5728 PyTorch \u5b98\u65b9\u6587\u6863\u4e2d\u627e\u5230\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u8fd9\u4e9b\u6570\u636e\u96c6\u5305\u62ec\u4e86\u5404\u79cd\u7c7b\u578b\u7684\u6570\u636e\uff0c\u5982\u56fe\u50cf\u3001\u6587\u672c\u3001\u97f3\u9891\u7b49\uff0c\u53ef\u4ee5\u7528\u4e8e\u5404\u79cd\u4efb\u52a1\uff0c\u5982\u5206\u7c7b\u3001\u56de\u5f52\u3001\u805a\u7c7b\u7b49\u3002"}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"\u6570\u636e\u96c6\u540d\u79f0"}),(0,r.jsx)(e.th,{children:"\u52a0\u8f7d\u65b9\u6cd5"}),(0,r.jsx)(e.th,{children:"\u6a21\u578b\u7c7b\u578b"}),(0,r.jsx)(e.th,{children:"\u6570\u636e\u5927\u5c0f(\u6837\u672c\u6570*\u7279\u5f81\u6570)"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"MNIST"}),(0,r.jsx)(e.td,{children:"torchvision.datasets.MNIST"}),(0,r.jsx)(e.td,{children:"\u5206\u7c7b"}),(0,r.jsx)(e.td,{children:"70000*784"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"CIFAR-10"}),(0,r.jsx)(e.td,{children:"torchvision.datasets.CIFAR10"}),(0,r.jsx)(e.td,{children:"\u5206\u7c7b"}),(0,r.jsx)(e.td,{children:"60000*3072"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"Fashion MNIST"}),(0,r.jsx)(e.td,{children:"torchvision.datasets.FashionMNIST"}),(0,r.jsx)(e.td,{children:"\u5206\u7c7b"}),(0,r.jsx)(e.td,{children:"70000*784"})]})]})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"import torchvision.datasets as datasets\n# \u52a0\u8f7d\u6570\u636e\u96c6\ntrain_dataset = datasets.MNIST(root='./data', train=True, download=True)\ntest_dataset = datasets.MNIST(root='./data', train=False, download=True)\n"})}),"\n",(0,r.jsx)(e.h3,{id:"\u81ea\u5b9a\u4e49\u6570\u636e\u751f\u6210\u5668",children:"\u81ea\u5b9a\u4e49\u6570\u636e\u751f\u6210\u5668"}),"\n",(0,r.jsx)(e.p,{children:"\u4e0e TensorFlow \u7c7b\u4f3c\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 PyTorch \u6765\u751f\u6210\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u96c6\uff0c\u4ee5\u4fbf\u521b\u5efa\u5177\u6709\u7279\u5b9a\u5c5e\u6027\u7684\u6570\u636e\u96c6\uff0c\u5982\u7279\u5b9a\u7684\u5206\u5e03\u3001\u7279\u5b9a\u7684\u566a\u58f0\u6c34\u5e73\u7b49\u3002"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"import torch\n# \u521b\u5efa\u4e00\u4e2a\u7ebf\u6027\u6570\u636e\u96c6\nX = torch.rand((1000, 1))\ny = 3 * X + 2 + torch.randn((1000, 1))\n\n# \u521b\u5efa\u4e00\u4e2a\u5206\u7c7b\u6570\u636e\u96c6\nX = torch.rand((1000, 2))\ny = (torch.sum(X, dim=1) > 1).int()\n"})}),"\n",(0,r.jsx)(e.h3,{id:"\u81ea\u6709\u6570\u636e\u96c6",children:"\u81ea\u6709\u6570\u636e\u96c6"}),"\n",(0,r.jsxs)(e.p,{children:["\u5982\u679c\u4f60\u6709\u81ea\u5df1\u7684\u6570\u636e\u96c6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 PyTorch \u7684 ",(0,r.jsx)(e.code,{children:"torch.utils.data.Dataset"})," \u7c7b\u6765\u52a0\u8f7d\u548c\u9884\u5904\u7406\u6570\u636e\u3002\u8fd9\u4e2a\u7c7b\u652f\u6301\u5404\u79cd\u6570\u636e\u683c\u5f0f\uff0c\u5982 CSV\u3001\u56fe\u7247\u7b49\u3002"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"from torch.utils.data import Dataset\n# \u81ea\u5b9a\u4e49\u6570\u636e\u96c6\u7c7b\nclass CustomDataset(Dataset):\n    def __init__(self, data_path):\n        # \u4ece\u6587\u4ef6\u52a0\u8f7d\u6570\u636e\n        self.data = torch.load(data_path)\n    \n    def __len__(self):\n        return len(self.data)\n    \n    def __getitem__(self, idx):\n        return self.data[idx]\n"})}),"\n",(0,r.jsx)(t,{})]})}function h(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(c,{...n})}):c(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>a});var s=t(96540);const r={},i=s.createContext(r);function o(n){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),s.createElement(i.Provider,{value:e},n.children)}}}]);