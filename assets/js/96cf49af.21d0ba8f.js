"use strict";(self.webpackChunkjiangmiemie=self.webpackChunkjiangmiemie||[]).push([[9721],{6017:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"\u4e0d\u540c\u7684\u6570\u636e\u5e93/PostgreSQL","title":"PostgreSQL","description":"\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff08PostgreSQL\uff09","source":"@site/docs/docs/\u4e0d\u540c\u7684\u6570\u636e\u5e93/PostgreSQL.md","sourceDirName":"\u4e0d\u540c\u7684\u6570\u636e\u5e93","slug":"/\u4e0d\u540c\u7684\u6570\u636e\u5e93/PostgreSQL","permalink":"/docs/\u4e0d\u540c\u7684\u6570\u636e\u5e93/PostgreSQL","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"PostgreSQL"},"sidebar":"tutorialSidebar","previous":{"title":"Elasticsearch","permalink":"/docs/\u4e0d\u540c\u7684\u6570\u636e\u5e93/Elasticsearch"},"next":{"title":"Milvus","permalink":"/docs/\u4e0d\u540c\u7684\u6570\u636e\u5e93/Milvus"}}');var i=s(74848),t=s(28453);const a={sidebar_position:5,title:"PostgreSQL"},o=void 0,l={},c=[{value:"\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff08PostgreSQL\uff09",id:"\u5173\u7cfb\u578b\u6570\u636e\u5e93postgresql",level:2},{value:"PostgreSQL \u6838\u5fc3\u7279\u6027",id:"postgresql-\u6838\u5fc3\u7279\u6027",level:3},{value:"\u57fa\u672c\u8fde\u63a5\u548c\u7528\u6237\u7ba1\u7406",id:"\u57fa\u672c\u8fde\u63a5\u548c\u7528\u6237\u7ba1\u7406",level:3},{value:"\u8868\u64cd\u4f5c",id:"\u8868\u64cd\u4f5c",level:3},{value:"\u5217\u64cd\u4f5c",id:"\u5217\u64cd\u4f5c",level:3},{value:"\u6570\u636e\u64cd\u4f5c",id:"\u6570\u636e\u64cd\u4f5c",level:3},{value:"\u9ad8\u7ea7\u67e5\u8be2\u529f\u80fd",id:"\u9ad8\u7ea7\u67e5\u8be2\u529f\u80fd",level:3},{value:"\u7d22\u5f15\u548c\u6027\u80fd\u4f18\u5316",id:"\u7d22\u5f15\u548c\u6027\u80fd\u4f18\u5316",level:3},{value:"\u4e8b\u52a1\u548c\u5e76\u53d1\u63a7\u5236",id:"\u4e8b\u52a1\u548c\u5e76\u53d1\u63a7\u5236",level:3},{value:"pgvector - PostgreSQL \u5411\u91cf\u6269\u5c55",id:"pgvector---postgresql-\u5411\u91cf\u6269\u5c55",level:2},{value:"\u5b89\u88c5 pgvector",id:"\u5b89\u88c5-pgvector",level:3},{value:"\u57fa\u672c\u5411\u91cf\u64cd\u4f5c",id:"\u57fa\u672c\u5411\u91cf\u64cd\u4f5c",level:3},{value:"\u5411\u91cf\u76f8\u4f3c\u5ea6\u641c\u7d22",id:"\u5411\u91cf\u76f8\u4f3c\u5ea6\u641c\u7d22",level:3},{value:"\u9ad8\u7ea7\u5411\u91cf\u529f\u80fd",id:"\u9ad8\u7ea7\u5411\u91cf\u529f\u80fd",level:3},{value:"Python \u96c6\u6210\u793a\u4f8b",id:"python-\u96c6\u6210\u793a\u4f8b",level:3},{value:"\u6027\u80fd\u4f18\u5316\u5efa\u8bae",id:"\u6027\u80fd\u4f18\u5316\u5efa\u8bae",level:3},{value:"\u5b9e\u9645\u5e94\u7528\u573a\u666f",id:"\u5b9e\u9645\u5e94\u7528\u573a\u666f",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"\u5173\u7cfb\u578b\u6570\u636e\u5e93postgresql",children:"\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff08PostgreSQL\uff09"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.postgresql.org/",children:"PostgreSQL \u5b98\u7f51"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.postgresql.org/docs/",children:"PostgreSQL \u5b98\u65b9\u6587\u6863"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/pgvector/pgvector",children:"pgvector \u6269\u5c55"})}),"\n",(0,i.jsx)(n.p,{children:"PostgreSQL \u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u5f00\u6e90\u5bf9\u8c61\u5173\u7cfb\u6570\u636e\u5e93\u7cfb\u7edf\uff0c\u5177\u6709\u8d85\u8fc730\u5e74\u7684\u79ef\u6781\u5f00\u53d1\u5386\u53f2\u3002\u5b83\u4ee5\u5176\u53ef\u9760\u6027\u3001\u529f\u80fd\u5065\u58ee\u6027\u548c\u6027\u80fd\u800c\u95fb\u540d\u3002PostgreSQL \u5b8c\u5168\u7b26\u5408 ACID \u6807\u51c6\uff0c\u652f\u6301\u5916\u952e\u3001\u89e6\u53d1\u5668\u3001\u89c6\u56fe\u548c\u5b58\u50a8\u8fc7\u7a0b\u7b49\u9ad8\u7ea7\u529f\u80fd\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u4e0e MySQL \u76f8\u6bd4\uff0cPostgreSQL \u66f4\u52a0\u6ce8\u91cd\u6807\u51c6\u7684\u517c\u5bb9\u6027\u548c\u6269\u5c55\u6027\uff0c\u652f\u6301\u66f4\u4e30\u5bcc\u7684\u6570\u636e\u7c7b\u578b\uff08\u5982 JSON\u3001\u6570\u7ec4\u3001\u8303\u56f4\u7c7b\u578b\u7b49\uff09\u548c\u590d\u6742\u67e5\u8be2\uff0c\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u548c\u5e76\u53d1\u63a7\u5236\u80fd\u529b\u66f4\u5f3a\u3002PostgreSQL \u652f\u6301\u591a\u7248\u672c\u5e76\u53d1\u63a7\u5236\uff08MVCC\uff09\uff0c\u5728\u9ad8\u5e76\u53d1\u573a\u666f\u4e0b\u8868\u73b0\u4f18\u5f02\uff0c\u5e76\u4e14\u62e5\u6709\u66f4\u5b8c\u5584\u7684\u6269\u5c55\u673a\u5236\uff08\u5982 pgvector\u3001PostGIS \u7b49\uff09\uff0c\u9002\u5408\u9700\u8981\u590d\u6742\u6570\u636e\u5904\u7406\u548c\u5730\u7406\u7a7a\u95f4\u3001\u5411\u91cf\u7b49\u9ad8\u7ea7\u529f\u80fd\u7684\u573a\u666f\u3002\u800c MySQL \u5219\u4ee5\u6613\u7528\u6027\u3001\u90e8\u7f72\u7b80\u5355\u548c\u793e\u533a\u751f\u6001\u5e7f\u6cdb\u8457\u79f0\uff0c\u9002\u5408\u4e2d\u5c0f\u578b\u5e94\u7528\u548c\u5bf9\u6027\u80fd\u8981\u6c42\u8f83\u9ad8\u4f46\u529f\u80fd\u9700\u6c42\u76f8\u5bf9\u7b80\u5355\u7684\u573a\u666f\u3002"}),"\n",(0,i.jsx)(n.h3,{id:"postgresql-\u6838\u5fc3\u7279\u6027",children:"PostgreSQL \u6838\u5fc3\u7279\u6027"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ACID \u5408\u89c4\u6027"}),"\uff1a\u5b8c\u5168\u652f\u6301\u539f\u5b50\u6027\u3001\u4e00\u81f4\u6027\u3001\u9694\u79bb\u6027\u548c\u6301\u4e45\u6027"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u4e30\u5bcc\u7684\u6269\u5c55\u751f\u6001"}),"\uff1a\u652f\u6301\u591a\u79cd\u6269\u5c55\uff0c\u5982 pgvector\u3001PostGIS \u7b49"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u9ad8\u7ea7\u6570\u636e\u7c7b\u578b"}),"\uff1a\u652f\u6301 JSON\u3001\u6570\u7ec4\u3001\u8303\u56f4\u7c7b\u578b\u7b49"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u5e76\u53d1\u63a7\u5236"}),"\uff1a\u57fa\u4e8e MVCC \u7684\u591a\u7248\u672c\u5e76\u53d1\u63a7\u5236"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u5168\u6587\u641c\u7d22"}),"\uff1a\u5185\u7f6e\u5168\u6587\u641c\u7d22\u529f\u80fd"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u5730\u7406\u4fe1\u606f"}),"\uff1a\u901a\u8fc7 PostGIS \u6269\u5c55\u652f\u6301\u5730\u7406\u7a7a\u95f4\u6570\u636e"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"\u57fa\u672c\u8fde\u63a5\u548c\u7528\u6237\u7ba1\u7406",children:"\u57fa\u672c\u8fde\u63a5\u548c\u7528\u6237\u7ba1\u7406"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:"showLineNumbers",children:"-- \u8fde\u63a5\u5230 PostgreSQL\npsql -h hostname -U username -d database_name\n\n-- \u521b\u5efa\u7528\u6237\nCREATE USER username WITH PASSWORD 'password';\n\n-- \u521b\u5efa\u6570\u636e\u5e93\nCREATE DATABASE database_name;\n\n-- \u6388\u6743\u7528\u6237\u8bbf\u95ee\u6570\u636e\u5e93\nGRANT ALL PRIVILEGES ON DATABASE database_name TO username;\n\n-- \u67e5\u770b\u6240\u6709\u6570\u636e\u5e93\n\\l\n\n-- \u67e5\u770b\u6240\u6709\u7528\u6237\n\\du\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u8868\u64cd\u4f5c",children:"\u8868\u64cd\u4f5c"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:"showLineNumbers",children:"-- \u521b\u5efa\u8868\nCREATE TABLE users (\n    id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n-- \u67e5\u770b\u8868\u7ed3\u6784\n\\d table_name\n\n-- \u67e5\u770b\u6240\u6709\u8868\n\\dt\n\n-- \u5220\u9664\u8868\nDROP TABLE table_name;\n\n-- \u91cd\u547d\u540d\u8868\nALTER TABLE old_name RENAME TO new_name;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u5217\u64cd\u4f5c",children:"\u5217\u64cd\u4f5c"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:"showLineNumbers",children:"-- \u6dfb\u52a0\u5217\nALTER TABLE table_name ADD COLUMN column_name data_type [constraints];\n\n-- \u5220\u9664\u5217\nALTER TABLE table_name DROP COLUMN column_name;\n\n-- \u4fee\u6539\u5217\u7c7b\u578b\nALTER TABLE table_name ALTER COLUMN column_name TYPE new_data_type;\n\n-- \u91cd\u547d\u540d\u5217\nALTER TABLE table_name RENAME COLUMN old_name TO new_name;\n\n-- \u8bbe\u7f6e\u9ed8\u8ba4\u503c\nALTER TABLE table_name ALTER COLUMN column_name SET DEFAULT value;\n\n-- \u79fb\u9664\u9ed8\u8ba4\u503c\nALTER TABLE table_name ALTER COLUMN column_name DROP DEFAULT;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u6570\u636e\u64cd\u4f5c",children:"\u6570\u636e\u64cd\u4f5c"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:"showLineNumbers",children:"-- \u63d2\u5165\u6570\u636e\nINSERT INTO users (username, email) VALUES ('john_doe', 'john@example.com');\n\n-- \u6279\u91cf\u63d2\u5165\nINSERT INTO users (username, email) VALUES \n    ('user1', 'user1@example.com'),\n    ('user2', 'user2@example.com'),\n    ('user3', 'user3@example.com');\n\n-- \u66f4\u65b0\u6570\u636e\nUPDATE users SET email = 'new_email@example.com' WHERE username = 'john_doe';\n\n-- \u5220\u9664\u6570\u636e\nDELETE FROM users WHERE username = 'john_doe';\n\n-- \u67e5\u8be2\u6570\u636e\nSELECT * FROM users;\nSELECT username, email FROM users WHERE created_at > '2024-01-01';\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u9ad8\u7ea7\u67e5\u8be2\u529f\u80fd",children:"\u9ad8\u7ea7\u67e5\u8be2\u529f\u80fd"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:"showLineNumbers",children:"-- \u6761\u4ef6\u67e5\u8be2\nSELECT * FROM users WHERE username LIKE 'john%';\nSELECT * FROM users WHERE created_at BETWEEN '2024-01-01' AND '2024-12-31';\nSELECT * FROM users WHERE email IS NOT NULL;\n\n-- \u6392\u5e8f\nSELECT * FROM users ORDER BY created_at DESC;\nSELECT * FROM users ORDER BY username ASC, created_at DESC;\n\n-- \u9650\u5236\u7ed3\u679c\u6570\u91cf\nSELECT * FROM users LIMIT 10;\nSELECT * FROM users OFFSET 20 LIMIT 10;\n\n-- \u53bb\u91cd\nSELECT DISTINCT username FROM users;\n\n-- \u805a\u5408\u51fd\u6570\nSELECT COUNT(*) FROM users;\nSELECT AVG(EXTRACT(YEAR FROM created_at)) FROM users;\nSELECT username, COUNT(*) FROM posts GROUP BY username;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u7d22\u5f15\u548c\u6027\u80fd\u4f18\u5316",children:"\u7d22\u5f15\u548c\u6027\u80fd\u4f18\u5316"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:"showLineNumbers",children:"-- \u521b\u5efa\u7d22\u5f15\nCREATE INDEX idx_users_username ON users(username);\nCREATE INDEX idx_users_email ON users(email);\n\n-- \u521b\u5efa\u590d\u5408\u7d22\u5f15\nCREATE INDEX idx_users_username_email ON users(username, email);\n\n-- \u521b\u5efa\u552f\u4e00\u7d22\u5f15\nCREATE UNIQUE INDEX idx_users_email_unique ON users(email);\n\n-- \u67e5\u770b\u7d22\u5f15\n\\di\n\n-- \u5206\u6790\u67e5\u8be2\u6027\u80fd\nEXPLAIN ANALYZE SELECT * FROM users WHERE username = 'john_doe';\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u4e8b\u52a1\u548c\u5e76\u53d1\u63a7\u5236",children:"\u4e8b\u52a1\u548c\u5e76\u53d1\u63a7\u5236"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:"showLineNumbers",children:"-- \u5f00\u59cb\u4e8b\u52a1\nBEGIN;\n\n-- \u6267\u884c\u64cd\u4f5c\nINSERT INTO users (username, email) VALUES ('new_user', 'new@example.com');\nUPDATE users SET email = 'updated@example.com' WHERE username = 'john_doe';\n\n-- \u63d0\u4ea4\u4e8b\u52a1\nCOMMIT;\n\n-- \u56de\u6eda\u4e8b\u52a1\nROLLBACK;\n\n-- \u8bbe\u7f6e\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\nBEGIN TRANSACTION ISOLATION LEVEL SERIALIZABLE;\n"})}),"\n",(0,i.jsx)(n.h2,{id:"pgvector---postgresql-\u5411\u91cf\u6269\u5c55",children:"pgvector - PostgreSQL \u5411\u91cf\u6269\u5c55"}),"\n",(0,i.jsx)(n.p,{children:"pgvector \u662f\u4e00\u4e2a PostgreSQL \u6269\u5c55\uff0c\u7528\u4e8e\u5b58\u50a8\u548c\u67e5\u8be2\u5411\u91cf\u5d4c\u5165\u3002\u5b83\u652f\u6301\u591a\u79cd\u5411\u91cf\u76f8\u4f3c\u5ea6\u641c\u7d22\u7b97\u6cd5\uff0c\u662f\u6784\u5efa AI \u5e94\u7528\u548c\u5411\u91cf\u641c\u7d22\u7cfb\u7edf\u7684\u7406\u60f3\u9009\u62e9\u3002"}),"\n",(0,i.jsx)(n.h3,{id:"\u5b89\u88c5-pgvector",children:"\u5b89\u88c5 pgvector"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:"showLineNumbers",children:"-- \u5728 PostgreSQL \u4e2d\u521b\u5efa\u6269\u5c55\nCREATE EXTENSION IF NOT EXISTS vector;\n\n-- \u9a8c\u8bc1\u5b89\u88c5\nSELECT * FROM pg_extension WHERE extname = 'vector';\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u57fa\u672c\u5411\u91cf\u64cd\u4f5c",children:"\u57fa\u672c\u5411\u91cf\u64cd\u4f5c"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:"showLineNumbers",children:"-- \u521b\u5efa\u5305\u542b\u5411\u91cf\u5217\u7684\u8868\nCREATE TABLE items (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    embedding vector(1536)  -- OpenAI \u5d4c\u5165\u7ef4\u5ea6\n);\n\n-- \u63d2\u5165\u5411\u91cf\u6570\u636e\nINSERT INTO items (name, embedding) VALUES \n    ('item1', '[0.1, 0.2, 0.3, ...]'::vector),\n    ('item2', '[0.4, 0.5, 0.6, ...]'::vector);\n\n-- \u521b\u5efa\u5411\u91cf\u7d22\u5f15\nCREATE INDEX ON items USING ivfflat (embedding vector_cosine_ops);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u5411\u91cf\u76f8\u4f3c\u5ea6\u641c\u7d22",children:"\u5411\u91cf\u76f8\u4f3c\u5ea6\u641c\u7d22"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:"showLineNumbers",children:"-- \u4f59\u5f26\u76f8\u4f3c\u5ea6\u641c\u7d22\nSELECT name, embedding <=> '[0.1, 0.2, 0.3, ...]'::vector AS distance\nFROM items\nORDER BY embedding <=> '[0.1, 0.2, 0.3, ...]'::vector\nLIMIT 5;\n\n-- \u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u641c\u7d22\nSELECT name, embedding <-> '[0.1, 0.2, 0.3, ...]'::vector AS distance\nFROM items\nORDER BY embedding <-> '[0.1, 0.2, 0.3, ...]'::vector\nLIMIT 5;\n\n-- \u5185\u79ef\u76f8\u4f3c\u5ea6\u641c\u7d22\nSELECT name, embedding <#> '[0.1, 0.2, 0.3, ...]'::vector AS distance\nFROM items\nORDER BY embedding <#> '[0.1, 0.2, 0.3, ...]'::vector\nLIMIT 5;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u9ad8\u7ea7\u5411\u91cf\u529f\u80fd",children:"\u9ad8\u7ea7\u5411\u91cf\u529f\u80fd"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:"showLineNumbers",children:"-- \u6df7\u5408\u67e5\u8be2\uff1a\u7ed3\u5408\u5411\u91cf\u641c\u7d22\u548c\u4f20\u7edf SQL \u6761\u4ef6\nSELECT name, embedding <=> '[0.1, 0.2, 0.3, ...]'::vector AS distance\nFROM items\nWHERE name LIKE '%product%'\nORDER BY embedding <=> '[0.1, 0.2, 0.3, ...]'::vector\nLIMIT 10;\n\n-- \u6279\u91cf\u5411\u91cf\u641c\u7d22\nWITH query_vectors AS (\n    SELECT '[0.1, 0.2, 0.3, ...]'::vector AS query_vec\n    UNION ALL\n    SELECT '[0.4, 0.5, 0.6, ...]'::vector AS query_vec\n)\nSELECT i.name, i.embedding <=> qv.query_vec AS distance\nFROM items i\nCROSS JOIN query_vectors qv\nORDER BY distance\nLIMIT 20;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"python-\u96c6\u6210\u793a\u4f8b",children:"Python \u96c6\u6210\u793a\u4f8b"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:'import psycopg2\nimport numpy as np\nfrom configparser import ConfigParser\n\ndef config(filename="database.ini", section="postgresql"):\n    parser = ConfigParser()\n    parser.read(filename)\n    db = {}\n    if parser.has_section(section):\n        params = parser.items(section)\n        for param in params:\n            db[param[0]] = param[1]\n    else:\n        raise Exception(f"Section {section} not found in {filename}")\n    return db\n\ndef vector_search(query_vector, limit=5):\n    """\u6267\u884c\u5411\u91cf\u76f8\u4f3c\u5ea6\u641c\u7d22"""\n    conn = None\n    try:\n        params = config()\n        conn = psycopg2.connect(**params)\n        cur = conn.cursor()\n        \n        # \u5c06 numpy \u6570\u7ec4\u8f6c\u6362\u4e3a PostgreSQL \u5411\u91cf\u683c\u5f0f\n        vector_str = \'[\' + \',\'.join(map(str, query_vector)) + \']\'\n        \n        sql = f"""\n        SELECT name, embedding <=> \'{vector_str}\'::vector AS distance\n        FROM items\n        ORDER BY embedding <=> \'{vector_str}\'::vector\n        LIMIT {limit}\n        """\n        \n        cur.execute(sql)\n        results = cur.fetchall()\n        cur.close()\n        return results\n    except Exception as error:\n        print(f"Error: {error}")\n    finally:\n        if conn is not None:\n            conn.close()\n\ndef insert_vector(name, embedding):\n    """\u63d2\u5165\u5411\u91cf\u6570\u636e"""\n    conn = None\n    try:\n        params = config()\n        conn = psycopg2.connect(**params)\n        cur = conn.cursor()\n        \n        vector_str = \'[\' + \',\'.join(map(str, embedding)) + \']\'\n        \n        sql = "INSERT INTO items (name, embedding) VALUES (%s, %s::vector)"\n        cur.execute(sql, (name, vector_str))\n        conn.commit()\n        cur.close()\n        print("Vector inserted successfully")\n    except Exception as error:\n        print(f"Error: {error}")\n    finally:\n        if conn is not None:\n            conn.close()\n\n# \u4f7f\u7528\u793a\u4f8b\nif __name__ == "__main__":\n    # \u793a\u4f8b\u5411\u91cf\n    sample_vector = np.random.rand(1536)\n    \n    # \u63d2\u5165\u5411\u91cf\n    insert_vector("sample_item", sample_vector)\n    \n    # \u641c\u7d22\u76f8\u4f3c\u5411\u91cf\n    results = vector_search(sample_vector, limit=5)\n    for name, distance in results:\n        print(f"{name}: {distance}")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"\u6027\u80fd\u4f18\u5316\u5efa\u8bae",children:"\u6027\u80fd\u4f18\u5316\u5efa\u8bae"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:"showLineNumbers",children:"-- \u9009\u62e9\u5408\u9002\u7684\u7d22\u5f15\u7c7b\u578b\n-- \u5bf9\u4e8e\u5c0f\u5230\u4e2d\u7b49\u6570\u636e\u96c6\nCREATE INDEX ON items USING ivfflat (embedding vector_cosine_ops);\n\n-- \u5bf9\u4e8e\u5927\u6570\u636e\u96c6\uff0c\u4f7f\u7528 HNSW \u7d22\u5f15\nCREATE INDEX ON items USING hnsw (embedding vector_cosine_ops);\n\n-- \u8bbe\u7f6e\u7d22\u5f15\u53c2\u6570\nCREATE INDEX ON items USING ivfflat (embedding vector_cosine_ops) \nWITH (lists = 100);\n\n-- \u5206\u6790\u67e5\u8be2\u6027\u80fd\nEXPLAIN ANALYZE SELECT name, embedding <=> '[0.1, 0.2, 0.3, ...]'::vector AS distance\nFROM items\nORDER BY embedding <=> '[0.1, 0.2, 0.3, ...]'::vector\nLIMIT 5;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u5b9e\u9645\u5e94\u7528\u573a\u666f",children:"\u5b9e\u9645\u5e94\u7528\u573a\u666f"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u8bed\u4e49\u641c\u7d22"}),"\uff1a\u57fa\u4e8e\u6587\u672c\u5d4c\u5165\u7684\u76f8\u4f3c\u6587\u6863\u641c\u7d22"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u63a8\u8350\u7cfb\u7edf"}),"\uff1a\u57fa\u4e8e\u7528\u6237\u884c\u4e3a\u5411\u91cf\u7684\u5546\u54c1\u63a8\u8350"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u56fe\u50cf\u641c\u7d22"}),"\uff1a\u57fa\u4e8e\u56fe\u50cf\u5d4c\u5165\u7684\u76f8\u4f3c\u56fe\u7247\u641c\u7d22"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"RAG \u7cfb\u7edf"}),"\uff1a\u68c0\u7d22\u589e\u5f3a\u751f\u6210\u4e2d\u7684\u6587\u6863\u68c0\u7d22"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u5f02\u5e38\u68c0\u6d4b"}),"\uff1a\u57fa\u4e8e\u5411\u91cf\u8ddd\u79bb\u7684\u5f02\u5e38\u6a21\u5f0f\u8bc6\u522b"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"PostgreSQL \u914d\u5408 pgvector \u6269\u5c55\uff0c\u4e3a\u73b0\u4ee3 AI \u5e94\u7528\u63d0\u4f9b\u4e86\u5f3a\u5927\u800c\u7075\u6d3b\u7684\u5411\u91cf\u6570\u636e\u5e93\u89e3\u51b3\u65b9\u6848\uff0c\u65e2\u4fdd\u6301\u4e86\u5173\u7cfb\u6570\u636e\u5e93\u7684 ACID \u7279\u6027\uff0c\u53c8\u5177\u5907\u4e86\u5411\u91cf\u641c\u7d22\u7684\u80fd\u529b\u3002"})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var r=s(96540);const i={},t=r.createContext(i);function a(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);